ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/printf.c"
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_out_buffer:
  27              	.LVL0:
  28              	.LFB0:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 2


  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:Core/Src/printf.c **** 
  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** 
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:Core/Src/printf.c **** // printf_config.h header file
  41:Core/Src/printf.c **** // default: undefined
  42:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:Core/Src/printf.c **** #include "printf_config.h"
  44:Core/Src/printf.c **** #endif
  45:Core/Src/printf.c **** 
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:Core/Src/printf.c **** // default: 32 byte
  50:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:Core/Src/printf.c **** #endif
  53:Core/Src/printf.c **** 
  54:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:Core/Src/printf.c **** // default: 32 byte
  57:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:Core/Src/printf.c **** #endif
  60:Core/Src/printf.c **** 
  61:Core/Src/printf.c **** // support for the floating point type (%f)
  62:Core/Src/printf.c **** // default: activated
  63:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #endif
  66:Core/Src/printf.c **** 
  67:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  68:Core/Src/printf.c **** // default: activated
  69:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #endif
  72:Core/Src/printf.c **** 
  73:Core/Src/printf.c **** // define the default floating point precision
  74:Core/Src/printf.c **** // default: 6 digits
  75:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:Core/Src/printf.c **** #endif
  78:Core/Src/printf.c **** 
  79:Core/Src/printf.c **** // define the largest float suitable to print with %f
  80:Core/Src/printf.c **** // default: 1e9
  81:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:Core/Src/printf.c **** #endif
  84:Core/Src/printf.c **** 
  85:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  86:Core/Src/printf.c **** // default: activated
  87:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 3


  88:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:Core/Src/printf.c **** #endif
  90:Core/Src/printf.c **** 
  91:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  92:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:Core/Src/printf.c **** // default: activated
  94:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #endif
  97:Core/Src/printf.c **** 
  98:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:Core/Src/printf.c **** 
 100:Core/Src/printf.c **** // internal flag definitions
 101:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:Core/Src/printf.c **** 
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** // import float.h for DBL_MAX
 116:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:Core/Src/printf.c **** #include <float.h>
 118:Core/Src/printf.c **** #endif
 119:Core/Src/printf.c **** 
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** // output function type
 122:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:Core/Src/printf.c **** 
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 126:Core/Src/printf.c **** typedef struct {
 127:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 128:Core/Src/printf.c ****   void* arg;
 129:Core/Src/printf.c **** } out_fct_wrap_type;
 130:Core/Src/printf.c **** 
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** // internal buffer output
 133:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:Core/Src/printf.c **** {
  29              		.loc 1 134 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 135:Core/Src/printf.c ****   if (idx < maxlen) {
  34              		.loc 1 135 3 view .LVU1
  35              		.loc 1 135 6 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
  37 0002 00D2     		bcs	.L1
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 4


 136:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
  38              		.loc 1 136 5 is_stmt 1 view .LVU3
  39              		.loc 1 136 26 is_stmt 0 view .LVU4
  40 0004 8854     		strb	r0, [r1, r2]
  41              	.L1:
 137:Core/Src/printf.c ****   }
 138:Core/Src/printf.c **** }
  42              		.loc 1 138 1 view .LVU5
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	_out_null:
  54              	.LVL1:
  55              	.LFB1:
 139:Core/Src/printf.c **** 
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** // internal null output
 142:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:Core/Src/printf.c **** {
  56              		.loc 1 143 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 144:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  61              		.loc 1 144 3 view .LVU7
  62              		.loc 1 144 20 view .LVU8
  63              		.loc 1 144 34 view .LVU9
  64              		.loc 1 144 45 view .LVU10
 145:Core/Src/printf.c **** }
  65              		.loc 1 145 1 is_stmt 0 view .LVU11
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1:
  70              		.section	.text._out_fct,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_out_fct:
  77              	.LVL2:
  78              	.LFB3:
 146:Core/Src/printf.c **** 
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** // internal _putchar wrapper
 149:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:Core/Src/printf.c **** {
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:Core/Src/printf.c ****   if (character) {
 153:Core/Src/printf.c ****     _putchar(character);
 154:Core/Src/printf.c ****   }
 155:Core/Src/printf.c **** }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 5


 156:Core/Src/printf.c **** 
 157:Core/Src/printf.c **** 
 158:Core/Src/printf.c **** // internal output function wrapper
 159:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:Core/Src/printf.c **** {
  79              		.loc 1 160 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  83              		.loc 1 161 3 view .LVU13
  84              		.loc 1 161 14 view .LVU14
 162:Core/Src/printf.c ****   if (character) {
  85              		.loc 1 162 3 view .LVU15
  86              		.loc 1 162 6 is_stmt 0 view .LVU16
  87 0000 20B1     		cbz	r0, .L7
 160:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  88              		.loc 1 160 1 view .LVU17
  89 0002 08B5     		push	{r3, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 164:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
  94              		.loc 1 164 5 is_stmt 1 view .LVU18
  95              		.loc 1 164 33 is_stmt 0 view .LVU19
  96 0004 0A68     		ldr	r2, [r1]
  97              	.LVL3:
  98              		.loc 1 164 6 view .LVU20
  99 0006 4968     		ldr	r1, [r1, #4]
 100              	.LVL4:
 101              		.loc 1 164 6 view .LVU21
 102 0008 9047     		blx	r2
 103              	.LVL5:
 165:Core/Src/printf.c ****   }
 166:Core/Src/printf.c **** }
 104              		.loc 1 166 1 view .LVU22
 105 000a 08BD     		pop	{r3, pc}
 106              	.LVL6:
 107              	.L7:
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 0
 110              		.cfi_restore 3
 111              		.cfi_restore 14
 112              		.loc 1 166 1 view .LVU23
 113 000c 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE3:
 117              		.section	.text._atoi,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	_atoi:
 124              	.LVL7:
 125              	.LFB6:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 6


 167:Core/Src/printf.c **** 
 168:Core/Src/printf.c **** 
 169:Core/Src/printf.c **** // internal secure strlen
 170:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:Core/Src/printf.c **** {
 173:Core/Src/printf.c ****   const char* s;
 174:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 176:Core/Src/printf.c **** }
 177:Core/Src/printf.c **** 
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 180:Core/Src/printf.c **** // \return true if char is a digit
 181:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 182:Core/Src/printf.c **** {
 183:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:Core/Src/printf.c **** }
 185:Core/Src/printf.c **** 
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 188:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 189:Core/Src/printf.c **** {
 126              		.loc 1 189 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              		.loc 1 189 1 is_stmt 0 view .LVU25
 132 0000 0146     		mov	r1, r0
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 133              		.loc 1 190 3 is_stmt 1 view .LVU26
 134              	.LVL8:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 135              		.loc 1 191 3 view .LVU27
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 136              		.loc 1 190 16 is_stmt 0 view .LVU28
 137 0002 0020     		movs	r0, #0
 138              	.LVL9:
 139              		.loc 1 191 9 view .LVU29
 140 0004 08E0     		b	.L11
 141              	.LVL10:
 142              	.L12:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 143              		.loc 1 192 5 is_stmt 1 view .LVU30
 144              		.loc 1 192 11 is_stmt 0 view .LVU31
 145 0006 00EB8000 		add	r0, r0, r0, lsl #2
 146              	.LVL11:
 147              		.loc 1 192 42 view .LVU32
 148 000a 531C     		adds	r3, r2, #1
 149 000c 0B60     		str	r3, [r1]
 150              		.loc 1 192 34 view .LVU33
 151 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 152              		.loc 1 192 17 view .LVU34
 153 0010 03EB4003 		add	r3, r3, r0, lsl #1
 154              		.loc 1 192 7 view .LVU35
 155 0014 A3F13000 		sub	r0, r3, #48
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 7


 156              	.LVL12:
 157              	.L11:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 158              		.loc 1 191 10 is_stmt 1 view .LVU36
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 159              		.loc 1 191 21 is_stmt 0 view .LVU37
 160 0018 0A68     		ldr	r2, [r1]
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 161              		.loc 1 191 10 view .LVU38
 162 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163              	.LVL13:
 164              	.LBB20:
 165              	.LBI20:
 181:Core/Src/printf.c **** {
 166              		.loc 1 181 20 is_stmt 1 view .LVU39
 167              	.LBB21:
 183:Core/Src/printf.c **** }
 168              		.loc 1 183 3 view .LVU40
 183:Core/Src/printf.c **** }
 169              		.loc 1 183 22 is_stmt 0 view .LVU41
 170 001c 303B     		subs	r3, r3, #48
 171 001e DBB2     		uxtb	r3, r3
 172              	.LVL14:
 183:Core/Src/printf.c **** }
 173              		.loc 1 183 22 view .LVU42
 174              	.LBE21:
 175              	.LBE20:
 191:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 176              		.loc 1 191 10 discriminator 1 view .LVU43
 177 0020 092B     		cmp	r3, #9
 178 0022 F0D9     		bls	.L12
 193:Core/Src/printf.c ****   }
 194:Core/Src/printf.c ****   return i;
 179              		.loc 1 194 3 is_stmt 1 view .LVU44
 195:Core/Src/printf.c **** }
 180              		.loc 1 195 1 is_stmt 0 view .LVU45
 181 0024 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE6:
 185              		.section	.text._out_rev,"ax",%progbits
 186              		.align	1
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	_out_rev:
 192              	.LVL15:
 193              	.LFB7:
 196:Core/Src/printf.c **** 
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:Core/Src/printf.c **** {
 194              		.loc 1 200 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		.loc 1 200 1 is_stmt 0 view .LVU47
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 8


 199 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 36
 202              		.cfi_offset 4, -36
 203              		.cfi_offset 5, -32
 204              		.cfi_offset 6, -28
 205              		.cfi_offset 7, -24
 206              		.cfi_offset 8, -20
 207              		.cfi_offset 9, -16
 208              		.cfi_offset 10, -12
 209              		.cfi_offset 11, -8
 210              		.cfi_offset 14, -4
 211 0004 83B0     		sub	sp, sp, #12
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 48
 214 0006 0546     		mov	r5, r0
 215 0008 0E46     		mov	r6, r1
 216 000a 9346     		mov	fp, r2
 217 000c 1F46     		mov	r7, r3
 218 000e DDF830A0 		ldr	r10, [sp, #48]
 219 0012 0D9C     		ldr	r4, [sp, #52]
 220 0014 DDF83890 		ldr	r9, [sp, #56]
 201:Core/Src/printf.c ****   const size_t start_idx = idx;
 221              		.loc 1 201 3 is_stmt 1 view .LVU48
 222              	.LVL16:
 202:Core/Src/printf.c **** 
 203:Core/Src/printf.c ****   // pad spaces up to given width
 204:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 223              		.loc 1 204 3 view .LVU49
 224              		.loc 1 204 6 is_stmt 0 view .LVU50
 225 0018 0F9B     		ldr	r3, [sp, #60]
 226              	.LVL17:
 227              		.loc 1 204 6 view .LVU51
 228 001a 13F0030F 		tst	r3, #3
 229 001e 19D1     		bne	.L17
 230              	.LBB22:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 231              		.loc 1 205 17 view .LVU52
 232 0020 A046     		mov	r8, r4
 233              	.LBE22:
 234 0022 0192     		str	r2, [sp, #4]
 235 0024 08E0     		b	.L14
 236              	.LVL18:
 237              	.L16:
 238              	.LBB23:
 206:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 239              		.loc 1 206 7 is_stmt 1 view .LVU53
 240 0026 02F1010B 		add	fp, r2, #1
 241              	.LVL19:
 242              		.loc 1 206 7 is_stmt 0 view .LVU54
 243 002a 3B46     		mov	r3, r7
 244 002c 3146     		mov	r1, r6
 245 002e 2020     		movs	r0, #32
 246 0030 A847     		blx	r5
 247              	.LVL20:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 248              		.loc 1 205 38 is_stmt 1 discriminator 3 view .LVU55
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 9


 249 0032 08F10108 		add	r8, r8, #1
 250              	.LVL21:
 251              		.loc 1 206 7 is_stmt 0 view .LVU56
 252 0036 5A46     		mov	r2, fp
 253              	.LVL22:
 254              	.L14:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 255              		.loc 1 205 28 is_stmt 1 discriminator 1 view .LVU57
 256 0038 C845     		cmp	r8, r9
 257 003a F4D3     		bcc	.L16
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 258              		.loc 1 205 28 is_stmt 0 discriminator 1 view .LVU58
 259 003c DDF804B0 		ldr	fp, [sp, #4]
 260 0040 08E0     		b	.L17
 261              	.LVL23:
 262              	.L18:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 263              		.loc 1 205 28 discriminator 1 view .LVU59
 264              	.LBE23:
 207:Core/Src/printf.c ****     }
 208:Core/Src/printf.c ****   }
 209:Core/Src/printf.c **** 
 210:Core/Src/printf.c ****   // reverse string
 211:Core/Src/printf.c ****   while (len) {
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 265              		.loc 1 212 5 is_stmt 1 view .LVU60
 266 0042 013C     		subs	r4, r4, #1
 267              	.LVL24:
 268              		.loc 1 212 5 is_stmt 0 view .LVU61
 269 0044 02F10108 		add	r8, r2, #1
 270              	.LVL25:
 271              		.loc 1 212 5 view .LVU62
 272 0048 3B46     		mov	r3, r7
 273 004a 3146     		mov	r1, r6
 274 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 275 0050 A847     		blx	r5
 276              	.LVL26:
 277 0052 4246     		mov	r2, r8
 278              	.LVL27:
 279              	.L17:
 211:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 280              		.loc 1 211 10 is_stmt 1 view .LVU63
 281 0054 002C     		cmp	r4, #0
 282 0056 F4D1     		bne	.L18
 213:Core/Src/printf.c ****   }
 214:Core/Src/printf.c **** 
 215:Core/Src/printf.c ****   // append pad spaces up to given width
 216:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 283              		.loc 1 216 3 view .LVU64
 284              		.loc 1 216 6 is_stmt 0 view .LVU65
 285 0058 0F9B     		ldr	r3, [sp, #60]
 286 005a 13F0020F 		tst	r3, #2
 287 005e 09D1     		bne	.L19
 288              	.LVL28:
 289              	.L13:
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 218:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 10


 219:Core/Src/printf.c ****     }
 220:Core/Src/printf.c ****   }
 221:Core/Src/printf.c **** 
 222:Core/Src/printf.c ****   return idx;
 223:Core/Src/printf.c **** }
 290              		.loc 1 223 1 view .LVU66
 291 0060 1046     		mov	r0, r2
 292 0062 03B0     		add	sp, sp, #12
 293              	.LCFI4:
 294              		.cfi_remember_state
 295              		.cfi_def_cfa_offset 36
 296              		@ sp needed
 297 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 298              	.LVL29:
 299              	.L21:
 300              	.LCFI5:
 301              		.cfi_restore_state
 218:Core/Src/printf.c ****     }
 302              		.loc 1 218 7 is_stmt 1 view .LVU67
 303 0068 541C     		adds	r4, r2, #1
 304              	.LVL30:
 218:Core/Src/printf.c ****     }
 305              		.loc 1 218 7 is_stmt 0 view .LVU68
 306 006a 3B46     		mov	r3, r7
 307 006c 3146     		mov	r1, r6
 308 006e 2020     		movs	r0, #32
 309 0070 A847     		blx	r5
 310              	.LVL31:
 311 0072 2246     		mov	r2, r4
 312              	.LVL32:
 313              	.L19:
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 314              		.loc 1 217 28 is_stmt 1 view .LVU69
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 315              		.loc 1 217 16 is_stmt 0 view .LVU70
 316 0074 A2EB0B03 		sub	r3, r2, fp
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 317              		.loc 1 217 28 view .LVU71
 318 0078 4B45     		cmp	r3, r9
 319 007a F5D3     		bcc	.L21
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 320              		.loc 1 217 28 view .LVU72
 321 007c F0E7     		b	.L13
 322              		.cfi_endproc
 323              	.LFE7:
 325              		.section	.text._ntoa_format,"ax",%progbits
 326              		.align	1
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	_ntoa_format:
 332              	.LVL33:
 333              	.LFB8:
 224:Core/Src/printf.c **** 
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** // internal itoa format
 227:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 11


 228:Core/Src/printf.c **** {
 334              		.loc 1 228 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 28, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		.loc 1 228 1 is_stmt 0 view .LVU74
 339 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 340              	.LCFI6:
 341              		.cfi_def_cfa_offset 28
 342              		.cfi_offset 4, -28
 343              		.cfi_offset 5, -24
 344              		.cfi_offset 6, -20
 345              		.cfi_offset 7, -16
 346              		.cfi_offset 8, -12
 347              		.cfi_offset 9, -8
 348              		.cfi_offset 14, -4
 349 0004 85B0     		sub	sp, sp, #20
 350              	.LCFI7:
 351              		.cfi_def_cfa_offset 48
 352 0006 9946     		mov	r9, r3
 353 0008 0C9D     		ldr	r5, [sp, #48]
 354 000a 0D9C     		ldr	r4, [sp, #52]
 355 000c 9DF83880 		ldrb	r8, [sp, #56]	@ zero_extendqisi2
 356 0010 DDF840E0 		ldr	lr, [sp, #64]
 357 0014 119F     		ldr	r7, [sp, #68]
 358 0016 129E     		ldr	r6, [sp, #72]
 229:Core/Src/printf.c ****   // pad leading zeros
 230:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 359              		.loc 1 230 3 is_stmt 1 view .LVU75
 360              		.loc 1 230 6 is_stmt 0 view .LVU76
 361 0018 16F0020F 		tst	r6, #2
 362 001c 21D1     		bne	.L26
 231:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 363              		.loc 1 231 5 is_stmt 1 view .LVU77
 364              		.loc 1 231 8 is_stmt 0 view .LVU78
 365 001e 7FB1     		cbz	r7, .L29
 366              		.loc 1 231 15 discriminator 1 view .LVU79
 367 0020 16F0010F 		tst	r6, #1
 368 0024 0CD0     		beq	.L29
 369              		.loc 1 231 42 discriminator 2 view .LVU80
 370 0026 B8F1000F 		cmp	r8, #0
 371 002a 02D1     		bne	.L28
 372              		.loc 1 231 55 discriminator 3 view .LVU81
 373 002c 16F00C0F 		tst	r6, #12
 374 0030 06D0     		beq	.L29
 375              	.L28:
 232:Core/Src/printf.c ****       width--;
 376              		.loc 1 232 7 is_stmt 1 view .LVU82
 377              		.loc 1 232 12 is_stmt 0 view .LVU83
 378 0032 013F     		subs	r7, r7, #1
 379              	.LVL34:
 380              		.loc 1 232 12 view .LVU84
 381 0034 04E0     		b	.L29
 382              	.LVL35:
 383              	.L31:
 233:Core/Src/printf.c ****     }
 234:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 12


 235:Core/Src/printf.c ****       buf[len++] = '0';
 384              		.loc 1 235 7 is_stmt 1 view .LVU85
 385              		.loc 1 235 18 is_stmt 0 view .LVU86
 386 0036 4FF0300C 		mov	ip, #48
 387 003a 05F804C0 		strb	ip, [r5, r4]
 388              		.loc 1 235 14 view .LVU87
 389 003e 0134     		adds	r4, r4, #1
 390              	.LVL36:
 391              	.L29:
 234:Core/Src/printf.c ****       buf[len++] = '0';
 392              		.loc 1 234 25 is_stmt 1 view .LVU88
 393 0040 7445     		cmp	r4, lr
 394 0042 01D2     		bcs	.L32
 234:Core/Src/printf.c ****       buf[len++] = '0';
 395              		.loc 1 234 25 is_stmt 0 discriminator 1 view .LVU89
 396 0044 1F2C     		cmp	r4, #31
 397 0046 F6D9     		bls	.L31
 398              	.L32:
 236:Core/Src/printf.c ****     }
 237:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 399              		.loc 1 237 53 is_stmt 1 view .LVU90
 400 0048 16F0010F 		tst	r6, #1
 401 004c 09D0     		beq	.L26
 402              		.loc 1 237 36 is_stmt 0 discriminator 1 view .LVU91
 403 004e BC42     		cmp	r4, r7
 404 0050 07D2     		bcs	.L26
 405              		.loc 1 237 53 discriminator 2 view .LVU92
 406 0052 1F2C     		cmp	r4, #31
 407 0054 05D8     		bhi	.L26
 238:Core/Src/printf.c ****       buf[len++] = '0';
 408              		.loc 1 238 7 is_stmt 1 view .LVU93
 409              	.LVL37:
 410              		.loc 1 238 18 is_stmt 0 view .LVU94
 411 0056 4FF0300C 		mov	ip, #48
 412 005a 05F804C0 		strb	ip, [r5, r4]
 413              		.loc 1 238 14 view .LVU95
 414 005e 0134     		adds	r4, r4, #1
 415              	.LVL38:
 416              		.loc 1 238 14 view .LVU96
 417 0060 F2E7     		b	.L32
 418              	.LVL39:
 419              	.L26:
 239:Core/Src/printf.c ****     }
 240:Core/Src/printf.c ****   }
 241:Core/Src/printf.c **** 
 242:Core/Src/printf.c ****   // handle hash
 243:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 420              		.loc 1 243 3 is_stmt 1 view .LVU97
 421              		.loc 1 243 6 is_stmt 0 view .LVU98
 422 0062 16F0100F 		tst	r6, #16
 423 0066 14D0     		beq	.L34
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 424              		.loc 1 244 5 is_stmt 1 view .LVU99
 425              		.loc 1 244 8 is_stmt 0 view .LVU100
 426 0068 16F4806F 		tst	r6, #1024
 427 006c 04D1     		bne	.L35
 428              		.loc 1 244 36 discriminator 1 view .LVU101
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 13


 429 006e 1CB1     		cbz	r4, .L35
 430              		.loc 1 244 43 discriminator 2 view .LVU102
 431 0070 7445     		cmp	r4, lr
 432 0072 22D0     		beq	.L36
 433              		.loc 1 244 61 discriminator 3 view .LVU103
 434 0074 BC42     		cmp	r4, r7
 435 0076 20D0     		beq	.L36
 436              	.L35:
 245:Core/Src/printf.c ****       len--;
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 247:Core/Src/printf.c ****         len--;
 248:Core/Src/printf.c ****       }
 249:Core/Src/printf.c ****     }
 250:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 437              		.loc 1 250 5 is_stmt 1 view .LVU104
 438              		.loc 1 250 8 is_stmt 0 view .LVU105
 439 0078 0F9B     		ldr	r3, [sp, #60]
 440              	.LVL40:
 441              		.loc 1 250 8 view .LVU106
 442 007a 102B     		cmp	r3, #16
 443 007c 33D0     		beq	.L38
 444              	.LVL41:
 445              	.L39:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 252:Core/Src/printf.c ****     }
 253:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 255:Core/Src/printf.c ****     }
 256:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 446              		.loc 1 256 10 is_stmt 1 view .LVU107
 447              		.loc 1 256 13 is_stmt 0 view .LVU108
 448 007e 0F9B     		ldr	r3, [sp, #60]
 449 0080 022B     		cmp	r3, #2
 450 0082 3DD0     		beq	.L47
 451              	.L40:
 452              	.LVL42:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 258:Core/Src/printf.c ****     }
 259:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 453              		.loc 1 259 5 is_stmt 1 view .LVU109
 454              		.loc 1 259 8 is_stmt 0 view .LVU110
 455 0084 1F2C     		cmp	r4, #31
 456 0086 0ED8     		bhi	.L41
 260:Core/Src/printf.c ****       buf[len++] = '0';
 457              		.loc 1 260 7 is_stmt 1 view .LVU111
 458              	.LVL43:
 459              		.loc 1 260 18 is_stmt 0 view .LVU112
 460 0088 4FF0300C 		mov	ip, #48
 461 008c 05F804C0 		strb	ip, [r5, r4]
 462              		.loc 1 260 14 view .LVU113
 463 0090 0134     		adds	r4, r4, #1
 464              	.LVL44:
 465              	.L34:
 261:Core/Src/printf.c ****     }
 262:Core/Src/printf.c ****   }
 263:Core/Src/printf.c **** 
 264:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 14


 466              		.loc 1 264 3 is_stmt 1 view .LVU114
 467              		.loc 1 264 6 is_stmt 0 view .LVU115
 468 0092 1F2C     		cmp	r4, #31
 469 0094 07D8     		bhi	.L41
 265:Core/Src/printf.c ****     if (negative) {
 470              		.loc 1 265 5 is_stmt 1 view .LVU116
 471              		.loc 1 265 8 is_stmt 0 view .LVU117
 472 0096 B8F1000F 		cmp	r8, #0
 473 009a 39D0     		beq	.L42
 266:Core/Src/printf.c ****       buf[len++] = '-';
 474              		.loc 1 266 7 is_stmt 1 view .LVU118
 475              	.LVL45:
 476              		.loc 1 266 18 is_stmt 0 view .LVU119
 477 009c 4FF02D0C 		mov	ip, #45
 478 00a0 05F804C0 		strb	ip, [r5, r4]
 479              		.loc 1 266 14 view .LVU120
 480 00a4 0134     		adds	r4, r4, #1
 481              	.LVL46:
 482              	.L41:
 267:Core/Src/printf.c ****     }
 268:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:Core/Src/printf.c ****     }
 271:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 273:Core/Src/printf.c ****     }
 274:Core/Src/printf.c ****   }
 275:Core/Src/printf.c **** 
 276:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 483              		.loc 1 276 3 is_stmt 1 view .LVU121
 484              		.loc 1 276 10 is_stmt 0 view .LVU122
 485 00a6 0396     		str	r6, [sp, #12]
 486 00a8 0297     		str	r7, [sp, #8]
 487 00aa 0194     		str	r4, [sp, #4]
 488 00ac 0095     		str	r5, [sp]
 489 00ae 4B46     		mov	r3, r9
 490 00b0 FFF7FEFF 		bl	_out_rev
 491              	.LVL47:
 277:Core/Src/printf.c **** }
 492              		.loc 1 277 1 view .LVU123
 493 00b4 05B0     		add	sp, sp, #20
 494              	.LCFI8:
 495              		.cfi_remember_state
 496              		.cfi_def_cfa_offset 28
 497              		@ sp needed
 498 00b6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 499              	.LVL48:
 500              	.L36:
 501              	.LCFI9:
 502              		.cfi_restore_state
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 503              		.loc 1 245 7 is_stmt 1 view .LVU124
 246:Core/Src/printf.c ****         len--;
 504              		.loc 1 246 7 view .LVU125
 246:Core/Src/printf.c ****         len--;
 505              		.loc 1 246 10 is_stmt 0 view .LVU126
 506 00ba B4F1010C 		subs	ip, r4, #1
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 15


 507              	.LVL49:
 246:Core/Src/printf.c ****         len--;
 508              		.loc 1 246 10 view .LVU127
 509 00be 1DD0     		beq	.L44
 246:Core/Src/printf.c ****         len--;
 510              		.loc 1 246 15 discriminator 1 view .LVU128
 511 00c0 0F9B     		ldr	r3, [sp, #60]
 512              	.LVL50:
 246:Core/Src/printf.c ****         len--;
 513              		.loc 1 246 15 discriminator 1 view .LVU129
 514 00c2 102B     		cmp	r3, #16
 515 00c4 0ED0     		beq	.L48
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 516              		.loc 1 245 10 view .LVU130
 517 00c6 6446     		mov	r4, ip
 518              	.LVL51:
 519              	.L37:
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 520              		.loc 1 253 10 is_stmt 1 view .LVU131
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 521              		.loc 1 253 13 is_stmt 0 view .LVU132
 522 00c8 0F9B     		ldr	r3, [sp, #60]
 523 00ca 102B     		cmp	r3, #16
 524 00cc D7D1     		bne	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 525              		.loc 1 253 28 discriminator 1 view .LVU133
 526 00ce 16F0200F 		tst	r6, #32
 527 00d2 D4D0     		beq	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 528              		.loc 1 253 57 discriminator 2 view .LVU134
 529 00d4 1F2C     		cmp	r4, #31
 530 00d6 D2D8     		bhi	.L39
 254:Core/Src/printf.c ****     }
 531              		.loc 1 254 7 is_stmt 1 view .LVU135
 532              	.LVL52:
 254:Core/Src/printf.c ****     }
 533              		.loc 1 254 18 is_stmt 0 view .LVU136
 534 00d8 4FF0580C 		mov	ip, #88
 535 00dc 05F804C0 		strb	ip, [r5, r4]
 254:Core/Src/printf.c ****     }
 536              		.loc 1 254 14 view .LVU137
 537 00e0 0134     		adds	r4, r4, #1
 538              	.LVL53:
 254:Core/Src/printf.c ****     }
 539              		.loc 1 254 18 view .LVU138
 540 00e2 CFE7     		b	.L40
 541              	.LVL54:
 542              	.L48:
 247:Core/Src/printf.c ****       }
 543              		.loc 1 247 9 is_stmt 1 view .LVU139
 247:Core/Src/printf.c ****       }
 544              		.loc 1 247 12 is_stmt 0 view .LVU140
 545 00e4 023C     		subs	r4, r4, #2
 546              	.LVL55:
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 547              		.loc 1 250 5 is_stmt 1 view .LVU141
 548              	.L38:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 16


 250:Core/Src/printf.c ****       buf[len++] = 'x';
 549              		.loc 1 250 23 is_stmt 0 discriminator 1 view .LVU142
 550 00e6 16F0200F 		tst	r6, #32
 551 00ea EDD1     		bne	.L37
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 552              		.loc 1 250 53 discriminator 2 view .LVU143
 553 00ec 1F2C     		cmp	r4, #31
 554 00ee EBD8     		bhi	.L37
 251:Core/Src/printf.c ****     }
 555              		.loc 1 251 7 is_stmt 1 view .LVU144
 556              	.LVL56:
 251:Core/Src/printf.c ****     }
 557              		.loc 1 251 18 is_stmt 0 view .LVU145
 558 00f0 4FF0780C 		mov	ip, #120
 559 00f4 05F804C0 		strb	ip, [r5, r4]
 251:Core/Src/printf.c ****     }
 560              		.loc 1 251 14 view .LVU146
 561 00f8 0134     		adds	r4, r4, #1
 562              	.LVL57:
 251:Core/Src/printf.c ****     }
 563              		.loc 1 251 18 view .LVU147
 564 00fa C3E7     		b	.L40
 565              	.LVL58:
 566              	.L44:
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 567              		.loc 1 245 10 view .LVU148
 568 00fc 6446     		mov	r4, ip
 569 00fe BBE7     		b	.L35
 570              	.LVL59:
 571              	.L47:
 256:Core/Src/printf.c ****       buf[len++] = 'b';
 572              		.loc 1 256 27 discriminator 1 view .LVU149
 573 0100 1F2C     		cmp	r4, #31
 574 0102 D0D8     		bhi	.L41
 257:Core/Src/printf.c ****     }
 575              		.loc 1 257 7 is_stmt 1 view .LVU150
 576              	.LVL60:
 257:Core/Src/printf.c ****     }
 577              		.loc 1 257 18 is_stmt 0 view .LVU151
 578 0104 4FF0620C 		mov	ip, #98
 579 0108 05F804C0 		strb	ip, [r5, r4]
 257:Core/Src/printf.c ****     }
 580              		.loc 1 257 14 view .LVU152
 581 010c 0134     		adds	r4, r4, #1
 582              	.LVL61:
 257:Core/Src/printf.c ****     }
 583              		.loc 1 257 14 view .LVU153
 584 010e B9E7     		b	.L40
 585              	.L42:
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 586              		.loc 1 268 10 is_stmt 1 view .LVU154
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 587              		.loc 1 268 13 is_stmt 0 view .LVU155
 588 0110 16F0040F 		tst	r6, #4
 589 0114 05D0     		beq	.L43
 269:Core/Src/printf.c ****     }
 590              		.loc 1 269 7 is_stmt 1 view .LVU156
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 17


 591              	.LVL62:
 269:Core/Src/printf.c ****     }
 592              		.loc 1 269 18 is_stmt 0 view .LVU157
 593 0116 4FF02B0C 		mov	ip, #43
 594 011a 05F804C0 		strb	ip, [r5, r4]
 269:Core/Src/printf.c ****     }
 595              		.loc 1 269 14 view .LVU158
 596 011e 0134     		adds	r4, r4, #1
 597              	.LVL63:
 269:Core/Src/printf.c ****     }
 598              		.loc 1 269 14 view .LVU159
 599 0120 C1E7     		b	.L41
 600              	.L43:
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 601              		.loc 1 271 10 is_stmt 1 view .LVU160
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 602              		.loc 1 271 13 is_stmt 0 view .LVU161
 603 0122 16F0080F 		tst	r6, #8
 604 0126 BED0     		beq	.L41
 272:Core/Src/printf.c ****     }
 605              		.loc 1 272 7 is_stmt 1 view .LVU162
 606              	.LVL64:
 272:Core/Src/printf.c ****     }
 607              		.loc 1 272 18 is_stmt 0 view .LVU163
 608 0128 4FF0200C 		mov	ip, #32
 609 012c 05F804C0 		strb	ip, [r5, r4]
 272:Core/Src/printf.c ****     }
 610              		.loc 1 272 14 view .LVU164
 611 0130 0134     		adds	r4, r4, #1
 612              	.LVL65:
 272:Core/Src/printf.c ****     }
 613              		.loc 1 272 14 view .LVU165
 614 0132 B8E7     		b	.L41
 615              		.cfi_endproc
 616              	.LFE8:
 618              		.section	.text._ntoa_long,"ax",%progbits
 619              		.align	1
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	_ntoa_long:
 625              	.LVL66:
 626              	.LFB9:
 278:Core/Src/printf.c **** 
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** // internal itoa for 'long' type
 281:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:Core/Src/printf.c **** {
 627              		.loc 1 282 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 24, pretend = 0, frame = 32
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		.loc 1 282 1 is_stmt 0 view .LVU167
 632 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 633              	.LCFI10:
 634              		.cfi_def_cfa_offset 20
 635              		.cfi_offset 4, -20
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 18


 636              		.cfi_offset 5, -16
 637              		.cfi_offset 6, -12
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 91B0     		sub	sp, sp, #68
 641              	.LCFI11:
 642              		.cfi_def_cfa_offset 88
 643 0004 169C     		ldr	r4, [sp, #88]
 644 0006 189D     		ldr	r5, [sp, #96]
 645 0008 1B9E     		ldr	r6, [sp, #108]
 283:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 646              		.loc 1 283 3 is_stmt 1 view .LVU168
 284:Core/Src/printf.c ****   size_t len = 0U;
 647              		.loc 1 284 3 view .LVU169
 648              	.LVL67:
 285:Core/Src/printf.c **** 
 286:Core/Src/printf.c ****   // no hash for 0 values
 287:Core/Src/printf.c ****   if (!value) {
 649              		.loc 1 287 3 view .LVU170
 650              		.loc 1 287 6 is_stmt 0 view .LVU171
 651 000a 0CB9     		cbnz	r4, .L50
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 652              		.loc 1 288 5 is_stmt 1 view .LVU172
 653              		.loc 1 288 11 is_stmt 0 view .LVU173
 654 000c 26F01006 		bic	r6, r6, #16
 655              	.L50:
 656              	.LVL68:
 289:Core/Src/printf.c ****   }
 290:Core/Src/printf.c **** 
 291:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 292:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 657              		.loc 1 292 3 is_stmt 1 view .LVU174
 658              		.loc 1 292 6 is_stmt 0 view .LVU175
 659 0010 16F4806E 		ands	lr, r6, #1024
 660 0014 1DD0     		beq	.L56
 661              		.loc 1 292 34 discriminator 1 view .LVU176
 662 0016 64B3     		cbz	r4, .L57
 663 0018 4FF0000E 		mov	lr, #0
 664 001c 19E0     		b	.L56
 665              	.LVL69:
 666              	.L53:
 667              	.LBB24:
 293:Core/Src/printf.c ****     do {
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 668              		.loc 1 295 85 discriminator 2 view .LVU177
 669 001e 16F0200F 		tst	r6, #32
 670 0022 24D0     		beq	.L58
 671              		.loc 1 295 85 discriminator 4 view .LVU178
 672 0024 4127     		movs	r7, #65
 673              	.L55:
 674              		.loc 1 295 85 discriminator 7 view .LVU179
 675 0026 BC44     		add	ip, ip, r7
 676              	.LVL70:
 677              		.loc 1 295 85 discriminator 7 view .LVU180
 678 0028 5FFA8CFC 		uxtb	ip, ip
 679              		.loc 1 295 18 discriminator 7 view .LVU181
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 19


 680 002c ACF10A0C 		sub	ip, ip, #10
 681 0030 5FFA8CFC 		uxtb	ip, ip
 682              	.L54:
 683              		.loc 1 295 14 discriminator 8 view .LVU182
 684 0034 0EF10107 		add	r7, lr, #1
 685              	.LVL71:
 686              		.loc 1 295 18 discriminator 8 view .LVU183
 687 0038 0EF1400E 		add	lr, lr, #64
 688 003c EE44     		add	lr, sp, lr
 689 003e 0EF820CC 		strb	ip, [lr, #-32]
 296:Core/Src/printf.c ****       value /= base;
 690              		.loc 1 296 7 is_stmt 1 view .LVU184
 691              		.loc 1 296 13 is_stmt 0 view .LVU185
 692 0042 B4FBF5FC 		udiv	ip, r4, r5
 693              	.LVL72:
 694              		.loc 1 296 13 view .LVU186
 695              	.LBE24:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 696              		.loc 1 297 20 is_stmt 1 view .LVU187
 697 0046 AC42     		cmp	r4, r5
 698 0048 14D3     		bcc	.L52
 699              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU188
 700 004a 1F2F     		cmp	r7, #31
 701 004c 12D8     		bhi	.L52
 702              	.LBB25:
 295:Core/Src/printf.c ****       value /= base;
 703              		.loc 1 295 14 discriminator 8 view .LVU189
 704 004e BE46     		mov	lr, r7
 296:Core/Src/printf.c ****       value /= base;
 705              		.loc 1 296 13 view .LVU190
 706 0050 6446     		mov	r4, ip
 707              	.LVL73:
 708              	.L56:
 296:Core/Src/printf.c ****       value /= base;
 709              		.loc 1 296 13 view .LVU191
 710              	.LBE25:
 293:Core/Src/printf.c ****       const char digit = (char)(value % base);
 711              		.loc 1 293 5 is_stmt 1 view .LVU192
 712              	.LBB26:
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 713              		.loc 1 294 7 view .LVU193
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 714              		.loc 1 294 39 is_stmt 0 view .LVU194
 715 0052 B4FBF5FC 		udiv	ip, r4, r5
 716 0056 05FB1C4C 		mls	ip, r5, ip, r4
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 717              		.loc 1 294 18 view .LVU195
 718 005a 5FFA8CFC 		uxtb	ip, ip
 719              	.LVL74:
 295:Core/Src/printf.c ****       value /= base;
 720              		.loc 1 295 7 is_stmt 1 view .LVU196
 295:Core/Src/printf.c ****       value /= base;
 721              		.loc 1 295 18 is_stmt 0 view .LVU197
 722 005e BCF1090F 		cmp	ip, #9
 723 0062 DCD8     		bhi	.L53
 295:Core/Src/printf.c ****       value /= base;
 724              		.loc 1 295 18 discriminator 1 view .LVU198
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 20


 725 0064 0CF1300C 		add	ip, ip, #48
 726              	.LVL75:
 295:Core/Src/printf.c ****       value /= base;
 727              		.loc 1 295 18 discriminator 1 view .LVU199
 728 0068 5FFA8CFC 		uxtb	ip, ip
 729              	.LVL76:
 295:Core/Src/printf.c ****       value /= base;
 730              		.loc 1 295 18 discriminator 1 view .LVU200
 731 006c E2E7     		b	.L54
 732              	.LVL77:
 733              	.L58:
 295:Core/Src/printf.c ****       value /= base;
 734              		.loc 1 295 85 discriminator 5 view .LVU201
 735 006e 6127     		movs	r7, #97
 736 0070 D9E7     		b	.L55
 737              	.LVL78:
 738              	.L57:
 295:Core/Src/printf.c ****       value /= base;
 739              		.loc 1 295 85 discriminator 5 view .LVU202
 740              	.LBE26:
 284:Core/Src/printf.c **** 
 741              		.loc 1 284 10 view .LVU203
 742 0072 2746     		mov	r7, r4
 743              	.LVL79:
 744              	.L52:
 298:Core/Src/printf.c ****   }
 299:Core/Src/printf.c **** 
 300:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 745              		.loc 1 300 3 is_stmt 1 view .LVU204
 746              		.loc 1 300 10 is_stmt 0 view .LVU205
 747 0074 0696     		str	r6, [sp, #24]
 748 0076 1A9C     		ldr	r4, [sp, #104]
 749 0078 0594     		str	r4, [sp, #20]
 750 007a 199C     		ldr	r4, [sp, #100]
 751 007c 0494     		str	r4, [sp, #16]
 752 007e 0395     		str	r5, [sp, #12]
 753 0080 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 754 0084 0294     		str	r4, [sp, #8]
 755 0086 0197     		str	r7, [sp, #4]
 756 0088 08AC     		add	r4, sp, #32
 757 008a 0094     		str	r4, [sp]
 758 008c FFF7FEFF 		bl	_ntoa_format
 759              	.LVL80:
 301:Core/Src/printf.c **** }
 760              		.loc 1 301 1 view .LVU206
 761 0090 11B0     		add	sp, sp, #68
 762              	.LCFI12:
 763              		.cfi_def_cfa_offset 20
 764              		@ sp needed
 765 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 766              		.loc 1 301 1 view .LVU207
 767              		.cfi_endproc
 768              	.LFE9:
 770              		.section	.text._ntoa_long_long,"ax",%progbits
 771              		.align	1
 772              		.syntax unified
 773              		.thumb
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 21


 774              		.thumb_func
 776              	_ntoa_long_long:
 777              	.LVL81:
 778              	.LFB10:
 302:Core/Src/printf.c **** 
 303:Core/Src/printf.c **** 
 304:Core/Src/printf.c **** // internal itoa for 'long long' type
 305:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:Core/Src/printf.c **** {
 779              		.loc 1 307 1 is_stmt 1 view -0
 780              		.cfi_startproc
 781              		@ args = 36, pretend = 0, frame = 48
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		.loc 1 307 1 is_stmt 0 view .LVU209
 784 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 785              	.LCFI13:
 786              		.cfi_def_cfa_offset 36
 787              		.cfi_offset 4, -36
 788              		.cfi_offset 5, -32
 789              		.cfi_offset 6, -28
 790              		.cfi_offset 7, -24
 791              		.cfi_offset 8, -20
 792              		.cfi_offset 9, -16
 793              		.cfi_offset 10, -12
 794              		.cfi_offset 11, -8
 795              		.cfi_offset 14, -4
 796 0004 95B0     		sub	sp, sp, #84
 797              	.LCFI14:
 798              		.cfi_def_cfa_offset 120
 799 0006 0990     		str	r0, [sp, #36]
 800 0008 0A91     		str	r1, [sp, #40]
 801 000a 0B92     		str	r2, [sp, #44]
 802 000c 9846     		mov	r8, r3
 803 000e DDF878B0 		ldr	fp, [sp, #120]
 804 0012 DDF87C90 		ldr	r9, [sp, #124]
 805 0016 229D     		ldr	r5, [sp, #136]
 806 0018 239F     		ldr	r7, [sp, #140]
 807 001a 269E     		ldr	r6, [sp, #152]
 308:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 808              		.loc 1 308 3 is_stmt 1 view .LVU210
 309:Core/Src/printf.c ****   size_t len = 0U;
 809              		.loc 1 309 3 view .LVU211
 810              	.LVL82:
 310:Core/Src/printf.c **** 
 311:Core/Src/printf.c ****   // no hash for 0 values
 312:Core/Src/printf.c ****   if (!value) {
 811              		.loc 1 312 3 view .LVU212
 812              		.loc 1 312 6 is_stmt 0 view .LVU213
 813 001c 5BEA0902 		orrs	r2, fp, r9
 814              	.LVL83:
 815              		.loc 1 312 6 view .LVU214
 816 0020 01D1     		bne	.L62
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 817              		.loc 1 313 5 is_stmt 1 view .LVU215
 818              		.loc 1 313 11 is_stmt 0 view .LVU216
 819 0022 26F01006 		bic	r6, r6, #16
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 22


 820              	.L62:
 821              	.LVL84:
 314:Core/Src/printf.c ****   }
 315:Core/Src/printf.c **** 
 316:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 317:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 822              		.loc 1 317 3 is_stmt 1 view .LVU217
 823              		.loc 1 317 6 is_stmt 0 view .LVU218
 824 0026 16F48064 		ands	r4, r6, #1024
 825 002a 24D0     		beq	.L68
 826              		.loc 1 317 34 discriminator 1 view .LVU219
 827 002c 5BEA0902 		orrs	r2, fp, r9
 828 0030 2FD0     		beq	.L69
 829 0032 0024     		movs	r4, #0
 830 0034 1FE0     		b	.L68
 831              	.LVL85:
 832              	.L65:
 833              	.LBB27:
 318:Core/Src/printf.c ****     do {
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 834              		.loc 1 320 85 discriminator 2 view .LVU220
 835 0036 16F0200F 		tst	r6, #32
 836 003a 28D0     		beq	.L70
 837              		.loc 1 320 85 discriminator 4 view .LVU221
 838 003c 4123     		movs	r3, #65
 839              	.L67:
 840              		.loc 1 320 85 discriminator 7 view .LVU222
 841 003e 1344     		add	r3, r3, r2
 842 0040 DBB2     		uxtb	r3, r3
 843              		.loc 1 320 18 discriminator 7 view .LVU223
 844 0042 0A3B     		subs	r3, r3, #10
 845 0044 DBB2     		uxtb	r3, r3
 846              	.LVL86:
 847              	.L66:
 848              		.loc 1 320 14 discriminator 8 view .LVU224
 849 0046 04F1010A 		add	r10, r4, #1
 850              	.LVL87:
 851              		.loc 1 320 18 discriminator 8 view .LVU225
 852 004a 04F15002 		add	r2, r4, #80
 853 004e 0DEB0204 		add	r4, sp, r2
 854 0052 04F8203C 		strb	r3, [r4, #-32]
 321:Core/Src/printf.c ****       value /= base;
 855              		.loc 1 321 7 is_stmt 1 view .LVU226
 856              		.loc 1 321 13 is_stmt 0 view .LVU227
 857 0056 2A46     		mov	r2, r5
 858 0058 3B46     		mov	r3, r7
 859 005a 5846     		mov	r0, fp
 860 005c 4946     		mov	r1, r9
 861 005e FFF7FEFF 		bl	__aeabi_uldivmod
 862              	.LVL88:
 863              		.loc 1 321 13 view .LVU228
 864              	.LBE27:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 865              		.loc 1 322 20 is_stmt 1 view .LVU229
 866 0062 AB45     		cmp	fp, r5
 867 0064 79EB0709 		sbcs	r9, r9, r7
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 23


 868 0068 15D3     		bcc	.L64
 869              		.loc 1 322 20 is_stmt 0 discriminator 1 view .LVU230
 870 006a BAF11F0F 		cmp	r10, #31
 871 006e 12D8     		bhi	.L64
 872              	.LBB28:
 320:Core/Src/printf.c ****       value /= base;
 873              		.loc 1 320 14 discriminator 8 view .LVU231
 874 0070 5446     		mov	r4, r10
 321:Core/Src/printf.c ****       value /= base;
 875              		.loc 1 321 13 view .LVU232
 876 0072 8346     		mov	fp, r0
 877 0074 8946     		mov	r9, r1
 878              	.LVL89:
 879              	.L68:
 321:Core/Src/printf.c ****       value /= base;
 880              		.loc 1 321 13 view .LVU233
 881              	.LBE28:
 318:Core/Src/printf.c ****       const char digit = (char)(value % base);
 882              		.loc 1 318 5 is_stmt 1 view .LVU234
 883              	.LBB29:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 884              		.loc 1 319 7 view .LVU235
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 885              		.loc 1 319 39 is_stmt 0 view .LVU236
 886 0076 2A46     		mov	r2, r5
 887 0078 3B46     		mov	r3, r7
 888 007a 5846     		mov	r0, fp
 889 007c 4946     		mov	r1, r9
 890 007e FFF7FEFF 		bl	__aeabi_uldivmod
 891              	.LVL90:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 892              		.loc 1 319 18 view .LVU237
 893 0082 D2B2     		uxtb	r2, r2
 894              	.LVL91:
 320:Core/Src/printf.c ****       value /= base;
 895              		.loc 1 320 7 is_stmt 1 view .LVU238
 320:Core/Src/printf.c ****       value /= base;
 896              		.loc 1 320 18 is_stmt 0 view .LVU239
 897 0084 092A     		cmp	r2, #9
 898 0086 D6D8     		bhi	.L65
 320:Core/Src/printf.c ****       value /= base;
 899              		.loc 1 320 18 discriminator 1 view .LVU240
 900 0088 3032     		adds	r2, r2, #48
 901              	.LVL92:
 320:Core/Src/printf.c ****       value /= base;
 902              		.loc 1 320 18 discriminator 1 view .LVU241
 903 008a D3B2     		uxtb	r3, r2
 904 008c DBE7     		b	.L66
 905              	.LVL93:
 906              	.L70:
 320:Core/Src/printf.c ****       value /= base;
 907              		.loc 1 320 85 discriminator 5 view .LVU242
 908 008e 6123     		movs	r3, #97
 909 0090 D5E7     		b	.L67
 910              	.LVL94:
 911              	.L69:
 320:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 24


 912              		.loc 1 320 85 discriminator 5 view .LVU243
 913              	.LBE29:
 309:Core/Src/printf.c **** 
 914              		.loc 1 309 10 view .LVU244
 915 0092 4FF0000A 		mov	r10, #0
 916              	.LVL95:
 917              	.L64:
 323:Core/Src/printf.c ****   }
 324:Core/Src/printf.c **** 
 325:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 918              		.loc 1 325 3 is_stmt 1 view .LVU245
 919              		.loc 1 325 10 is_stmt 0 view .LVU246
 920 0096 0696     		str	r6, [sp, #24]
 921 0098 259B     		ldr	r3, [sp, #148]
 922 009a 0593     		str	r3, [sp, #20]
 923 009c 249B     		ldr	r3, [sp, #144]
 924 009e 0493     		str	r3, [sp, #16]
 925 00a0 0395     		str	r5, [sp, #12]
 926 00a2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 927 00a6 0293     		str	r3, [sp, #8]
 928 00a8 CDF804A0 		str	r10, [sp, #4]
 929 00ac 0CAB     		add	r3, sp, #48
 930 00ae 0093     		str	r3, [sp]
 931 00b0 4346     		mov	r3, r8
 932 00b2 0B9A     		ldr	r2, [sp, #44]
 933 00b4 0A99     		ldr	r1, [sp, #40]
 934 00b6 0998     		ldr	r0, [sp, #36]
 935 00b8 FFF7FEFF 		bl	_ntoa_format
 936              	.LVL96:
 326:Core/Src/printf.c **** }
 937              		.loc 1 326 1 view .LVU247
 938 00bc 15B0     		add	sp, sp, #84
 939              	.LCFI15:
 940              		.cfi_def_cfa_offset 36
 941              		@ sp needed
 942 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 943              		.loc 1 326 1 view .LVU248
 944              		.cfi_endproc
 945              	.LFE10:
 947              		.section	.text._etoa,"ax",%progbits
 948              		.align	1
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 953              	_etoa:
 954              	.LVL97:
 955              	.LFB12:
 327:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:Core/Src/printf.c **** 
 329:Core/Src/printf.c **** 
 330:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:Core/Src/printf.c **** 
 332:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:Core/Src/printf.c **** #endif
 336:Core/Src/printf.c **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 25


 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 339:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:Core/Src/printf.c **** {
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:Core/Src/printf.c ****   size_t len  = 0U;
 343:Core/Src/printf.c ****   double diff = 0.0;
 344:Core/Src/printf.c **** 
 345:Core/Src/printf.c ****   // powers of 10
 346:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:Core/Src/printf.c **** 
 348:Core/Src/printf.c ****   // test for special values
 349:Core/Src/printf.c ****   if (value != value)
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:Core/Src/printf.c **** 
 356:Core/Src/printf.c ****   // test for very large values
 357:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:Core/Src/printf.c **** #else
 362:Core/Src/printf.c ****     return 0U;
 363:Core/Src/printf.c **** #endif
 364:Core/Src/printf.c ****   }
 365:Core/Src/printf.c **** 
 366:Core/Src/printf.c ****   // test for negative
 367:Core/Src/printf.c ****   bool negative = false;
 368:Core/Src/printf.c ****   if (value < 0) {
 369:Core/Src/printf.c ****     negative = true;
 370:Core/Src/printf.c ****     value = 0 - value;
 371:Core/Src/printf.c ****   }
 372:Core/Src/printf.c **** 
 373:Core/Src/printf.c ****   // set default precision, if not set explicitly
 374:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:Core/Src/printf.c ****   }
 377:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:Core/Src/printf.c ****     buf[len++] = '0';
 380:Core/Src/printf.c ****     prec--;
 381:Core/Src/printf.c ****   }
 382:Core/Src/printf.c **** 
 383:Core/Src/printf.c ****   int whole = (int)value;
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:Core/Src/printf.c ****   diff = tmp - frac;
 387:Core/Src/printf.c **** 
 388:Core/Src/printf.c ****   if (diff > 0.5) {
 389:Core/Src/printf.c ****     ++frac;
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 392:Core/Src/printf.c ****       frac = 0;
 393:Core/Src/printf.c ****       ++whole;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 26


 394:Core/Src/printf.c ****     }
 395:Core/Src/printf.c ****   }
 396:Core/Src/printf.c ****   else if (diff < 0.5) {
 397:Core/Src/printf.c ****   }
 398:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:Core/Src/printf.c ****     ++frac;
 401:Core/Src/printf.c ****   }
 402:Core/Src/printf.c **** 
 403:Core/Src/printf.c ****   if (prec == 0U) {
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 407:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:Core/Src/printf.c ****       ++whole;
 409:Core/Src/printf.c ****     }
 410:Core/Src/printf.c ****   }
 411:Core/Src/printf.c ****   else {
 412:Core/Src/printf.c ****     unsigned int count = prec;
 413:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 414:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:Core/Src/printf.c ****       --count;
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 418:Core/Src/printf.c ****         break;
 419:Core/Src/printf.c ****       }
 420:Core/Src/printf.c ****     }
 421:Core/Src/printf.c ****     // add extra 0s
 422:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:Core/Src/printf.c ****       buf[len++] = '0';
 424:Core/Src/printf.c ****     }
 425:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:Core/Src/printf.c ****       // add decimal
 427:Core/Src/printf.c ****       buf[len++] = '.';
 428:Core/Src/printf.c ****     }
 429:Core/Src/printf.c ****   }
 430:Core/Src/printf.c **** 
 431:Core/Src/printf.c ****   // do whole part, number is reversed
 432:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 435:Core/Src/printf.c ****       break;
 436:Core/Src/printf.c ****     }
 437:Core/Src/printf.c ****   }
 438:Core/Src/printf.c **** 
 439:Core/Src/printf.c ****   // pad leading zeros
 440:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:Core/Src/printf.c ****       width--;
 443:Core/Src/printf.c ****     }
 444:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:Core/Src/printf.c ****       buf[len++] = '0';
 446:Core/Src/printf.c ****     }
 447:Core/Src/printf.c ****   }
 448:Core/Src/printf.c **** 
 449:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:Core/Src/printf.c ****     if (negative) {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 27


 451:Core/Src/printf.c ****       buf[len++] = '-';
 452:Core/Src/printf.c ****     }
 453:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:Core/Src/printf.c ****     }
 456:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 458:Core/Src/printf.c ****     }
 459:Core/Src/printf.c ****   }
 460:Core/Src/printf.c **** 
 461:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:Core/Src/printf.c **** }
 463:Core/Src/printf.c **** 
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:Core/Src/printf.c **** {
 956              		.loc 1 468 1 is_stmt 1 view -0
 957              		.cfi_startproc
 958              		@ args = 12, pretend = 0, frame = 48
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              		.loc 1 468 1 is_stmt 0 view .LVU250
 961 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 962              	.LCFI16:
 963              		.cfi_def_cfa_offset 36
 964              		.cfi_offset 4, -36
 965              		.cfi_offset 5, -32
 966              		.cfi_offset 6, -28
 967              		.cfi_offset 7, -24
 968              		.cfi_offset 8, -20
 969              		.cfi_offset 9, -16
 970              		.cfi_offset 10, -12
 971              		.cfi_offset 11, -8
 972              		.cfi_offset 14, -4
 973 0004 2DED028B 		vpush.64	{d8}
 974              	.LCFI17:
 975              		.cfi_def_cfa_offset 44
 976              		.cfi_offset 80, -44
 977              		.cfi_offset 81, -40
 978 0008 93B0     		sub	sp, sp, #76
 979              	.LCFI18:
 980              		.cfi_def_cfa_offset 120
 981 000a 8246     		mov	r10, r0
 982 000c 0C46     		mov	r4, r1
 983 000e 9346     		mov	fp, r2
 984 0010 1D46     		mov	r5, r3
 985 0012 57EC106B 		vmov	r6, r7, d0
 986 0016 8DED080B 		vstr.64	d0, [sp, #32]
 469:Core/Src/printf.c ****   // check for NaN and special values
 470:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 987              		.loc 1 470 3 is_stmt 1 view .LVU251
 988              		.loc 1 470 6 is_stmt 0 view .LVU252
 989 001a 3246     		mov	r2, r6
 990              	.LVL98:
 991              		.loc 1 470 6 view .LVU253
 992 001c 3B46     		mov	r3, r7
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 28


 993              	.LVL99:
 994              		.loc 1 470 6 view .LVU254
 995 001e 3046     		mov	r0, r6
 996              	.LVL100:
 997              		.loc 1 470 6 view .LVU255
 998 0020 3946     		mov	r1, r7
 999              	.LVL101:
 1000              		.loc 1 470 6 view .LVU256
 1001 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 1002              	.LVL102:
 1003              		.loc 1 470 6 view .LVU257
 1004 0026 0028     		cmp	r0, #0
 1005 0028 00F00A81 		beq	.L76
 1006              		.loc 1 470 24 discriminator 1 view .LVU258
 1007 002c 4FF0FF32 		mov	r2, #-1
 1008 0030 B14B     		ldr	r3, .L117+72
 1009 0032 3046     		mov	r0, r6
 1010 0034 3946     		mov	r1, r7
 1011 0036 FFF7FEFF 		bl	__aeabi_dcmpgt
 1012              	.LVL103:
 1013 003a 0028     		cmp	r0, #0
 1014 003c 40F00081 		bne	.L76
 1015              		.loc 1 470 45 discriminator 2 view .LVU259
 1016 0040 4FF0FF32 		mov	r2, #-1
 1017 0044 6FF48013 		mvn	r3, #1048576
 1018 0048 3046     		mov	r0, r6
 1019 004a 3946     		mov	r1, r7
 1020 004c FFF7FEFF 		bl	__aeabi_dcmplt
 1021              	.LVL104:
 1022 0050 0028     		cmp	r0, #0
 1023 0052 40F0F580 		bne	.L76
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:Core/Src/printf.c ****   }
 473:Core/Src/printf.c **** 
 474:Core/Src/printf.c ****   // determine the sign
 475:Core/Src/printf.c ****   const bool negative = value < 0;
 1024              		.loc 1 475 3 is_stmt 1 view .LVU260
 1025              	.LVL105:
 476:Core/Src/printf.c ****   if (negative) {
 1026              		.loc 1 476 3 view .LVU261
 1027              		.loc 1 476 6 is_stmt 0 view .LVU262
 1028 0056 0022     		movs	r2, #0
 1029 0058 0023     		movs	r3, #0
 1030 005a DDE90867 		ldrd	r6, [sp, #32]
 1031              		.loc 1 476 6 view .LVU263
 1032 005e 3046     		mov	r0, r6
 1033 0060 3946     		mov	r1, r7
 1034 0062 FFF7FEFF 		bl	__aeabi_dcmplt
 1035              	.LVL106:
 1036 0066 0028     		cmp	r0, #0
 1037 0068 40F0FD80 		bne	.L115
 1038 006c 9DED087B 		vldr.64	d7, [sp, #32]
 1039 0070 8DED067B 		vstr.64	d7, [sp, #24]
 1040              	.LVL107:
 1041              	.L80:
 477:Core/Src/printf.c ****     value = -value;
 478:Core/Src/printf.c ****   }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 29


 479:Core/Src/printf.c **** 
 480:Core/Src/printf.c ****   // default precision
 481:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1042              		.loc 1 481 3 is_stmt 1 view .LVU264
 1043              		.loc 1 481 6 is_stmt 0 view .LVU265
 1044 0074 209B     		ldr	r3, [sp, #128]
 1045 0076 13F48063 		ands	r3, r3, #1024
 1046 007a 1193     		str	r3, [sp, #68]
 1047 007c 01D1     		bne	.L82
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1048              		.loc 1 482 10 view .LVU266
 1049 007e 0623     		movs	r3, #6
 1050 0080 1E93     		str	r3, [sp, #120]
 1051              	.LVL108:
 1052              	.L82:
 483:Core/Src/printf.c ****   }
 484:Core/Src/printf.c **** 
 485:Core/Src/printf.c ****   // determine the decimal exponent
 486:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:Core/Src/printf.c ****   union {
 1053              		.loc 1 487 3 is_stmt 1 view .LVU267
 488:Core/Src/printf.c ****     uint64_t U;
 489:Core/Src/printf.c ****     double   F;
 490:Core/Src/printf.c ****   } conv;
 491:Core/Src/printf.c **** 
 492:Core/Src/printf.c ****   conv.F = value;
 1054              		.loc 1 492 3 view .LVU268
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1055              		.loc 1 493 3 view .LVU269
 1056 0082 DDE90601 		ldrd	r0, [sp, #24]
 1057 0086 0246     		mov	r2, r0
 1058 0088 079B     		ldr	r3, [sp, #28]
 1059              		.loc 1 493 14 is_stmt 0 view .LVU270
 1060 008a C3F30A50 		ubfx	r0, r3, #20, #11
 1061              	.LVL109:
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1062              		.loc 1 494 3 is_stmt 1 view .LVU271
 1063              		.loc 1 494 20 is_stmt 0 view .LVU272
 1064 008e C3F31303 		ubfx	r3, r3, #0, #20
 1065              		.loc 1 494 44 view .LVU273
 1066 0092 9046     		mov	r8, r2
 1067 0094 43F07F59 		orr	r9, r3, #1069547520
 1068 0098 49F44019 		orr	r9, r9, #3145728
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1069              		.loc 1 496 3 is_stmt 1 view .LVU274
 1070              		.loc 1 496 45 is_stmt 0 view .LVU275
 1071 009c A0F2FF30 		subw	r0, r0, #1023
 1072              	.LVL110:
 1073              		.loc 1 496 45 view .LVU276
 1074 00a0 FFF7FEFF 		bl	__aeabi_i2d
 1075              	.LVL111:
 1076              		.loc 1 496 45 view .LVU277
 1077 00a4 82A3     		adr	r3, .L117
 1078 00a6 D3E90023 		ldrd	r2, [r3]
 1079 00aa FFF7FEFF 		bl	__aeabi_dmul
 1080              	.LVL112:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 30


 1081              		.loc 1 496 38 view .LVU278
 1082 00ae 82A3     		adr	r3, .L117+8
 1083 00b0 D3E90023 		ldrd	r2, [r3]
 1084 00b4 FFF7FEFF 		bl	__aeabi_dadd
 1085              	.LVL113:
 1086 00b8 0646     		mov	r6, r0
 1087              	.LVL114:
 1088              		.loc 1 496 38 view .LVU279
 1089 00ba 0F46     		mov	r7, r1
 1090              		.loc 1 496 75 view .LVU280
 1091 00bc 0022     		movs	r2, #0
 1092 00be 8F4B     		ldr	r3, .L117+76
 1093 00c0 4046     		mov	r0, r8
 1094 00c2 4946     		mov	r1, r9
 1095 00c4 FFF7FEFF 		bl	__aeabi_dsub
 1096              	.LVL115:
 1097              		.loc 1 496 82 view .LVU281
 1098 00c8 7DA3     		adr	r3, .L117+16
 1099 00ca D3E90023 		ldrd	r2, [r3]
 1100 00ce FFF7FEFF 		bl	__aeabi_dmul
 1101              	.LVL116:
 1102 00d2 0246     		mov	r2, r0
 1103 00d4 0B46     		mov	r3, r1
 1104              		.loc 1 496 65 view .LVU282
 1105 00d6 3046     		mov	r0, r6
 1106 00d8 3946     		mov	r1, r7
 1107 00da FFF7FEFF 		bl	__aeabi_dadd
 1108              	.LVL117:
 1109              		.loc 1 496 7 view .LVU283
 1110 00de FFF7FEFF 		bl	__aeabi_d2iz
 1111              	.LVL118:
 1112 00e2 0646     		mov	r6, r0
 1113              	.LVL119:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1114              		.loc 1 498 3 is_stmt 1 view .LVU284
 1115              		.loc 1 498 23 is_stmt 0 view .LVU285
 1116 00e4 FFF7FEFF 		bl	__aeabi_i2d
 1117              	.LVL120:
 1118              		.loc 1 498 23 view .LVU286
 1119 00e8 8046     		mov	r8, r0
 1120 00ea 8946     		mov	r9, r1
 1121 00ec 76A3     		adr	r3, .L117+24
 1122 00ee D3E90023 		ldrd	r2, [r3]
 1123 00f2 FFF7FEFF 		bl	__aeabi_dmul
 1124              	.LVL121:
 1125              		.loc 1 498 43 view .LVU287
 1126 00f6 0022     		movs	r2, #0
 1127 00f8 814B     		ldr	r3, .L117+80
 1128 00fa FFF7FEFF 		bl	__aeabi_dadd
 1129              	.LVL122:
 1130              		.loc 1 498 8 view .LVU288
 1131 00fe FFF7FEFF 		bl	__aeabi_d2iz
 1132              	.LVL123:
 1133 0102 0746     		mov	r7, r0
 1134              	.LVL124:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 31


 1135              		.loc 1 499 3 is_stmt 1 view .LVU289
 1136              		.loc 1 499 28 is_stmt 0 view .LVU290
 1137 0104 72A3     		adr	r3, .L117+32
 1138 0106 D3E90023 		ldrd	r2, [r3]
 1139 010a 4046     		mov	r0, r8
 1140              	.LVL125:
 1141              		.loc 1 499 28 view .LVU291
 1142 010c 4946     		mov	r1, r9
 1143 010e FFF7FEFF 		bl	__aeabi_dmul
 1144              	.LVL126:
 1145 0112 8046     		mov	r8, r0
 1146 0114 8946     		mov	r9, r1
 1147              		.loc 1 499 55 view .LVU292
 1148 0116 3846     		mov	r0, r7
 1149 0118 FFF7FEFF 		bl	__aeabi_i2d
 1150              	.LVL127:
 1151 011c 6EA3     		adr	r3, .L117+40
 1152 011e D3E90023 		ldrd	r2, [r3]
 1153 0122 FFF7FEFF 		bl	__aeabi_dmul
 1154              	.LVL128:
 1155 0126 0246     		mov	r2, r0
 1156 0128 0B46     		mov	r3, r1
 1157              		.loc 1 499 16 view .LVU293
 1158 012a 4046     		mov	r0, r8
 1159 012c 4946     		mov	r1, r9
 1160 012e FFF7FEFF 		bl	__aeabi_dsub
 1161              	.LVL129:
 1162 0132 8046     		mov	r8, r0
 1163 0134 8946     		mov	r9, r1
 1164              	.LVL130:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1165              		.loc 1 500 3 is_stmt 1 view .LVU294
 1166              		.loc 1 500 16 is_stmt 0 view .LVU295
 1167 0136 0246     		mov	r2, r0
 1168 0138 0B46     		mov	r3, r1
 1169 013a FFF7FEFF 		bl	__aeabi_dmul
 1170              	.LVL131:
 1171 013e CDE90C01 		strd	r0, [sp, #48]
 1172              	.LVL132:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1173              		.loc 1 501 3 is_stmt 1 view .LVU296
 1174              		.loc 1 501 28 is_stmt 0 view .LVU297
 1175 0142 07F2FF37 		addw	r7, r7, #1023
 1176              	.LVL133:
 1177              		.loc 1 501 36 view .LVU298
 1178 0146 0021     		movs	r1, #0
 1179 0148 0022     		movs	r2, #0
 1180 014a CDE90A12 		strd	r1, [sp, #40]
 1181 014e 3B05     		lsls	r3, r7, #20
 1182 0150 0B93     		str	r3, [sp, #44]
 1183 0152 0023     		movs	r3, #0
 1184 0154 0A93     		str	r3, [sp, #40]
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1185              		.loc 1 503 3 is_stmt 1 view .LVU299
 1186              		.loc 1 503 19 is_stmt 0 view .LVU300
 1187 0156 4246     		mov	r2, r8
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 32


 1188 0158 4B46     		mov	r3, r9
 1189 015a 4046     		mov	r0, r8
 1190              	.LVL134:
 1191              		.loc 1 503 19 view .LVU301
 1192 015c 4946     		mov	r1, r9
 1193 015e FFF7FEFF 		bl	__aeabi_dadd
 1194              	.LVL135:
 1195 0162 CDE90E01 		strd	r0, [sp, #56]
 1196              		.loc 1 503 28 view .LVU302
 1197 0166 4246     		mov	r2, r8
 1198 0168 4B46     		mov	r3, r9
 1199 016a 0020     		movs	r0, #0
 1200 016c 4FF08041 		mov	r1, #1073741824
 1201 0170 FFF7FEFF 		bl	__aeabi_dsub
 1202              	.LVL136:
 1203 0174 8046     		mov	r8, r0
 1204              	.LVL137:
 1205              		.loc 1 503 28 view .LVU303
 1206 0176 8946     		mov	r9, r1
 1207              		.loc 1 503 60 view .LVU304
 1208 0178 0022     		movs	r2, #0
 1209 017a 624B     		ldr	r3, .L117+84
 1210 017c DDE90C01 		ldrd	r0, [sp, #48]
 1211 0180 FFF7FEFF 		bl	__aeabi_ddiv
 1212              	.LVL138:
 1213              		.loc 1 503 55 view .LVU305
 1214 0184 0022     		movs	r2, #0
 1215 0186 604B     		ldr	r3, .L117+88
 1216 0188 FFF7FEFF 		bl	__aeabi_dadd
 1217              	.LVL139:
 1218 018c 0246     		mov	r2, r0
 1219 018e 0B46     		mov	r3, r1
 1220              		.loc 1 503 49 view .LVU306
 1221 0190 DDE90C01 		ldrd	r0, [sp, #48]
 1222 0194 FFF7FEFF 		bl	__aeabi_ddiv
 1223              	.LVL140:
 1224              		.loc 1 503 43 view .LVU307
 1225 0198 0022     		movs	r2, #0
 1226 019a 5C4B     		ldr	r3, .L117+92
 1227 019c FFF7FEFF 		bl	__aeabi_dadd
 1228              	.LVL141:
 1229 01a0 0246     		mov	r2, r0
 1230 01a2 0B46     		mov	r3, r1
 1231              		.loc 1 503 38 view .LVU308
 1232 01a4 DDE90C01 		ldrd	r0, [sp, #48]
 1233 01a8 FFF7FEFF 		bl	__aeabi_ddiv
 1234              	.LVL142:
 1235 01ac 0246     		mov	r2, r0
 1236 01ae 0B46     		mov	r3, r1
 1237              		.loc 1 503 32 view .LVU309
 1238 01b0 4046     		mov	r0, r8
 1239 01b2 4946     		mov	r1, r9
 1240 01b4 FFF7FEFF 		bl	__aeabi_dadd
 1241              	.LVL143:
 1242 01b8 0246     		mov	r2, r0
 1243 01ba 0B46     		mov	r3, r1
 1244              		.loc 1 503 23 view .LVU310
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 33


 1245 01bc DDE90E01 		ldrd	r0, [sp, #56]
 1246 01c0 FFF7FEFF 		bl	__aeabi_ddiv
 1247              	.LVL144:
 1248              		.loc 1 503 15 view .LVU311
 1249 01c4 0022     		movs	r2, #0
 1250 01c6 524B     		ldr	r3, .L117+96
 1251 01c8 FFF7FEFF 		bl	__aeabi_dadd
 1252              	.LVL145:
 1253              		.loc 1 503 10 view .LVU312
 1254 01cc DDE90A23 		ldrd	r2, [sp, #40]
 1255 01d0 FFF7FEFF 		bl	__aeabi_dmul
 1256              	.LVL146:
 1257 01d4 8046     		mov	r8, r0
 1258 01d6 8946     		mov	r9, r1
 1259 01d8 49EC188B 		vmov	d8, r8, r9	@ int
 1260              	.LVL147:
 504:Core/Src/printf.c ****   // correct for rounding errors
 505:Core/Src/printf.c ****   if (value < conv.F) {
 1261              		.loc 1 505 3 is_stmt 1 view .LVU313
 1262              		.loc 1 505 6 is_stmt 0 view .LVU314
 1263 01dc DDE90623 		ldrd	r2, [sp, #24]
 1264 01e0 FFF7FEFF 		bl	__aeabi_dcmpgt
 1265              	.LVL148:
 1266 01e4 40B1     		cbz	r0, .L83
 506:Core/Src/printf.c ****     expval--;
 1267              		.loc 1 506 5 is_stmt 1 view .LVU315
 1268              		.loc 1 506 11 is_stmt 0 view .LVU316
 1269 01e6 013E     		subs	r6, r6, #1
 1270              	.LVL149:
 507:Core/Src/printf.c ****     conv.F /= 10;
 1271              		.loc 1 507 5 is_stmt 1 view .LVU317
 1272              		.loc 1 507 12 is_stmt 0 view .LVU318
 1273 01e8 0022     		movs	r2, #0
 1274 01ea 474B     		ldr	r3, .L117+88
 1275 01ec 4046     		mov	r0, r8
 1276 01ee 4946     		mov	r1, r9
 1277 01f0 FFF7FEFF 		bl	__aeabi_ddiv
 1278              	.LVL150:
 1279 01f4 41EC180B 		vmov	d8, r0, r1	@ int
 1280              	.L83:
 508:Core/Src/printf.c ****   }
 509:Core/Src/printf.c **** 
 510:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1281              		.loc 1 511 3 is_stmt 1 view .LVU319
 1282              		.loc 1 511 43 is_stmt 0 view .LVU320
 1283 01f8 06F16303 		add	r3, r6, #99
 1284              		.loc 1 511 68 view .LVU321
 1285 01fc C62B     		cmp	r3, #198
 1286 01fe 3BD8     		bhi	.L101
 1287              		.loc 1 511 68 discriminator 1 view .LVU322
 1288 0200 0427     		movs	r7, #4
 1289              	.LVL151:
 1290              	.L85:
 512:Core/Src/printf.c **** 
 513:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 34


 1291              		.loc 1 514 3 is_stmt 1 view .LVU323
 1292              		.loc 1 514 6 is_stmt 0 view .LVU324
 1293 0202 209B     		ldr	r3, [sp, #128]
 1294 0204 13F4006F 		tst	r3, #2048
 1295 0208 40D0     		beq	.L86
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 516:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 1296              		.loc 1 516 5 is_stmt 1 view .LVU325
 1297              		.loc 1 516 8 is_stmt 0 view .LVU326
 1298 020a 35A3     		adr	r3, .L117+48
 1299 020c D3E90023 		ldrd	r2, [r3]
 1300 0210 DDE90689 		ldrd	r8, [sp, #24]
 1301 0214 4046     		mov	r0, r8
 1302 0216 4946     		mov	r1, r9
 1303 0218 FFF7FEFF 		bl	__aeabi_dcmpge
 1304              	.LVL152:
 1305 021c 0028     		cmp	r0, #0
 1306 021e 3BD0     		beq	.L87
 1307              		.loc 1 516 25 discriminator 1 view .LVU327
 1308 0220 31A3     		adr	r3, .L117+56
 1309 0222 D3E90023 		ldrd	r2, [r3]
 1310 0226 4046     		mov	r0, r8
 1311 0228 4946     		mov	r1, r9
 1312 022a FFF7FEFF 		bl	__aeabi_dcmplt
 1313              	.LVL153:
 1314 022e 0028     		cmp	r0, #0
 1315 0230 32D0     		beq	.L87
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1316              		.loc 1 517 7 is_stmt 1 view .LVU328
 1317              		.loc 1 517 10 is_stmt 0 view .LVU329
 1318 0232 1E9B     		ldr	r3, [sp, #120]
 1319 0234 B342     		cmp	r3, r6
 1320 0236 21DD     		ble	.L102
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1321              		.loc 1 518 9 is_stmt 1 view .LVU330
 1322              		.loc 1 518 37 is_stmt 0 view .LVU331
 1323 0238 9E1B     		subs	r6, r3, r6
 1324              	.LVL154:
 1325              		.loc 1 518 46 view .LVU332
 1326 023a 731E     		subs	r3, r6, #1
 1327 023c 1E93     		str	r3, [sp, #120]
 1328              	.LVL155:
 1329              		.loc 1 518 46 view .LVU333
 1330 023e 1FE0     		b	.L90
 1331              	.LVL156:
 1332              	.L76:
 471:Core/Src/printf.c ****   }
 1333              		.loc 1 471 5 is_stmt 1 view .LVU334
 471:Core/Src/printf.c ****   }
 1334              		.loc 1 471 12 is_stmt 0 view .LVU335
 1335 0240 209B     		ldr	r3, [sp, #128]
 1336 0242 0293     		str	r3, [sp, #8]
 1337 0244 1F9B     		ldr	r3, [sp, #124]
 1338 0246 0193     		str	r3, [sp, #4]
 1339 0248 1E9B     		ldr	r3, [sp, #120]
 1340 024a 0093     		str	r3, [sp]
 1341 024c 9DED080B 		vldr.64	d0, [sp, #32]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 35


 1342 0250 2B46     		mov	r3, r5
 1343 0252 5A46     		mov	r2, fp
 1344 0254 2146     		mov	r1, r4
 1345 0256 5046     		mov	r0, r10
 1346 0258 FFF7FEFF 		bl	_ftoa
 1347              	.LVL157:
 1348              	.L79:
 519:Core/Src/printf.c ****       }
 520:Core/Src/printf.c ****       else {
 521:Core/Src/printf.c ****         prec = 0;
 522:Core/Src/printf.c ****       }
 523:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:Core/Src/printf.c ****       // no characters in exponent
 525:Core/Src/printf.c ****       minwidth = 0U;
 526:Core/Src/printf.c ****       expval   = 0;
 527:Core/Src/printf.c ****     }
 528:Core/Src/printf.c ****     else {
 529:Core/Src/printf.c ****       // we use one sigfig for the whole part
 530:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:Core/Src/printf.c ****         --prec;
 532:Core/Src/printf.c ****       }
 533:Core/Src/printf.c ****     }
 534:Core/Src/printf.c ****   }
 535:Core/Src/printf.c **** 
 536:Core/Src/printf.c ****   // will everything fit?
 537:Core/Src/printf.c ****   unsigned int fwidth = width;
 538:Core/Src/printf.c ****   if (width > minwidth) {
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:Core/Src/printf.c ****     fwidth -= minwidth;
 541:Core/Src/printf.c ****   } else {
 542:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 543:Core/Src/printf.c ****     fwidth = 0U;
 544:Core/Src/printf.c ****   }
 545:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:Core/Src/printf.c ****     fwidth = 0U;
 548:Core/Src/printf.c ****   }
 549:Core/Src/printf.c **** 
 550:Core/Src/printf.c ****   // rescale the float value
 551:Core/Src/printf.c ****   if (expval) {
 552:Core/Src/printf.c ****     value /= conv.F;
 553:Core/Src/printf.c ****   }
 554:Core/Src/printf.c **** 
 555:Core/Src/printf.c ****   // output the floating part
 556:Core/Src/printf.c ****   const size_t start_idx = idx;
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:Core/Src/printf.c **** 
 559:Core/Src/printf.c ****   // output the exponent part
 560:Core/Src/printf.c ****   if (minwidth) {
 561:Core/Src/printf.c ****     // output the exponential symbol
 562:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 563:Core/Src/printf.c ****     // output the exponent value
 564:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 566:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:Core/Src/printf.c ****     }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 36


 569:Core/Src/printf.c ****   }
 570:Core/Src/printf.c ****   return idx;
 571:Core/Src/printf.c **** }
 1349              		.loc 1 571 1 view .LVU336
 1350 025c 13B0     		add	sp, sp, #76
 1351              	.LCFI19:
 1352              		.cfi_remember_state
 1353              		.cfi_def_cfa_offset 44
 1354              		@ sp needed
 1355 025e BDEC028B 		vldm	sp!, {d8}
 1356              	.LCFI20:
 1357              		.cfi_restore 80
 1358              		.cfi_restore 81
 1359              		.cfi_def_cfa_offset 36
 1360              	.LVL158:
 1361              		.loc 1 571 1 view .LVU337
 1362 0262 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1363              	.LVL159:
 1364              	.L115:
 1365              	.LCFI21:
 1366              		.cfi_restore_state
 477:Core/Src/printf.c ****   }
 1367              		.loc 1 477 5 is_stmt 1 view .LVU338
 477:Core/Src/printf.c ****   }
 1368              		.loc 1 477 11 is_stmt 0 view .LVU339
 1369 0266 9FED227B 		vldr.64	d7, .L117+64
 1370 026a 8DED067B 		vstr.64	d7, [sp, #24]
 1371 026e 0696     		str	r6, [sp, #24]
 1372 0270 07F10043 		add	r3, r7, #-2147483648
 1373 0274 0793     		str	r3, [sp, #28]
 1374              	.LVL160:
 477:Core/Src/printf.c ****   }
 1375              		.loc 1 477 11 view .LVU340
 1376 0276 FDE6     		b	.L80
 1377              	.LVL161:
 1378              	.L101:
 511:Core/Src/printf.c **** 
 1379              		.loc 1 511 68 discriminator 2 view .LVU341
 1380 0278 0527     		movs	r7, #5
 1381              	.LVL162:
 511:Core/Src/printf.c **** 
 1382              		.loc 1 511 68 discriminator 2 view .LVU342
 1383 027a C2E7     		b	.L85
 1384              	.LVL163:
 1385              	.L102:
 521:Core/Src/printf.c ****       }
 1386              		.loc 1 521 14 view .LVU343
 1387 027c 0023     		movs	r3, #0
 1388 027e 1E93     		str	r3, [sp, #120]
 1389              	.LVL164:
 1390              	.L90:
 523:Core/Src/printf.c ****       // no characters in exponent
 1391              		.loc 1 523 7 is_stmt 1 view .LVU344
 523:Core/Src/printf.c ****       // no characters in exponent
 1392              		.loc 1 523 13 is_stmt 0 view .LVU345
 1393 0280 209B     		ldr	r3, [sp, #128]
 1394 0282 43F48063 		orr	r3, r3, #1024
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 37


 1395 0286 2093     		str	r3, [sp, #128]
 1396              	.LVL165:
 525:Core/Src/printf.c ****       expval   = 0;
 1397              		.loc 1 525 7 is_stmt 1 view .LVU346
 526:Core/Src/printf.c ****     }
 1398              		.loc 1 526 7 view .LVU347
 525:Core/Src/printf.c ****       expval   = 0;
 1399              		.loc 1 525 16 is_stmt 0 view .LVU348
 1400 0288 0027     		movs	r7, #0
 526:Core/Src/printf.c ****     }
 1401              		.loc 1 526 16 view .LVU349
 1402 028a 3E46     		mov	r6, r7
 1403              	.LVL166:
 1404              	.L86:
 537:Core/Src/printf.c ****   if (width > minwidth) {
 1405              		.loc 1 537 3 is_stmt 1 view .LVU350
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1406              		.loc 1 538 3 view .LVU351
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1407              		.loc 1 538 6 is_stmt 0 view .LVU352
 1408 028c 1F9B     		ldr	r3, [sp, #124]
 1409 028e 9F42     		cmp	r7, r3
 1410 0290 40D2     		bcs	.L103
 540:Core/Src/printf.c ****   } else {
 1411              		.loc 1 540 5 is_stmt 1 view .LVU353
 540:Core/Src/printf.c ****   } else {
 1412              		.loc 1 540 12 is_stmt 0 view .LVU354
 1413 0292 A3EB0708 		sub	r8, r3, r7
 1414              	.LVL167:
 540:Core/Src/printf.c ****   } else {
 1415              		.loc 1 540 12 view .LVU355
 1416 0296 3FE0     		b	.L91
 1417              	.LVL168:
 1418              	.L87:
 530:Core/Src/printf.c ****         --prec;
 1419              		.loc 1 530 7 is_stmt 1 view .LVU356
 530:Core/Src/printf.c ****         --prec;
 1420              		.loc 1 530 10 is_stmt 0 view .LVU357
 1421 0298 1E9B     		ldr	r3, [sp, #120]
 1422 029a 002B     		cmp	r3, #0
 1423 029c F6D0     		beq	.L86
 530:Core/Src/printf.c ****         --prec;
 1424              		.loc 1 530 22 discriminator 1 view .LVU358
 1425 029e 119B     		ldr	r3, [sp, #68]
 1426 02a0 002B     		cmp	r3, #0
 1427 02a2 F3D0     		beq	.L86
 531:Core/Src/printf.c ****       }
 1428              		.loc 1 531 9 is_stmt 1 view .LVU359
 1429 02a4 1E9B     		ldr	r3, [sp, #120]
 1430 02a6 013B     		subs	r3, r3, #1
 1431 02a8 1E93     		str	r3, [sp, #120]
 1432              	.LVL169:
 531:Core/Src/printf.c ****       }
 1433              		.loc 1 531 9 is_stmt 0 view .LVU360
 1434 02aa EFE7     		b	.L86
 1435              	.L118:
 1436 02ac AFF30080 		.align	3
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 38


 1437              	.L117:
 1438 02b0 FB799F50 		.word	1352628731
 1439 02b4 1344D33F 		.word	1070810131
 1440 02b8 B3C8608B 		.word	-1956591437
 1441 02bc 288AC63F 		.word	1069976104
 1442 02c0 61436F63 		.word	1668236129
 1443 02c4 A787D23F 		.word	1070761895
 1444 02c8 71A37909 		.word	158966641
 1445 02cc 4F930A40 		.word	1074434895
 1446 02d0 1655B5BB 		.word	-1145744106
 1447 02d4 B16B0240 		.word	1073900465
 1448 02d8 EF39FAFE 		.word	-17155601
 1449 02dc 422EE63F 		.word	1072049730
 1450 02e0 2D431CEB 		.word	-350469331
 1451 02e4 E2361A3F 		.word	1058682594
 1452 02e8 00000000 		.word	0
 1453 02ec 80842E41 		.word	1093567616
 1454 02f0 00000000 		.word	0
 1455 02f4 00000000 		.word	0
 1456 02f8 FFFFEF7F 		.word	2146435071
 1457 02fc 0000F83F 		.word	1073217536
 1458 0300 0000E03F 		.word	1071644672
 1459 0304 00002C40 		.word	1076625408
 1460 0308 00002440 		.word	1076101120
 1461 030c 00001840 		.word	1075314688
 1462 0310 0000F03F 		.word	1072693248
 1463              	.LVL170:
 1464              	.L103:
 543:Core/Src/printf.c ****   }
 1465              		.loc 1 543 12 view .LVU361
 1466 0314 4FF00008 		mov	r8, #0
 1467              	.LVL171:
 1468              	.L91:
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1469              		.loc 1 545 3 is_stmt 1 view .LVU362
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1470              		.loc 1 545 6 is_stmt 0 view .LVU363
 1471 0318 209B     		ldr	r3, [sp, #128]
 1472 031a 13F00209 		ands	r9, r3, #2
 1473 031e 02D0     		beq	.L92
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1474              		.loc 1 545 28 discriminator 1 view .LVU364
 1475 0320 0FB1     		cbz	r7, .L92
 547:Core/Src/printf.c ****   }
 1476              		.loc 1 547 12 view .LVU365
 1477 0322 4FF00008 		mov	r8, #0
 1478              	.LVL172:
 1479              	.L92:
 551:Core/Src/printf.c ****     value /= conv.F;
 1480              		.loc 1 551 3 is_stmt 1 view .LVU366
 551:Core/Src/printf.c ****     value /= conv.F;
 1481              		.loc 1 551 6 is_stmt 0 view .LVU367
 1482 0326 3EB1     		cbz	r6, .L93
 552:Core/Src/printf.c ****   }
 1483              		.loc 1 552 5 is_stmt 1 view .LVU368
 1484              	.LVL173:
 552:Core/Src/printf.c ****   }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 39


 1485              		.loc 1 552 18 is_stmt 0 view .LVU369
 1486 0328 53EC182B 		vmov	r2, r3, d8
 552:Core/Src/printf.c ****   }
 1487              		.loc 1 552 11 view .LVU370
 1488 032c DDE90601 		ldrd	r0, [sp, #24]
 1489 0330 FFF7FEFF 		bl	__aeabi_ddiv
 1490              	.LVL174:
 1491 0334 CDE90601 		strd	r0, [sp, #24]
 1492              	.LVL175:
 1493              	.L93:
 556:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1494              		.loc 1 556 3 is_stmt 1 view .LVU371
 557:Core/Src/printf.c **** 
 1495              		.loc 1 557 3 view .LVU372
 557:Core/Src/printf.c **** 
 1496              		.loc 1 557 9 is_stmt 0 view .LVU373
 1497 0338 0022     		movs	r2, #0
 1498 033a 0023     		movs	r3, #0
 1499 033c DDE90801 		ldrd	r0, [sp, #32]
 1500 0340 FFF7FEFF 		bl	__aeabi_dcmplt
 1501              	.LVL176:
 1502 0344 0028     		cmp	r0, #0
 1503 0346 3BD1     		bne	.L116
 1504              	.LVL177:
 1505              	.L94:
 557:Core/Src/printf.c **** 
 1506              		.loc 1 557 9 discriminator 4 view .LVU374
 1507 0348 209B     		ldr	r3, [sp, #128]
 1508 034a 23F40063 		bic	r3, r3, #2048
 1509 034e 0293     		str	r3, [sp, #8]
 1510 0350 CDF80480 		str	r8, [sp, #4]
 1511 0354 1E9B     		ldr	r3, [sp, #120]
 1512 0356 0093     		str	r3, [sp]
 1513 0358 9DED060B 		vldr.64	d0, [sp, #24]
 1514 035c 2B46     		mov	r3, r5
 1515 035e 5A46     		mov	r2, fp
 1516 0360 2146     		mov	r1, r4
 1517 0362 5046     		mov	r0, r10
 1518 0364 FFF7FEFF 		bl	_ftoa
 1519              	.LVL178:
 560:Core/Src/printf.c ****     // output the exponential symbol
 1520              		.loc 1 560 3 is_stmt 1 view .LVU375
 560:Core/Src/printf.c ****     // output the exponential symbol
 1521              		.loc 1 560 6 is_stmt 0 view .LVU376
 1522 0368 002F     		cmp	r7, #0
 1523 036a 3FF477AF 		beq	.L79
 562:Core/Src/printf.c ****     // output the exponent value
 1524              		.loc 1 562 5 is_stmt 1 view .LVU377
 1525 036e 209B     		ldr	r3, [sp, #128]
 1526 0370 13F0200F 		tst	r3, #32
 1527 0374 2CD0     		beq	.L105
 562:Core/Src/printf.c ****     // output the exponent value
 1528              		.loc 1 562 5 is_stmt 0 discriminator 1 view .LVU378
 1529 0376 4FF0450C 		mov	ip, #69
 1530              	.L96:
 562:Core/Src/printf.c ****     // output the exponent value
 1531              		.loc 1 562 5 discriminator 4 view .LVU379
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 40


 1532 037a 00F10108 		add	r8, r0, #1
 1533              	.LVL179:
 562:Core/Src/printf.c ****     // output the exponent value
 1534              		.loc 1 562 5 discriminator 4 view .LVU380
 1535 037e 2B46     		mov	r3, r5
 1536 0380 0246     		mov	r2, r0
 1537 0382 2146     		mov	r1, r4
 1538 0384 6046     		mov	r0, ip
 1539 0386 D047     		blx	r10
 1540              	.LVL180:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1541              		.loc 1 564 5 is_stmt 1 view .LVU381
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1542              		.loc 1 564 71 is_stmt 0 view .LVU382
 1543 0388 86EAE672 		eor	r2, r6, r6, asr #31
 1544 038c A2EBE672 		sub	r2, r2, r6, asr #31
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1545              		.loc 1 564 11 view .LVU383
 1546 0390 0523     		movs	r3, #5
 1547 0392 0593     		str	r3, [sp, #20]
 1548 0394 013F     		subs	r7, r7, #1
 1549              	.LVL181:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1550              		.loc 1 564 11 view .LVU384
 1551 0396 0497     		str	r7, [sp, #16]
 1552 0398 0023     		movs	r3, #0
 1553 039a 0393     		str	r3, [sp, #12]
 1554 039c 0A23     		movs	r3, #10
 1555 039e 0293     		str	r3, [sp, #8]
 1556 03a0 F30F     		lsrs	r3, r6, #31
 1557 03a2 0193     		str	r3, [sp, #4]
 1558 03a4 0092     		str	r2, [sp]
 1559 03a6 2B46     		mov	r3, r5
 1560 03a8 4246     		mov	r2, r8
 1561 03aa 2146     		mov	r1, r4
 1562 03ac 5046     		mov	r0, r10
 1563 03ae FFF7FEFF 		bl	_ntoa_long
 1564              	.LVL182:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1565              		.loc 1 566 5 is_stmt 1 view .LVU385
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1566              		.loc 1 566 8 is_stmt 0 view .LVU386
 1567 03b2 B9F1000F 		cmp	r9, #0
 1568 03b6 3FF451AF 		beq	.L79
 1569 03ba 0246     		mov	r2, r0
 1570 03bc 1F9F     		ldr	r7, [sp, #124]
 1571              	.LVL183:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1572              		.loc 1 566 8 view .LVU387
 1573 03be 10E0     		b	.L97
 1574              	.LVL184:
 1575              	.L116:
 557:Core/Src/printf.c **** 
 1576              		.loc 1 557 9 discriminator 1 view .LVU388
 1577 03c0 DDE90601 		ldrd	r0, [sp, #24]
 1578 03c4 0246     		mov	r2, r0
 1579 03c6 01F10043 		add	r3, r1, #-2147483648
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 41


 1580 03ca CDE90623 		strd	r2, [sp, #24]
 1581              	.LVL185:
 557:Core/Src/printf.c **** 
 1582              		.loc 1 557 9 discriminator 1 view .LVU389
 1583 03ce BBE7     		b	.L94
 1584              	.LVL186:
 1585              	.L105:
 562:Core/Src/printf.c ****     // output the exponent value
 1586              		.loc 1 562 5 discriminator 2 view .LVU390
 1587 03d0 4FF0650C 		mov	ip, #101
 1588 03d4 D1E7     		b	.L96
 1589              	.LVL187:
 1590              	.L98:
 567:Core/Src/printf.c ****     }
 1591              		.loc 1 567 39 is_stmt 1 discriminator 2 view .LVU391
 1592 03d6 561C     		adds	r6, r2, #1
 1593              	.LVL188:
 567:Core/Src/printf.c ****     }
 1594              		.loc 1 567 39 is_stmt 0 discriminator 2 view .LVU392
 1595 03d8 2B46     		mov	r3, r5
 1596 03da 2146     		mov	r1, r4
 1597 03dc 2020     		movs	r0, #32
 1598 03de D047     		blx	r10
 1599              	.LVL189:
 1600 03e0 3246     		mov	r2, r6
 1601              	.LVL190:
 1602              	.L97:
 567:Core/Src/printf.c ****     }
 1603              		.loc 1 567 30 is_stmt 1 discriminator 1 view .LVU393
 567:Core/Src/printf.c ****     }
 1604              		.loc 1 567 18 is_stmt 0 discriminator 1 view .LVU394
 1605 03e2 A2EB0B03 		sub	r3, r2, fp
 567:Core/Src/printf.c ****     }
 1606              		.loc 1 567 30 discriminator 1 view .LVU395
 1607 03e6 BB42     		cmp	r3, r7
 1608 03e8 F5D3     		bcc	.L98
 567:Core/Src/printf.c ****     }
 1609              		.loc 1 567 30 discriminator 1 view .LVU396
 1610 03ea 1046     		mov	r0, r2
 1611 03ec 36E7     		b	.L79
 1612              		.cfi_endproc
 1613              	.LFE12:
 1615 03ee 00BF     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1616              		.align	2
 1617              	.LC0:
 1618 0000 666E692B 		.ascii	"fni+\000"
 1618      00
 1619 0005 000000   		.align	2
 1620              	.LC1:
 1621 0008 666E6900 		.ascii	"fni\000"
 1622              		.align	2
 1623              	.LC2:
 1624 000c 6E616E00 		.ascii	"nan\000"
 1625              		.align	2
 1626              	.LC3:
 1627 0010 666E692D 		.ascii	"fni-\000"
 1627      00
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 42


 1628              		.section	.text._ftoa,"ax",%progbits
 1629              		.align	1
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1634              	_ftoa:
 1635              	.LVL191:
 1636              	.LFB11:
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1637              		.loc 1 340 1 is_stmt 1 view -0
 1638              		.cfi_startproc
 1639              		@ args = 12, pretend = 0, frame = 56
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1641              		.loc 1 340 1 is_stmt 0 view .LVU398
 1642 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1643              	.LCFI22:
 1644              		.cfi_def_cfa_offset 36
 1645              		.cfi_offset 4, -36
 1646              		.cfi_offset 5, -32
 1647              		.cfi_offset 6, -28
 1648              		.cfi_offset 7, -24
 1649              		.cfi_offset 8, -20
 1650              		.cfi_offset 9, -16
 1651              		.cfi_offset 10, -12
 1652              		.cfi_offset 11, -8
 1653              		.cfi_offset 14, -4
 1654 0004 2DED028B 		vpush.64	{d8}
 1655              	.LCFI23:
 1656              		.cfi_def_cfa_offset 44
 1657              		.cfi_offset 80, -44
 1658              		.cfi_offset 81, -40
 1659 0008 93B0     		sub	sp, sp, #76
 1660              	.LCFI24:
 1661              		.cfi_def_cfa_offset 120
 1662 000a 0590     		str	r0, [sp, #20]
 1663 000c 0891     		str	r1, [sp, #32]
 1664 000e 9246     		mov	r10, r2
 1665 0010 9B46     		mov	fp, r3
 1666 0012 59EC108B 		vmov	r8, r9, d0
 1667 0016 1E9D     		ldr	r5, [sp, #120]
 341:Core/Src/printf.c ****   size_t len  = 0U;
 1668              		.loc 1 341 3 is_stmt 1 view .LVU399
 342:Core/Src/printf.c ****   double diff = 0.0;
 1669              		.loc 1 342 3 view .LVU400
 1670              	.LVL192:
 343:Core/Src/printf.c **** 
 1671              		.loc 1 343 3 view .LVU401
 346:Core/Src/printf.c **** 
 1672              		.loc 1 346 3 view .LVU402
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1673              		.loc 1 349 3 view .LVU403
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1674              		.loc 1 349 6 is_stmt 0 view .LVU404
 1675 0018 4246     		mov	r2, r8
 1676              	.LVL193:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 43


 1677              		.loc 1 349 6 view .LVU405
 1678 001a 4B46     		mov	r3, r9
 1679              	.LVL194:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1680              		.loc 1 349 6 view .LVU406
 1681 001c 4046     		mov	r0, r8
 1682              	.LVL195:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1683              		.loc 1 349 6 view .LVU407
 1684 001e 4946     		mov	r1, r9
 1685              	.LVL196:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1686              		.loc 1 349 6 view .LVU408
 1687 0020 FFF7FEFF 		bl	__aeabi_dcmpeq
 1688              	.LVL197:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1689              		.loc 1 349 6 view .LVU409
 1690 0024 0028     		cmp	r0, #0
 1691 0026 40D0     		beq	.L186
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1692              		.loc 1 351 3 is_stmt 1 view .LVU410
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1693              		.loc 1 351 6 is_stmt 0 view .LVU411
 1694 0028 4FF0FF32 		mov	r2, #-1
 1695 002c 6FF48013 		mvn	r3, #1048576
 1696 0030 4046     		mov	r0, r8
 1697 0032 4946     		mov	r1, r9
 1698 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 1699              	.LVL198:
 1700 0038 0028     		cmp	r0, #0
 1701 003a 45D1     		bne	.L187
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1702              		.loc 1 353 3 is_stmt 1 view .LVU412
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1703              		.loc 1 353 6 is_stmt 0 view .LVU413
 1704 003c 4FF0FF32 		mov	r2, #-1
 1705 0040 AB4B     		ldr	r3, .L191+16
 1706 0042 4046     		mov	r0, r8
 1707 0044 4946     		mov	r1, r9
 1708 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 1709              	.LVL199:
 1710 004a 0028     		cmp	r0, #0
 1711 004c 4BD1     		bne	.L188
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1712              		.loc 1 358 3 is_stmt 1 view .LVU414
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1713              		.loc 1 358 6 is_stmt 0 view .LVU415
 1714 004e A4A3     		adr	r3, .L191
 1715 0050 D3E90023 		ldrd	r2, [r3]
 1716 0054 4046     		mov	r0, r8
 1717 0056 4946     		mov	r1, r9
 1718 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 1719              	.LVL200:
 1720 005c 0028     		cmp	r0, #0
 1721 005e 58D1     		bne	.L128
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1722              		.loc 1 358 34 discriminator 1 view .LVU416
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 44


 1723 0060 A1A3     		adr	r3, .L191+8
 1724 0062 D3E90023 		ldrd	r2, [r3]
 1725 0066 4046     		mov	r0, r8
 1726 0068 4946     		mov	r1, r9
 1727 006a FFF7FEFF 		bl	__aeabi_dcmplt
 1728              	.LVL201:
 1729 006e 0028     		cmp	r0, #0
 1730 0070 4FD1     		bne	.L128
 367:Core/Src/printf.c ****   if (value < 0) {
 1731              		.loc 1 367 3 is_stmt 1 view .LVU417
 1732              	.LVL202:
 368:Core/Src/printf.c ****     negative = true;
 1733              		.loc 1 368 3 view .LVU418
 368:Core/Src/printf.c ****     negative = true;
 1734              		.loc 1 368 6 is_stmt 0 view .LVU419
 1735 0072 0022     		movs	r2, #0
 1736 0074 0023     		movs	r3, #0
 1737 0076 4046     		mov	r0, r8
 1738 0078 4946     		mov	r1, r9
 1739 007a FFF7FEFF 		bl	__aeabi_dcmplt
 1740              	.LVL203:
 1741 007e 0028     		cmp	r0, #0
 1742 0080 55D1     		bne	.L189
 367:Core/Src/printf.c ****   if (value < 0) {
 1743              		.loc 1 367 8 view .LVU420
 1744 0082 0023     		movs	r3, #0
 1745 0084 0993     		str	r3, [sp, #36]
 1746              	.LVL204:
 1747              	.L131:
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1748              		.loc 1 374 3 is_stmt 1 view .LVU421
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1749              		.loc 1 374 6 is_stmt 0 view .LVU422
 1750 0086 209B     		ldr	r3, [sp, #128]
 1751 0088 13F4806F 		tst	r3, #1024
 1752 008c 5AD0     		beq	.L163
 1753              	.L133:
 1754              	.LVL205:
 375:Core/Src/printf.c ****   }
 1755              		.loc 1 375 10 view .LVU423
 1756 008e 0024     		movs	r4, #0
 1757              	.LVL206:
 1758              	.L135:
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1759              		.loc 1 378 42 is_stmt 1 view .LVU424
 1760 0090 1F2C     		cmp	r4, #31
 1761 0092 59D8     		bhi	.L136
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1762              		.loc 1 378 42 is_stmt 0 discriminator 1 view .LVU425
 1763 0094 092D     		cmp	r5, #9
 1764 0096 57D9     		bls	.L136
 379:Core/Src/printf.c ****     prec--;
 1765              		.loc 1 379 5 is_stmt 1 view .LVU426
 1766              	.LVL207:
 379:Core/Src/printf.c ****     prec--;
 1767              		.loc 1 379 16 is_stmt 0 view .LVU427
 1768 0098 04F14803 		add	r3, r4, #72
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 45


 1769 009c 6B44     		add	r3, sp, r3
 1770 009e 3022     		movs	r2, #48
 1771 00a0 03F8202C 		strb	r2, [r3, #-32]
 380:Core/Src/printf.c ****   }
 1772              		.loc 1 380 5 is_stmt 1 view .LVU428
 380:Core/Src/printf.c ****   }
 1773              		.loc 1 380 9 is_stmt 0 view .LVU429
 1774 00a4 013D     		subs	r5, r5, #1
 1775              	.LVL208:
 379:Core/Src/printf.c ****     prec--;
 1776              		.loc 1 379 12 view .LVU430
 1777 00a6 0134     		adds	r4, r4, #1
 1778              	.LVL209:
 379:Core/Src/printf.c ****     prec--;
 1779              		.loc 1 379 12 view .LVU431
 1780 00a8 F2E7     		b	.L135
 1781              	.LVL210:
 1782              	.L186:
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1783              		.loc 1 350 5 is_stmt 1 view .LVU432
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1784              		.loc 1 350 12 is_stmt 0 view .LVU433
 1785 00aa 209B     		ldr	r3, [sp, #128]
 1786 00ac 0393     		str	r3, [sp, #12]
 1787 00ae 1F9B     		ldr	r3, [sp, #124]
 1788 00b0 0293     		str	r3, [sp, #8]
 1789 00b2 0323     		movs	r3, #3
 1790 00b4 0193     		str	r3, [sp, #4]
 1791 00b6 8F4B     		ldr	r3, .L191+20
 1792 00b8 0093     		str	r3, [sp]
 1793 00ba 5B46     		mov	r3, fp
 1794 00bc 5246     		mov	r2, r10
 1795 00be 0899     		ldr	r1, [sp, #32]
 1796 00c0 0598     		ldr	r0, [sp, #20]
 1797 00c2 FFF7FEFF 		bl	_out_rev
 1798              	.LVL211:
 1799 00c6 05E1     		b	.L119
 1800              	.L187:
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1801              		.loc 1 352 5 is_stmt 1 view .LVU434
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1802              		.loc 1 352 12 is_stmt 0 view .LVU435
 1803 00c8 209B     		ldr	r3, [sp, #128]
 1804 00ca 0393     		str	r3, [sp, #12]
 1805 00cc 1F9B     		ldr	r3, [sp, #124]
 1806 00ce 0293     		str	r3, [sp, #8]
 1807 00d0 0423     		movs	r3, #4
 1808 00d2 0193     		str	r3, [sp, #4]
 1809 00d4 884B     		ldr	r3, .L191+24
 1810 00d6 0093     		str	r3, [sp]
 1811 00d8 5B46     		mov	r3, fp
 1812 00da 5246     		mov	r2, r10
 1813 00dc 0899     		ldr	r1, [sp, #32]
 1814 00de 0598     		ldr	r0, [sp, #20]
 1815 00e0 FFF7FEFF 		bl	_out_rev
 1816              	.LVL212:
 1817 00e4 F6E0     		b	.L119
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 46


 1818              	.L188:
 354:Core/Src/printf.c **** 
 1819              		.loc 1 354 5 is_stmt 1 view .LVU436
 354:Core/Src/printf.c **** 
 1820              		.loc 1 354 12 is_stmt 0 view .LVU437
 1821 00e6 209B     		ldr	r3, [sp, #128]
 1822 00e8 13F0040F 		tst	r3, #4
 1823 00ec 0ED0     		beq	.L161
 354:Core/Src/printf.c **** 
 1824              		.loc 1 354 12 discriminator 1 view .LVU438
 1825 00ee 834B     		ldr	r3, .L191+28
 354:Core/Src/printf.c **** 
 1826              		.loc 1 354 12 discriminator 5 view .LVU439
 1827 00f0 0422     		movs	r2, #4
 1828              	.L127:
 354:Core/Src/printf.c **** 
 1829              		.loc 1 354 12 discriminator 8 view .LVU440
 1830 00f2 2099     		ldr	r1, [sp, #128]
 1831 00f4 0391     		str	r1, [sp, #12]
 1832 00f6 1F99     		ldr	r1, [sp, #124]
 1833 00f8 0291     		str	r1, [sp, #8]
 1834 00fa 0192     		str	r2, [sp, #4]
 1835 00fc 0093     		str	r3, [sp]
 1836 00fe 5B46     		mov	r3, fp
 1837 0100 5246     		mov	r2, r10
 1838 0102 0899     		ldr	r1, [sp, #32]
 1839 0104 0598     		ldr	r0, [sp, #20]
 1840 0106 FFF7FEFF 		bl	_out_rev
 1841              	.LVL213:
 354:Core/Src/printf.c **** 
 1842              		.loc 1 354 12 view .LVU441
 1843 010a E3E0     		b	.L119
 1844              	.L161:
 354:Core/Src/printf.c **** 
 1845              		.loc 1 354 12 discriminator 2 view .LVU442
 1846 010c 7C4B     		ldr	r3, .L191+32
 354:Core/Src/printf.c **** 
 1847              		.loc 1 354 12 discriminator 6 view .LVU443
 1848 010e 0322     		movs	r2, #3
 1849 0110 EFE7     		b	.L127
 1850              	.L128:
 360:Core/Src/printf.c **** #else
 1851              		.loc 1 360 5 is_stmt 1 view .LVU444
 360:Core/Src/printf.c **** #else
 1852              		.loc 1 360 12 is_stmt 0 view .LVU445
 1853 0112 209B     		ldr	r3, [sp, #128]
 1854 0114 0293     		str	r3, [sp, #8]
 1855 0116 1F9B     		ldr	r3, [sp, #124]
 1856 0118 0193     		str	r3, [sp, #4]
 1857 011a 0095     		str	r5, [sp]
 1858 011c 49EC108B 		vmov	d0, r8, r9
 1859 0120 5B46     		mov	r3, fp
 1860 0122 5246     		mov	r2, r10
 1861 0124 0899     		ldr	r1, [sp, #32]
 1862 0126 0598     		ldr	r0, [sp, #20]
 1863 0128 FFF7FEFF 		bl	_etoa
 1864              	.LVL214:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 47


 1865 012c D2E0     		b	.L119
 1866              	.LVL215:
 1867              	.L189:
 369:Core/Src/printf.c ****     value = 0 - value;
 1868              		.loc 1 369 5 is_stmt 1 view .LVU446
 370:Core/Src/printf.c ****   }
 1869              		.loc 1 370 5 view .LVU447
 370:Core/Src/printf.c ****   }
 1870              		.loc 1 370 11 is_stmt 0 view .LVU448
 1871 012e 4246     		mov	r2, r8
 1872 0130 4B46     		mov	r3, r9
 1873 0132 0020     		movs	r0, #0
 1874 0134 0021     		movs	r1, #0
 1875 0136 FFF7FEFF 		bl	__aeabi_dsub
 1876              	.LVL216:
 1877 013a 8046     		mov	r8, r0
 1878              	.LVL217:
 370:Core/Src/printf.c ****   }
 1879              		.loc 1 370 11 view .LVU449
 1880 013c 8946     		mov	r9, r1
 1881              	.LVL218:
 369:Core/Src/printf.c ****     value = 0 - value;
 1882              		.loc 1 369 14 view .LVU450
 1883 013e 0123     		movs	r3, #1
 1884 0140 0993     		str	r3, [sp, #36]
 1885 0142 A0E7     		b	.L131
 1886              	.LVL219:
 1887              	.L163:
 375:Core/Src/printf.c ****   }
 1888              		.loc 1 375 10 view .LVU451
 1889 0144 0625     		movs	r5, #6
 1890 0146 A2E7     		b	.L133
 1891              	.LVL220:
 1892              	.L136:
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1893              		.loc 1 383 3 is_stmt 1 view .LVU452
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1894              		.loc 1 383 7 is_stmt 0 view .LVU453
 1895 0148 4046     		mov	r0, r8
 1896 014a 4946     		mov	r1, r9
 1897 014c FFF7FEFF 		bl	__aeabi_d2iz
 1898              	.LVL221:
 1899 0150 0646     		mov	r6, r0
 1900              	.LVL222:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1901              		.loc 1 384 3 is_stmt 1 view .LVU454
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1902              		.loc 1 384 23 is_stmt 0 view .LVU455
 1903 0152 FFF7FEFF 		bl	__aeabi_i2d
 1904              	.LVL223:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1905              		.loc 1 384 23 view .LVU456
 1906 0156 0246     		mov	r2, r0
 1907 0158 0B46     		mov	r3, r1
 1908 015a 4046     		mov	r0, r8
 1909 015c 4946     		mov	r1, r9
 1910 015e FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 48


 1911              	.LVL224:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1912              		.loc 1 384 39 view .LVU457
 1913 0162 684B     		ldr	r3, .L191+36
 1914 0164 03EBC503 		add	r3, r3, r5, lsl #3
 1915 0168 93ED008B 		vldr.64	d8, [r3]
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1916              		.loc 1 384 10 view .LVU458
 1917 016c 53EC182B 		vmov	r2, r3, d8
 1918 0170 FFF7FEFF 		bl	__aeabi_dmul
 1919              	.LVL225:
 1920 0174 0246     		mov	r2, r0
 1921 0176 0B46     		mov	r3, r1
 1922 0178 CDE90623 		strd	r2, [sp, #24]
 1923              	.LVL226:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1924              		.loc 1 385 3 is_stmt 1 view .LVU459
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1925              		.loc 1 385 17 is_stmt 0 view .LVU460
 1926 017c FFF7FEFF 		bl	__aeabi_d2uiz
 1927              	.LVL227:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1928              		.loc 1 385 17 view .LVU461
 1929 0180 0746     		mov	r7, r0
 1930              	.LVL228:
 386:Core/Src/printf.c **** 
 1931              		.loc 1 386 3 is_stmt 1 view .LVU462
 386:Core/Src/printf.c **** 
 1932              		.loc 1 386 14 is_stmt 0 view .LVU463
 1933 0182 FFF7FEFF 		bl	__aeabi_ui2d
 1934              	.LVL229:
 386:Core/Src/printf.c **** 
 1935              		.loc 1 386 14 view .LVU464
 1936 0186 0246     		mov	r2, r0
 1937 0188 0B46     		mov	r3, r1
 386:Core/Src/printf.c **** 
 1938              		.loc 1 386 8 view .LVU465
 1939 018a DDE90601 		ldrd	r0, [sp, #24]
 1940 018e FFF7FEFF 		bl	__aeabi_dsub
 1941              	.LVL230:
 1942 0192 0246     		mov	r2, r0
 1943 0194 0B46     		mov	r3, r1
 1944 0196 CDE90623 		strd	r2, [sp, #24]
 1945              	.LVL231:
 388:Core/Src/printf.c ****     ++frac;
 1946              		.loc 1 388 3 is_stmt 1 view .LVU466
 388:Core/Src/printf.c ****     ++frac;
 1947              		.loc 1 388 6 is_stmt 0 view .LVU467
 1948 019a 0022     		movs	r2, #0
 1949              	.LVL232:
 388:Core/Src/printf.c ****     ++frac;
 1950              		.loc 1 388 6 view .LVU468
 1951 019c 5A4B     		ldr	r3, .L191+40
 1952 019e FFF7FEFF 		bl	__aeabi_dcmpgt
 1953              	.LVL233:
 1954 01a2 08B3     		cbz	r0, .L177
 389:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 49


 1955              		.loc 1 389 5 is_stmt 1 view .LVU469
 1956 01a4 0137     		adds	r7, r7, #1
 1957              	.LVL234:
 391:Core/Src/printf.c ****       frac = 0;
 1958              		.loc 1 391 5 view .LVU470
 391:Core/Src/printf.c ****       frac = 0;
 1959              		.loc 1 391 14 is_stmt 0 view .LVU471
 1960 01a6 3846     		mov	r0, r7
 1961 01a8 FFF7FEFF 		bl	__aeabi_ui2d
 1962              	.LVL235:
 1963 01ac 0246     		mov	r2, r0
 1964 01ae 0B46     		mov	r3, r1
 391:Core/Src/printf.c ****       frac = 0;
 1965              		.loc 1 391 8 view .LVU472
 1966 01b0 51EC180B 		vmov	r0, r1, d8
 1967 01b4 FFF7FEFF 		bl	__aeabi_dcmple
 1968              	.LVL236:
 1969 01b8 08B1     		cbz	r0, .L140
 392:Core/Src/printf.c ****       ++whole;
 1970              		.loc 1 392 7 is_stmt 1 view .LVU473
 1971              	.LVL237:
 393:Core/Src/printf.c ****     }
 1972              		.loc 1 393 7 view .LVU474
 1973 01ba 0136     		adds	r6, r6, #1
 1974              	.LVL238:
 392:Core/Src/printf.c ****       ++whole;
 1975              		.loc 1 392 12 is_stmt 0 view .LVU475
 1976 01bc 0027     		movs	r7, #0
 1977              	.LVL239:
 1978              	.L140:
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1979              		.loc 1 403 3 is_stmt 1 view .LVU476
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1980              		.loc 1 403 6 is_stmt 0 view .LVU477
 1981 01be 0DBB     		cbnz	r5, .L143
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1982              		.loc 1 404 5 is_stmt 1 view .LVU478
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1983              		.loc 1 404 20 is_stmt 0 view .LVU479
 1984 01c0 3046     		mov	r0, r6
 1985 01c2 FFF7FEFF 		bl	__aeabi_i2d
 1986              	.LVL240:
 1987 01c6 0246     		mov	r2, r0
 1988 01c8 0B46     		mov	r3, r1
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1989              		.loc 1 404 10 view .LVU480
 1990 01ca 4046     		mov	r0, r8
 1991 01cc 4946     		mov	r1, r9
 1992 01ce FFF7FEFF 		bl	__aeabi_dsub
 1993              	.LVL241:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1994              		.loc 1 405 5 is_stmt 1 view .LVU481
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1995              		.loc 1 405 8 is_stmt 0 view .LVU482
 1996 01d2 0022     		movs	r2, #0
 1997 01d4 4C4B     		ldr	r3, .L191+40
 1998 01d6 FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 50


 1999              	.LVL242:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2000              		.loc 1 405 8 view .LVU483
 2001 01da 0028     		cmp	r0, #0
 2002 01dc 42D1     		bne	.L151
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2003              		.loc 1 405 41 discriminator 3 view .LVU484
 2004 01de 16F0010F 		tst	r6, #1
 2005 01e2 3FD0     		beq	.L151
 408:Core/Src/printf.c ****     }
 2006              		.loc 1 408 7 is_stmt 1 view .LVU485
 2007 01e4 0136     		adds	r6, r6, #1
 2008              	.LVL243:
 408:Core/Src/printf.c ****     }
 2009              		.loc 1 408 7 is_stmt 0 view .LVU486
 2010 01e6 3DE0     		b	.L151
 2011              	.LVL244:
 2012              	.L177:
 396:Core/Src/printf.c ****   }
 2013              		.loc 1 396 8 is_stmt 1 view .LVU487
 396:Core/Src/printf.c ****   }
 2014              		.loc 1 396 11 is_stmt 0 view .LVU488
 2015 01e8 0022     		movs	r2, #0
 2016 01ea 474B     		ldr	r3, .L191+40
 2017 01ec DDE90601 		ldrd	r0, [sp, #24]
 2018 01f0 FFF7FEFF 		bl	__aeabi_dcmplt
 2019              	.LVL245:
 2020 01f4 0028     		cmp	r0, #0
 2021 01f6 E2D1     		bne	.L140
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2022              		.loc 1 398 8 is_stmt 1 view .LVU489
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2023              		.loc 1 398 11 is_stmt 0 view .LVU490
 2024 01f8 17B1     		cbz	r7, .L142
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2025              		.loc 1 398 25 discriminator 1 view .LVU491
 2026 01fa 17F0010F 		tst	r7, #1
 2027 01fe DED0     		beq	.L140
 2028              	.L142:
 400:Core/Src/printf.c ****   }
 2029              		.loc 1 400 5 is_stmt 1 view .LVU492
 2030 0200 0137     		adds	r7, r7, #1
 2031              	.LVL246:
 400:Core/Src/printf.c ****   }
 2032              		.loc 1 400 5 is_stmt 0 view .LVU493
 2033 0202 DCE7     		b	.L140
 2034              	.LVL247:
 2035              	.L143:
 2036              	.LBB30:
 414:Core/Src/printf.c ****       --count;
 2037              		.loc 1 414 16 is_stmt 1 view .LVU494
 2038 0204 1F2C     		cmp	r4, #31
 2039 0206 17D8     		bhi	.L147
 415:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2040              		.loc 1 415 7 view .LVU495
 2041 0208 013D     		subs	r5, r5, #1
 2042              	.LVL248:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 51


 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2043              		.loc 1 416 7 view .LVU496
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2044              		.loc 1 416 39 is_stmt 0 view .LVU497
 2045 020a 404B     		ldr	r3, .L191+44
 2046 020c A3FB0723 		umull	r2, r3, r3, r7
 2047 0210 DB08     		lsrs	r3, r3, #3
 2048 0212 1946     		mov	r1, r3
 2049 0214 03EB8303 		add	r3, r3, r3, lsl #2
 2050 0218 A7EB4303 		sub	r3, r7, r3, lsl #1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2051              		.loc 1 416 14 view .LVU498
 2052 021c 621C     		adds	r2, r4, #1
 2053              	.LVL249:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2054              		.loc 1 416 20 view .LVU499
 2055 021e 3033     		adds	r3, r3, #48
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2056              		.loc 1 416 18 view .LVU500
 2057 0220 04F14800 		add	r0, r4, #72
 2058 0224 0DEB0004 		add	r4, sp, r0
 2059 0228 04F8203C 		strb	r3, [r4, #-32]
 417:Core/Src/printf.c ****         break;
 2060              		.loc 1 417 7 is_stmt 1 view .LVU501
 2061              	.LVL250:
 417:Core/Src/printf.c ****         break;
 2062              		.loc 1 417 10 is_stmt 0 view .LVU502
 2063 022c 092F     		cmp	r7, #9
 2064 022e 02D9     		bls	.L164
 417:Core/Src/printf.c ****         break;
 2065              		.loc 1 417 18 view .LVU503
 2066 0230 0F46     		mov	r7, r1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2067              		.loc 1 416 14 view .LVU504
 2068 0232 1446     		mov	r4, r2
 2069 0234 E6E7     		b	.L143
 2070              	.L164:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2071              		.loc 1 416 14 view .LVU505
 2072 0236 1446     		mov	r4, r2
 2073              	.LVL251:
 2074              	.L147:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2075              		.loc 1 422 44 is_stmt 1 view .LVU506
 2076 0238 1F2C     		cmp	r4, #31
 2077 023a 0AD8     		bhi	.L148
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2078              		.loc 1 422 53 is_stmt 0 discriminator 1 view .LVU507
 2079 023c 6B1E     		subs	r3, r5, #1
 2080              	.LVL252:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2081              		.loc 1 422 44 discriminator 1 view .LVU508
 2082 023e 45B1     		cbz	r5, .L148
 423:Core/Src/printf.c ****     }
 2083              		.loc 1 423 7 is_stmt 1 view .LVU509
 2084              	.LVL253:
 423:Core/Src/printf.c ****     }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 52


 2085              		.loc 1 423 18 is_stmt 0 view .LVU510
 2086 0240 04F14802 		add	r2, r4, #72
 2087 0244 6A44     		add	r2, sp, r2
 2088 0246 3021     		movs	r1, #48
 2089 0248 02F8201C 		strb	r1, [r2, #-32]
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2090              		.loc 1 422 53 discriminator 1 view .LVU511
 2091 024c 1D46     		mov	r5, r3
 423:Core/Src/printf.c ****     }
 2092              		.loc 1 423 14 view .LVU512
 2093 024e 0134     		adds	r4, r4, #1
 2094              	.LVL254:
 423:Core/Src/printf.c ****     }
 2095              		.loc 1 423 14 view .LVU513
 2096 0250 F2E7     		b	.L147
 2097              	.LVL255:
 2098              	.L148:
 425:Core/Src/printf.c ****       // add decimal
 2099              		.loc 1 425 5 is_stmt 1 view .LVU514
 425:Core/Src/printf.c ****       // add decimal
 2100              		.loc 1 425 8 is_stmt 0 view .LVU515
 2101 0252 1F2C     		cmp	r4, #31
 2102 0254 06D8     		bhi	.L151
 427:Core/Src/printf.c ****     }
 2103              		.loc 1 427 7 is_stmt 1 view .LVU516
 2104              	.LVL256:
 427:Core/Src/printf.c ****     }
 2105              		.loc 1 427 18 is_stmt 0 view .LVU517
 2106 0256 04F14803 		add	r3, r4, #72
 2107 025a 6B44     		add	r3, sp, r3
 2108 025c 2E22     		movs	r2, #46
 2109 025e 03F8202C 		strb	r2, [r3, #-32]
 427:Core/Src/printf.c ****     }
 2110              		.loc 1 427 14 view .LVU518
 2111 0262 0134     		adds	r4, r4, #1
 2112              	.LVL257:
 2113              	.L151:
 427:Core/Src/printf.c ****     }
 2114              		.loc 1 427 14 view .LVU519
 2115              	.LBE30:
 432:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2116              		.loc 1 432 14 is_stmt 1 view .LVU520
 2117 0264 1F2C     		cmp	r4, #31
 2118 0266 17D8     		bhi	.L150
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2119              		.loc 1 433 5 view .LVU521
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2120              		.loc 1 433 37 is_stmt 0 view .LVU522
 2121 0268 294A     		ldr	r2, .L191+48
 2122 026a 82FB0632 		smull	r3, r2, r2, r6
 2123 026e F317     		asrs	r3, r6, #31
 2124 0270 C3EBA203 		rsb	r3, r3, r2, asr #2
 2125 0274 1A46     		mov	r2, r3
 2126 0276 03EB8303 		add	r3, r3, r3, lsl #2
 2127 027a A6EB4303 		sub	r3, r6, r3, lsl #1
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2128              		.loc 1 433 12 view .LVU523
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 53


 2129 027e 611C     		adds	r1, r4, #1
 2130              	.LVL258:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2131              		.loc 1 433 18 view .LVU524
 2132 0280 3033     		adds	r3, r3, #48
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2133              		.loc 1 433 16 view .LVU525
 2134 0282 04F14800 		add	r0, r4, #72
 2135 0286 0DEB0004 		add	r4, sp, r0
 2136 028a 04F8203C 		strb	r3, [r4, #-32]
 434:Core/Src/printf.c ****       break;
 2137              		.loc 1 434 5 is_stmt 1 view .LVU526
 434:Core/Src/printf.c ****       break;
 2138              		.loc 1 434 17 is_stmt 0 view .LVU527
 2139 028e 1646     		mov	r6, r2
 2140              	.LVL259:
 434:Core/Src/printf.c ****       break;
 2141              		.loc 1 434 8 view .LVU528
 2142 0290 0AB1     		cbz	r2, .L165
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2143              		.loc 1 433 12 view .LVU529
 2144 0292 0C46     		mov	r4, r1
 2145 0294 E6E7     		b	.L151
 2146              	.L165:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2147              		.loc 1 433 12 view .LVU530
 2148 0296 0C46     		mov	r4, r1
 2149              	.LVL260:
 2150              	.L150:
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2151              		.loc 1 440 3 is_stmt 1 view .LVU531
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2152              		.loc 1 440 29 is_stmt 0 view .LVU532
 2153 0298 209B     		ldr	r3, [sp, #128]
 2154 029a 03F00303 		and	r3, r3, #3
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2155              		.loc 1 440 6 view .LVU533
 2156 029e 012B     		cmp	r3, #1
 2157 02a0 38D0     		beq	.L190
 2158              	.LVL261:
 2159              	.L153:
 449:Core/Src/printf.c ****     if (negative) {
 2160              		.loc 1 449 3 is_stmt 1 view .LVU534
 449:Core/Src/printf.c ****     if (negative) {
 2161              		.loc 1 449 6 is_stmt 0 view .LVU535
 2162 02a2 1F2C     		cmp	r4, #31
 2163 02a4 09D8     		bhi	.L158
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2164              		.loc 1 450 5 is_stmt 1 view .LVU536
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2165              		.loc 1 450 8 is_stmt 0 view .LVU537
 2166 02a6 099B     		ldr	r3, [sp, #36]
 2167 02a8 002B     		cmp	r3, #0
 2168 02aa 50D0     		beq	.L159
 451:Core/Src/printf.c ****     }
 2169              		.loc 1 451 7 is_stmt 1 view .LVU538
 2170              	.LVL262:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 54


 451:Core/Src/printf.c ****     }
 2171              		.loc 1 451 18 is_stmt 0 view .LVU539
 2172 02ac 04F14803 		add	r3, r4, #72
 2173 02b0 6B44     		add	r3, sp, r3
 2174 02b2 2D22     		movs	r2, #45
 2175 02b4 03F8202C 		strb	r2, [r3, #-32]
 451:Core/Src/printf.c ****     }
 2176              		.loc 1 451 14 view .LVU540
 2177 02b8 0134     		adds	r4, r4, #1
 2178              	.LVL263:
 2179              	.L158:
 461:Core/Src/printf.c **** }
 2180              		.loc 1 461 3 is_stmt 1 view .LVU541
 461:Core/Src/printf.c **** }
 2181              		.loc 1 461 10 is_stmt 0 view .LVU542
 2182 02ba 209B     		ldr	r3, [sp, #128]
 2183 02bc 0393     		str	r3, [sp, #12]
 2184 02be 1F9B     		ldr	r3, [sp, #124]
 2185 02c0 0293     		str	r3, [sp, #8]
 2186 02c2 0194     		str	r4, [sp, #4]
 2187 02c4 0AAB     		add	r3, sp, #40
 2188 02c6 0093     		str	r3, [sp]
 2189 02c8 5B46     		mov	r3, fp
 2190 02ca 5246     		mov	r2, r10
 2191 02cc 0899     		ldr	r1, [sp, #32]
 2192 02ce 0598     		ldr	r0, [sp, #20]
 2193 02d0 FFF7FEFF 		bl	_out_rev
 2194              	.LVL264:
 2195              	.L119:
 462:Core/Src/printf.c **** 
 2196              		.loc 1 462 1 view .LVU543
 2197 02d4 13B0     		add	sp, sp, #76
 2198              	.LCFI25:
 2199              		.cfi_remember_state
 2200              		.cfi_def_cfa_offset 44
 2201              		@ sp needed
 2202 02d6 BDEC028B 		vldm	sp!, {d8}
 2203              	.LCFI26:
 2204              		.cfi_restore 80
 2205              		.cfi_restore 81
 2206              		.cfi_def_cfa_offset 36
 2207 02da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2208              	.LVL265:
 2209              	.L192:
 462:Core/Src/printf.c **** 
 2210              		.loc 1 462 1 view .LVU544
 2211 02de 00BF     		.align	3
 2212              	.L191:
 2213 02e0 00000000 		.word	0
 2214 02e4 65CDCD41 		.word	1104006501
 2215 02e8 00000000 		.word	0
 2216 02ec 65CDCDC1 		.word	-1043477147
 2217 02f0 FFFFEF7F 		.word	2146435071
 2218 02f4 0C000000 		.word	.LC2
 2219 02f8 10000000 		.word	.LC3
 2220 02fc 00000000 		.word	.LC0
 2221 0300 08000000 		.word	.LC1
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 55


 2222 0304 00000000 		.word	pow10.0
 2223 0308 0000E03F 		.word	1071644672
 2224 030c CDCCCCCC 		.word	-858993459
 2225 0310 67666666 		.word	1717986919
 2226              	.LVL266:
 2227              	.L190:
 2228              	.LCFI27:
 2229              		.cfi_restore_state
 441:Core/Src/printf.c ****       width--;
 2230              		.loc 1 441 5 is_stmt 1 view .LVU545
 441:Core/Src/printf.c ****       width--;
 2231              		.loc 1 441 8 is_stmt 0 view .LVU546
 2232 0314 1F9B     		ldr	r3, [sp, #124]
 2233 0316 B3B1     		cbz	r3, .L182
 441:Core/Src/printf.c ****       width--;
 2234              		.loc 1 441 15 discriminator 1 view .LVU547
 2235 0318 099B     		ldr	r3, [sp, #36]
 2236 031a 1BB9     		cbnz	r3, .L155
 441:Core/Src/printf.c ****       width--;
 2237              		.loc 1 441 28 discriminator 2 view .LVU548
 2238 031c 209B     		ldr	r3, [sp, #128]
 2239 031e 13F00C0F 		tst	r3, #12
 2240 0322 12D0     		beq	.L183
 2241              	.L155:
 442:Core/Src/printf.c ****     }
 2242              		.loc 1 442 7 is_stmt 1 view .LVU549
 442:Core/Src/printf.c ****     }
 2243              		.loc 1 442 12 is_stmt 0 view .LVU550
 2244 0324 1F9B     		ldr	r3, [sp, #124]
 2245 0326 013B     		subs	r3, r3, #1
 2246 0328 1F93     		str	r3, [sp, #124]
 2247              	.LVL267:
 442:Core/Src/printf.c ****     }
 2248              		.loc 1 442 12 view .LVU551
 2249 032a 1946     		mov	r1, r3
 2250 032c 06E0     		b	.L156
 2251              	.LVL268:
 2252              	.L157:
 445:Core/Src/printf.c ****     }
 2253              		.loc 1 445 7 is_stmt 1 view .LVU552
 445:Core/Src/printf.c ****     }
 2254              		.loc 1 445 18 is_stmt 0 view .LVU553
 2255 032e 04F14803 		add	r3, r4, #72
 2256 0332 6B44     		add	r3, sp, r3
 2257 0334 3022     		movs	r2, #48
 2258 0336 03F8202C 		strb	r2, [r3, #-32]
 445:Core/Src/printf.c ****     }
 2259              		.loc 1 445 14 view .LVU554
 2260 033a 0134     		adds	r4, r4, #1
 2261              	.LVL269:
 2262              	.L156:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2263              		.loc 1 444 26 is_stmt 1 view .LVU555
 2264 033c 8C42     		cmp	r4, r1
 2265 033e B0D2     		bcs	.L153
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2266              		.loc 1 444 26 is_stmt 0 discriminator 1 view .LVU556
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 56


 2267 0340 1F2C     		cmp	r4, #31
 2268 0342 F4D9     		bls	.L157
 2269 0344 ADE7     		b	.L153
 2270              	.LVL270:
 2271              	.L182:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2272              		.loc 1 444 26 discriminator 1 view .LVU557
 2273 0346 1F99     		ldr	r1, [sp, #124]
 2274 0348 F8E7     		b	.L156
 2275              	.L183:
 2276 034a 1F99     		ldr	r1, [sp, #124]
 2277 034c F6E7     		b	.L156
 2278              	.L159:
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2279              		.loc 1 453 10 is_stmt 1 view .LVU558
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2280              		.loc 1 453 13 is_stmt 0 view .LVU559
 2281 034e 209B     		ldr	r3, [sp, #128]
 2282 0350 13F0040F 		tst	r3, #4
 2283 0354 07D0     		beq	.L160
 454:Core/Src/printf.c ****     }
 2284              		.loc 1 454 7 is_stmt 1 view .LVU560
 2285              	.LVL271:
 454:Core/Src/printf.c ****     }
 2286              		.loc 1 454 18 is_stmt 0 view .LVU561
 2287 0356 04F14803 		add	r3, r4, #72
 2288 035a 6B44     		add	r3, sp, r3
 2289 035c 2B22     		movs	r2, #43
 2290 035e 03F8202C 		strb	r2, [r3, #-32]
 454:Core/Src/printf.c ****     }
 2291              		.loc 1 454 14 view .LVU562
 2292 0362 0134     		adds	r4, r4, #1
 2293              	.LVL272:
 454:Core/Src/printf.c ****     }
 2294              		.loc 1 454 14 view .LVU563
 2295 0364 A9E7     		b	.L158
 2296              	.L160:
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2297              		.loc 1 456 10 is_stmt 1 view .LVU564
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2298              		.loc 1 456 13 is_stmt 0 view .LVU565
 2299 0366 209B     		ldr	r3, [sp, #128]
 2300 0368 13F0080F 		tst	r3, #8
 2301 036c A5D0     		beq	.L158
 457:Core/Src/printf.c ****     }
 2302              		.loc 1 457 7 is_stmt 1 view .LVU566
 2303              	.LVL273:
 457:Core/Src/printf.c ****     }
 2304              		.loc 1 457 18 is_stmt 0 view .LVU567
 2305 036e 04F14803 		add	r3, r4, #72
 2306 0372 6B44     		add	r3, sp, r3
 2307 0374 2022     		movs	r2, #32
 2308 0376 03F8202C 		strb	r2, [r3, #-32]
 457:Core/Src/printf.c ****     }
 2309              		.loc 1 457 14 view .LVU568
 2310 037a 0134     		adds	r4, r4, #1
 2311              	.LVL274:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 57


 457:Core/Src/printf.c ****     }
 2312              		.loc 1 457 14 view .LVU569
 2313 037c 9DE7     		b	.L158
 2314              		.cfi_endproc
 2315              	.LFE11:
 2317 037e 00BF     		.section	.text._vsnprintf,"ax",%progbits
 2318              		.align	1
 2319              		.syntax unified
 2320              		.thumb
 2321              		.thumb_func
 2323              	_vsnprintf:
 2324              	.LVL275:
 2325              	.LFB13:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:Core/Src/printf.c **** 
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** // internal vsnprintf
 577:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:Core/Src/printf.c **** {
 2326              		.loc 1 578 1 is_stmt 1 view -0
 2327              		.cfi_startproc
 2328              		@ args = 4, pretend = 0, frame = 16
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330              		.loc 1 578 1 is_stmt 0 view .LVU571
 2331 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2332              	.LCFI28:
 2333              		.cfi_def_cfa_offset 36
 2334              		.cfi_offset 4, -36
 2335              		.cfi_offset 5, -32
 2336              		.cfi_offset 6, -28
 2337              		.cfi_offset 7, -24
 2338              		.cfi_offset 8, -20
 2339              		.cfi_offset 9, -16
 2340              		.cfi_offset 10, -12
 2341              		.cfi_offset 11, -8
 2342              		.cfi_offset 14, -4
 2343 0004 8FB0     		sub	sp, sp, #60
 2344              	.LCFI29:
 2345              		.cfi_def_cfa_offset 96
 2346 0006 8046     		mov	r8, r0
 2347 0008 1746     		mov	r7, r2
 2348 000a 0D93     		str	r3, [sp, #52]
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2349              		.loc 1 579 3 is_stmt 1 view .LVU572
 580:Core/Src/printf.c ****   size_t idx = 0U;
 2350              		.loc 1 580 3 view .LVU573
 2351              	.LVL276:
 581:Core/Src/printf.c **** 
 582:Core/Src/printf.c ****   if (!buffer) {
 2352              		.loc 1 582 3 view .LVU574
 2353              		.loc 1 582 6 is_stmt 0 view .LVU575
 2354 000c 8946     		mov	r9, r1
 2355 000e 0029     		cmp	r1, #0
 2356 0010 00F04B83 		beq	.L297
 2357              	.L194:
 2358              	.LVL277:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 58


 2359              	.LBB31:
 583:Core/Src/printf.c ****     // use null output function
 584:Core/Src/printf.c ****     out = _out_null;
 585:Core/Src/printf.c ****   }
 586:Core/Src/printf.c **** 
 587:Core/Src/printf.c ****   while (*format)
 588:Core/Src/printf.c ****   {
 589:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 590:Core/Src/printf.c ****     if (*format != '%') {
 591:Core/Src/printf.c ****       // no
 592:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:Core/Src/printf.c ****       format++;
 594:Core/Src/printf.c ****       continue;
 595:Core/Src/printf.c ****     }
 596:Core/Src/printf.c ****     else {
 597:Core/Src/printf.c ****       // yes, evaluate it
 598:Core/Src/printf.c ****       format++;
 599:Core/Src/printf.c ****     }
 600:Core/Src/printf.c **** 
 601:Core/Src/printf.c ****     // evaluate flags
 602:Core/Src/printf.c ****     flags = 0U;
 603:Core/Src/printf.c ****     do {
 604:Core/Src/printf.c ****       switch (*format) {
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 611:Core/Src/printf.c ****       }
 612:Core/Src/printf.c ****     } while (n);
 613:Core/Src/printf.c **** 
 614:Core/Src/printf.c ****     // evaluate width field
 615:Core/Src/printf.c ****     width = 0U;
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 617:Core/Src/printf.c ****       width = _atoi(&format);
 618:Core/Src/printf.c ****     }
 619:Core/Src/printf.c ****     else if (*format == '*') {
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 621:Core/Src/printf.c ****       if (w < 0) {
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 624:Core/Src/printf.c ****       }
 625:Core/Src/printf.c ****       else {
 626:Core/Src/printf.c ****         width = (unsigned int)w;
 627:Core/Src/printf.c ****       }
 628:Core/Src/printf.c ****       format++;
 629:Core/Src/printf.c ****     }
 630:Core/Src/printf.c **** 
 631:Core/Src/printf.c ****     // evaluate precision field
 632:Core/Src/printf.c ****     precision = 0U;
 633:Core/Src/printf.c ****     if (*format == '.') {
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 635:Core/Src/printf.c ****       format++;
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 638:Core/Src/printf.c ****       }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 59


 639:Core/Src/printf.c ****       else if (*format == '*') {
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:Core/Src/printf.c ****         format++;
 643:Core/Src/printf.c ****       }
 644:Core/Src/printf.c ****     }
 645:Core/Src/printf.c **** 
 646:Core/Src/printf.c ****     // evaluate length field
 647:Core/Src/printf.c ****     switch (*format) {
 648:Core/Src/printf.c ****       case 'l' :
 649:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 650:Core/Src/printf.c ****         format++;
 651:Core/Src/printf.c ****         if (*format == 'l') {
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:Core/Src/printf.c ****           format++;
 654:Core/Src/printf.c ****         }
 655:Core/Src/printf.c ****         break;
 656:Core/Src/printf.c ****       case 'h' :
 657:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 658:Core/Src/printf.c ****         format++;
 659:Core/Src/printf.c ****         if (*format == 'h') {
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 661:Core/Src/printf.c ****           format++;
 662:Core/Src/printf.c ****         }
 663:Core/Src/printf.c ****         break;
 664:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:Core/Src/printf.c ****       case 't' :
 666:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:Core/Src/printf.c ****         format++;
 668:Core/Src/printf.c ****         break;
 669:Core/Src/printf.c **** #endif
 670:Core/Src/printf.c ****       case 'j' :
 671:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:Core/Src/printf.c ****         format++;
 673:Core/Src/printf.c ****         break;
 674:Core/Src/printf.c ****       case 'z' :
 675:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:Core/Src/printf.c ****         format++;
 677:Core/Src/printf.c ****         break;
 678:Core/Src/printf.c ****       default :
 679:Core/Src/printf.c ****         break;
 680:Core/Src/printf.c ****     }
 681:Core/Src/printf.c **** 
 682:Core/Src/printf.c ****     // evaluate specifier
 683:Core/Src/printf.c ****     switch (*format) {
 684:Core/Src/printf.c ****       case 'd' :
 685:Core/Src/printf.c ****       case 'i' :
 686:Core/Src/printf.c ****       case 'u' :
 687:Core/Src/printf.c ****       case 'x' :
 688:Core/Src/printf.c ****       case 'X' :
 689:Core/Src/printf.c ****       case 'o' :
 690:Core/Src/printf.c ****       case 'b' : {
 691:Core/Src/printf.c ****         // set the base
 692:Core/Src/printf.c ****         unsigned int base;
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:Core/Src/printf.c ****           base = 16U;
 695:Core/Src/printf.c ****         }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 60


 696:Core/Src/printf.c ****         else if (*format == 'o') {
 697:Core/Src/printf.c ****           base =  8U;
 698:Core/Src/printf.c ****         }
 699:Core/Src/printf.c ****         else if (*format == 'b') {
 700:Core/Src/printf.c ****           base =  2U;
 701:Core/Src/printf.c ****         }
 702:Core/Src/printf.c ****         else {
 703:Core/Src/printf.c ****           base = 10U;
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:Core/Src/printf.c ****         }
 706:Core/Src/printf.c ****         // uppercase
 707:Core/Src/printf.c ****         if (*format == 'X') {
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:Core/Src/printf.c ****         }
 710:Core/Src/printf.c **** 
 711:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:Core/Src/printf.c ****         }
 715:Core/Src/printf.c **** 
 716:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 717:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:Core/Src/printf.c ****         }
 720:Core/Src/printf.c **** 
 721:Core/Src/printf.c ****         // convert the integer
 722:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:Core/Src/printf.c ****           // signed
 724:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:Core/Src/printf.c **** #endif
 729:Core/Src/printf.c ****           }
 730:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:Core/Src/printf.c ****           }
 734:Core/Src/printf.c ****           else {
 735:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:Core/Src/printf.c ****           }
 738:Core/Src/printf.c ****         }
 739:Core/Src/printf.c ****         else {
 740:Core/Src/printf.c ****           // unsigned
 741:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:Core/Src/printf.c **** #endif
 745:Core/Src/printf.c ****           }
 746:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:Core/Src/printf.c ****           }
 749:Core/Src/printf.c ****           else {
 750:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:Core/Src/printf.c ****           }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 61


 753:Core/Src/printf.c ****         }
 754:Core/Src/printf.c ****         format++;
 755:Core/Src/printf.c ****         break;
 756:Core/Src/printf.c ****       }
 757:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:Core/Src/printf.c ****       case 'f' :
 759:Core/Src/printf.c ****       case 'F' :
 760:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:Core/Src/printf.c ****         format++;
 763:Core/Src/printf.c ****         break;
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:Core/Src/printf.c ****       case 'e':
 766:Core/Src/printf.c ****       case 'E':
 767:Core/Src/printf.c ****       case 'g':
 768:Core/Src/printf.c ****       case 'G':
 769:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:Core/Src/printf.c ****         format++;
 773:Core/Src/printf.c ****         break;
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:Core/Src/printf.c ****       case 'c' : {
 777:Core/Src/printf.c ****         unsigned int l = 1U;
 778:Core/Src/printf.c ****         // pre padding
 779:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:Core/Src/printf.c ****           while (l++ < width) {
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:Core/Src/printf.c ****           }
 783:Core/Src/printf.c ****         }
 784:Core/Src/printf.c ****         // char output
 785:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:Core/Src/printf.c ****         // post padding
 787:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 788:Core/Src/printf.c ****           while (l++ < width) {
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:Core/Src/printf.c ****           }
 791:Core/Src/printf.c ****         }
 792:Core/Src/printf.c ****         format++;
 793:Core/Src/printf.c ****         break;
 2360              		.loc 1 793 9 view .LVU576
 2361 0014 0025     		movs	r5, #0
 2362 0016 08E0     		b	.L277
 2363              	.LVL278:
 2364              	.L299:
 2365              		.loc 1 793 9 view .LVU577
 2366              	.LBE31:
 592:Core/Src/printf.c ****       format++;
 2367              		.loc 1 592 7 is_stmt 1 view .LVU578
 2368 0018 6C1C     		adds	r4, r5, #1
 2369              	.LVL279:
 592:Core/Src/printf.c ****       format++;
 2370              		.loc 1 592 7 is_stmt 0 view .LVU579
 2371 001a 3B46     		mov	r3, r7
 2372 001c 2A46     		mov	r2, r5
 2373 001e 4946     		mov	r1, r9
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 62


 2374 0020 C047     		blx	r8
 2375              	.LVL280:
 593:Core/Src/printf.c ****       continue;
 2376              		.loc 1 593 7 is_stmt 1 view .LVU580
 593:Core/Src/printf.c ****       continue;
 2377              		.loc 1 593 13 is_stmt 0 view .LVU581
 2378 0022 0D9B     		ldr	r3, [sp, #52]
 2379 0024 0133     		adds	r3, r3, #1
 2380 0026 0D93     		str	r3, [sp, #52]
 594:Core/Src/printf.c ****     }
 2381              		.loc 1 594 7 is_stmt 1 view .LVU582
 592:Core/Src/printf.c ****       format++;
 2382              		.loc 1 592 7 is_stmt 0 view .LVU583
 2383 0028 2546     		mov	r5, r4
 2384              	.LVL281:
 2385              	.L277:
 587:Core/Src/printf.c ****   {
 2386              		.loc 1 587 10 is_stmt 1 view .LVU584
 2387 002a 0D9B     		ldr	r3, [sp, #52]
 2388 002c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2389 002e 0028     		cmp	r0, #0
 2390 0030 00F03E83 		beq	.L298
 590:Core/Src/printf.c ****       // no
 2391              		.loc 1 590 5 view .LVU585
 590:Core/Src/printf.c ****       // no
 2392              		.loc 1 590 8 is_stmt 0 view .LVU586
 2393 0034 2528     		cmp	r0, #37
 2394 0036 EFD1     		bne	.L299
 598:Core/Src/printf.c ****     }
 2395              		.loc 1 598 7 is_stmt 1 view .LVU587
 598:Core/Src/printf.c ****     }
 2396              		.loc 1 598 13 is_stmt 0 view .LVU588
 2397 0038 0133     		adds	r3, r3, #1
 2398 003a 0D93     		str	r3, [sp, #52]
 602:Core/Src/printf.c ****     do {
 2399              		.loc 1 602 5 is_stmt 1 view .LVU589
 2400              	.LVL282:
 602:Core/Src/printf.c ****     do {
 2401              		.loc 1 602 11 is_stmt 0 view .LVU590
 2402 003c 0026     		movs	r6, #0
 2403 003e 1FE0     		b	.L205
 2404              	.LVL283:
 2405              	.L199:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2406              		.loc 1 605 19 is_stmt 1 view .LVU591
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2407              		.loc 1 605 25 is_stmt 0 view .LVU592
 2408 0040 46F00106 		orr	r6, r6, #1
 2409              	.LVL284:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2410              		.loc 1 605 43 is_stmt 1 view .LVU593
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2411              		.loc 1 605 49 is_stmt 0 view .LVU594
 2412 0044 0132     		adds	r2, r2, #1
 2413 0046 0D92     		str	r2, [sp, #52]
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2414              		.loc 1 605 53 is_stmt 1 view .LVU595
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 63


 2415              	.LVL285:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2416              		.loc 1 605 61 view .LVU596
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2417              		.loc 1 605 55 is_stmt 0 view .LVU597
 2418 0048 0123     		movs	r3, #1
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2419              		.loc 1 605 61 view .LVU598
 2420 004a 18E0     		b	.L198
 2421              	.LVL286:
 2422              	.L201:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2423              		.loc 1 606 19 is_stmt 1 view .LVU599
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2424              		.loc 1 606 25 is_stmt 0 view .LVU600
 2425 004c 46F00206 		orr	r6, r6, #2
 2426              	.LVL287:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2427              		.loc 1 606 43 is_stmt 1 view .LVU601
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2428              		.loc 1 606 49 is_stmt 0 view .LVU602
 2429 0050 0132     		adds	r2, r2, #1
 2430 0052 0D92     		str	r2, [sp, #52]
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2431              		.loc 1 606 53 is_stmt 1 view .LVU603
 2432              	.LVL288:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2433              		.loc 1 606 61 view .LVU604
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2434              		.loc 1 606 55 is_stmt 0 view .LVU605
 2435 0054 0123     		movs	r3, #1
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2436              		.loc 1 606 61 view .LVU606
 2437 0056 12E0     		b	.L198
 2438              	.LVL289:
 2439              	.L202:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2440              		.loc 1 607 19 is_stmt 1 view .LVU607
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2441              		.loc 1 607 25 is_stmt 0 view .LVU608
 2442 0058 46F00406 		orr	r6, r6, #4
 2443              	.LVL290:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2444              		.loc 1 607 43 is_stmt 1 view .LVU609
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2445              		.loc 1 607 49 is_stmt 0 view .LVU610
 2446 005c 0132     		adds	r2, r2, #1
 2447 005e 0D92     		str	r2, [sp, #52]
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2448              		.loc 1 607 53 is_stmt 1 view .LVU611
 2449              	.LVL291:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2450              		.loc 1 607 61 view .LVU612
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2451              		.loc 1 607 55 is_stmt 0 view .LVU613
 2452 0060 0123     		movs	r3, #1
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 64


 2453              		.loc 1 607 61 view .LVU614
 2454 0062 0CE0     		b	.L198
 2455              	.LVL292:
 2456              	.L204:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2457              		.loc 1 608 19 is_stmt 1 view .LVU615
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2458              		.loc 1 608 25 is_stmt 0 view .LVU616
 2459 0064 46F00806 		orr	r6, r6, #8
 2460              	.LVL293:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2461              		.loc 1 608 43 is_stmt 1 view .LVU617
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2462              		.loc 1 608 49 is_stmt 0 view .LVU618
 2463 0068 0132     		adds	r2, r2, #1
 2464 006a 0D92     		str	r2, [sp, #52]
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2465              		.loc 1 608 53 is_stmt 1 view .LVU619
 2466              	.LVL294:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2467              		.loc 1 608 61 view .LVU620
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2468              		.loc 1 608 55 is_stmt 0 view .LVU621
 2469 006c 0123     		movs	r3, #1
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2470              		.loc 1 608 61 view .LVU622
 2471 006e 06E0     		b	.L198
 2472              	.LVL295:
 2473              	.L203:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2474              		.loc 1 609 19 is_stmt 1 view .LVU623
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2475              		.loc 1 609 25 is_stmt 0 view .LVU624
 2476 0070 46F01006 		orr	r6, r6, #16
 2477              	.LVL296:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2478              		.loc 1 609 43 is_stmt 1 view .LVU625
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2479              		.loc 1 609 49 is_stmt 0 view .LVU626
 2480 0074 0132     		adds	r2, r2, #1
 2481 0076 0D92     		str	r2, [sp, #52]
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2482              		.loc 1 609 53 is_stmt 1 view .LVU627
 2483              	.LVL297:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2484              		.loc 1 609 61 view .LVU628
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2485              		.loc 1 609 55 is_stmt 0 view .LVU629
 2486 0078 0123     		movs	r3, #1
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2487              		.loc 1 609 61 view .LVU630
 2488 007a 00E0     		b	.L198
 2489              	.LVL298:
 2490              	.L281:
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2491              		.loc 1 604 7 view .LVU631
 2492 007c 0023     		movs	r3, #0
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 65


 2493              	.L198:
 2494              	.LVL299:
 612:Core/Src/printf.c **** 
 2495              		.loc 1 612 14 is_stmt 1 view .LVU632
 2496 007e 4BB3     		cbz	r3, .L300
 2497              	.LVL300:
 2498              	.L205:
 603:Core/Src/printf.c ****       switch (*format) {
 2499              		.loc 1 603 5 view .LVU633
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2500              		.loc 1 604 7 view .LVU634
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2501              		.loc 1 604 15 is_stmt 0 view .LVU635
 2502 0080 0D9A     		ldr	r2, [sp, #52]
 2503 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2504              		.loc 1 604 7 view .LVU636
 2505 0084 203B     		subs	r3, r3, #32
 2506 0086 102B     		cmp	r3, #16
 2507 0088 F8D8     		bhi	.L281
 2508 008a 01A1     		adr	r1, .L200
 2509 008c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2510              		.p2align 2
 2511              	.L200:
 2512 0090 65000000 		.word	.L204+1
 2513 0094 7D000000 		.word	.L281+1
 2514 0098 7D000000 		.word	.L281+1
 2515 009c 71000000 		.word	.L203+1
 2516 00a0 7D000000 		.word	.L281+1
 2517 00a4 7D000000 		.word	.L281+1
 2518 00a8 7D000000 		.word	.L281+1
 2519 00ac 7D000000 		.word	.L281+1
 2520 00b0 7D000000 		.word	.L281+1
 2521 00b4 7D000000 		.word	.L281+1
 2522 00b8 7D000000 		.word	.L281+1
 2523 00bc 59000000 		.word	.L202+1
 2524 00c0 7D000000 		.word	.L281+1
 2525 00c4 4D000000 		.word	.L201+1
 2526 00c8 7D000000 		.word	.L281+1
 2527 00cc 7D000000 		.word	.L281+1
 2528 00d0 41000000 		.word	.L199+1
 2529              	.LVL301:
 2530              		.p2align 1
 2531              	.L300:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2532              		.loc 1 616 9 view .LVU637
 2533 00d4 0A93     		str	r3, [sp, #40]
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2534              		.loc 1 615 5 is_stmt 1 view .LVU638
 2535              	.LVL302:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2536              		.loc 1 616 5 view .LVU639
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2537              		.loc 1 616 9 is_stmt 0 view .LVU640
 2538 00d6 0D9B     		ldr	r3, [sp, #52]
 2539              	.LVL303:
 616:Core/Src/printf.c ****       width = _atoi(&format);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 66


 2540              		.loc 1 616 9 view .LVU641
 2541 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2542              	.LVL304:
 2543              	.LBB32:
 2544              	.LBI32:
 181:Core/Src/printf.c **** {
 2545              		.loc 1 181 20 is_stmt 1 view .LVU642
 2546              	.LBB33:
 183:Core/Src/printf.c **** }
 2547              		.loc 1 183 3 view .LVU643
 183:Core/Src/printf.c **** }
 2548              		.loc 1 183 22 is_stmt 0 view .LVU644
 2549 00da A2F13003 		sub	r3, r2, #48
 2550 00de DBB2     		uxtb	r3, r3
 2551              	.LVL305:
 183:Core/Src/printf.c **** }
 2552              		.loc 1 183 22 view .LVU645
 2553              	.LBE33:
 2554              	.LBE32:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2555              		.loc 1 616 8 discriminator 1 view .LVU646
 2556 00e0 092B     		cmp	r3, #9
 2557 00e2 18D9     		bls	.L301
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2558              		.loc 1 619 10 is_stmt 1 view .LVU647
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2559              		.loc 1 619 13 is_stmt 0 view .LVU648
 2560 00e4 2A2A     		cmp	r2, #42
 2561 00e6 1BD0     		beq	.L302
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2562              		.loc 1 615 11 view .LVU649
 2563 00e8 0A9B     		ldr	r3, [sp, #40]
 2564 00ea 0B93     		str	r3, [sp, #44]
 2565              	.LVL306:
 2566              	.L207:
 632:Core/Src/printf.c ****     if (*format == '.') {
 2567              		.loc 1 632 5 is_stmt 1 view .LVU650
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2568              		.loc 1 633 5 view .LVU651
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2569              		.loc 1 633 9 is_stmt 0 view .LVU652
 2570 00ec 0D9B     		ldr	r3, [sp, #52]
 2571 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2572              		.loc 1 633 8 view .LVU653
 2573 00f0 2E2A     		cmp	r2, #46
 2574 00f2 25D0     		beq	.L303
 2575              	.LVL307:
 2576              	.L210:
 647:Core/Src/printf.c ****       case 'l' :
 2577              		.loc 1 647 5 is_stmt 1 view .LVU654
 647:Core/Src/printf.c ****       case 'l' :
 2578              		.loc 1 647 13 is_stmt 0 view .LVU655
 2579 00f4 0D9A     		ldr	r2, [sp, #52]
 2580 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 647:Core/Src/printf.c ****       case 'l' :
 2581              		.loc 1 647 5 view .LVU656
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 67


 2582 00f8 683B     		subs	r3, r3, #104
 2583 00fa 122B     		cmp	r3, #18
 2584 00fc 5CD8     		bhi	.L212
 2585 00fe DFE803F0 		tbb	[pc, r3]
 2586              	.L214:
 2587 0102 49       		.byte	(.L218-.L214)/2
 2588 0103 5B       		.byte	(.L212-.L214)/2
 2589 0104 AC       		.byte	(.L217-.L214)/2
 2590 0105 5B       		.byte	(.L212-.L214)/2
 2591 0106 3B       		.byte	(.L216-.L214)/2
 2592 0107 5B       		.byte	(.L212-.L214)/2
 2593 0108 5B       		.byte	(.L212-.L214)/2
 2594 0109 5B       		.byte	(.L212-.L214)/2
 2595 010a 5B       		.byte	(.L212-.L214)/2
 2596 010b 5B       		.byte	(.L212-.L214)/2
 2597 010c 5B       		.byte	(.L212-.L214)/2
 2598 010d 5B       		.byte	(.L212-.L214)/2
 2599 010e 57       		.byte	(.L215-.L214)/2
 2600 010f 5B       		.byte	(.L212-.L214)/2
 2601 0110 5B       		.byte	(.L212-.L214)/2
 2602 0111 5B       		.byte	(.L212-.L214)/2
 2603 0112 5B       		.byte	(.L212-.L214)/2
 2604 0113 5B       		.byte	(.L212-.L214)/2
 2605 0114 B1       		.byte	(.L213-.L214)/2
 2606              	.LVL308:
 2607 0115 00       		.p2align 1
 2608              	.L301:
 617:Core/Src/printf.c ****     }
 2609              		.loc 1 617 7 is_stmt 1 view .LVU657
 617:Core/Src/printf.c ****     }
 2610              		.loc 1 617 15 is_stmt 0 view .LVU658
 2611 0116 0DA8     		add	r0, sp, #52
 2612 0118 FFF7FEFF 		bl	_atoi
 2613              	.LVL309:
 2614 011c 0B90     		str	r0, [sp, #44]
 2615              	.LVL310:
 617:Core/Src/printf.c ****     }
 2616              		.loc 1 617 15 view .LVU659
 2617 011e E5E7     		b	.L207
 2618              	.LVL311:
 2619              	.L302:
 2620              	.LBB34:
 620:Core/Src/printf.c ****       if (w < 0) {
 2621              		.loc 1 620 7 is_stmt 1 view .LVU660
 620:Core/Src/printf.c ****       if (w < 0) {
 2622              		.loc 1 620 17 is_stmt 0 view .LVU661
 2623 0120 189B     		ldr	r3, [sp, #96]
 2624 0122 1A1D     		adds	r2, r3, #4
 2625 0124 1892     		str	r2, [sp, #96]
 2626 0126 1B68     		ldr	r3, [r3]
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2627              		.loc 1 621 7 is_stmt 1 view .LVU662
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2628              		.loc 1 621 10 is_stmt 0 view .LVU663
 2629 0128 002B     		cmp	r3, #0
 2630 012a 04DB     		blt	.L304
 626:Core/Src/printf.c ****       }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 68


 2631              		.loc 1 626 9 is_stmt 1 view .LVU664
 626:Core/Src/printf.c ****       }
 2632              		.loc 1 626 15 is_stmt 0 view .LVU665
 2633 012c 0B93     		str	r3, [sp, #44]
 2634              	.LVL312:
 2635              	.L209:
 628:Core/Src/printf.c ****     }
 2636              		.loc 1 628 7 is_stmt 1 view .LVU666
 628:Core/Src/printf.c ****     }
 2637              		.loc 1 628 13 is_stmt 0 view .LVU667
 2638 012e 0D9B     		ldr	r3, [sp, #52]
 2639 0130 0133     		adds	r3, r3, #1
 2640 0132 0D93     		str	r3, [sp, #52]
 2641 0134 DAE7     		b	.L207
 2642              	.LVL313:
 2643              	.L304:
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2644              		.loc 1 622 9 is_stmt 1 view .LVU668
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2645              		.loc 1 622 15 is_stmt 0 view .LVU669
 2646 0136 46F00206 		orr	r6, r6, #2
 2647              	.LVL314:
 623:Core/Src/printf.c ****       }
 2648              		.loc 1 623 9 is_stmt 1 view .LVU670
 623:Core/Src/printf.c ****       }
 2649              		.loc 1 623 31 is_stmt 0 view .LVU671
 2650 013a 5B42     		rsbs	r3, r3, #0
 2651 013c 0B93     		str	r3, [sp, #44]
 2652              	.LVL315:
 623:Core/Src/printf.c ****       }
 2653              		.loc 1 623 31 view .LVU672
 2654 013e F6E7     		b	.L209
 2655              	.LVL316:
 2656              	.L303:
 623:Core/Src/printf.c ****       }
 2657              		.loc 1 623 31 view .LVU673
 2658              	.LBE34:
 634:Core/Src/printf.c ****       format++;
 2659              		.loc 1 634 7 is_stmt 1 view .LVU674
 634:Core/Src/printf.c ****       format++;
 2660              		.loc 1 634 13 is_stmt 0 view .LVU675
 2661 0140 46F48066 		orr	r6, r6, #1024
 2662              	.LVL317:
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2663              		.loc 1 635 7 is_stmt 1 view .LVU676
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2664              		.loc 1 635 13 is_stmt 0 view .LVU677
 2665 0144 5A1C     		adds	r2, r3, #1
 2666 0146 0D92     		str	r2, [sp, #52]
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2667              		.loc 1 636 7 is_stmt 1 view .LVU678
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2668              		.loc 1 636 11 is_stmt 0 view .LVU679
 2669 0148 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2670              	.LVL318:
 2671              	.LBB35:
 2672              	.LBI35:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 69


 181:Core/Src/printf.c **** {
 2673              		.loc 1 181 20 is_stmt 1 view .LVU680
 2674              	.LBB36:
 183:Core/Src/printf.c **** }
 2675              		.loc 1 183 3 view .LVU681
 183:Core/Src/printf.c **** }
 2676              		.loc 1 183 22 is_stmt 0 view .LVU682
 2677 014a A2F13003 		sub	r3, r2, #48
 2678 014e DBB2     		uxtb	r3, r3
 2679              	.LVL319:
 183:Core/Src/printf.c **** }
 2680              		.loc 1 183 22 view .LVU683
 2681              	.LBE36:
 2682              	.LBE35:
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2683              		.loc 1 636 10 discriminator 1 view .LVU684
 2684 0150 092B     		cmp	r3, #9
 2685 0152 0CD9     		bls	.L305
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2686              		.loc 1 639 12 is_stmt 1 view .LVU685
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2687              		.loc 1 639 15 is_stmt 0 view .LVU686
 2688 0154 2A2A     		cmp	r2, #42
 2689 0156 CDD1     		bne	.L210
 2690              	.LBB37:
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2691              		.loc 1 640 9 is_stmt 1 view .LVU687
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2692              		.loc 1 640 19 is_stmt 0 view .LVU688
 2693 0158 189B     		ldr	r3, [sp, #96]
 2694 015a 1A1D     		adds	r2, r3, #4
 2695 015c 1892     		str	r2, [sp, #96]
 2696 015e 1C68     		ldr	r4, [r3]
 641:Core/Src/printf.c ****         format++;
 2697              		.loc 1 641 9 is_stmt 1 view .LVU689
 641:Core/Src/printf.c ****         format++;
 2698              		.loc 1 641 51 is_stmt 0 view .LVU690
 2699 0160 24EAE473 		bic	r3, r4, r4, asr #31
 2700 0164 0A93     		str	r3, [sp, #40]
 2701              	.LVL320:
 642:Core/Src/printf.c ****       }
 2702              		.loc 1 642 9 is_stmt 1 view .LVU691
 642:Core/Src/printf.c ****       }
 2703              		.loc 1 642 15 is_stmt 0 view .LVU692
 2704 0166 0D9B     		ldr	r3, [sp, #52]
 2705              	.LVL321:
 642:Core/Src/printf.c ****       }
 2706              		.loc 1 642 15 view .LVU693
 2707 0168 0133     		adds	r3, r3, #1
 2708 016a 0D93     		str	r3, [sp, #52]
 2709 016c C2E7     		b	.L210
 2710              	.LVL322:
 2711              	.L305:
 642:Core/Src/printf.c ****       }
 2712              		.loc 1 642 15 view .LVU694
 2713              	.LBE37:
 637:Core/Src/printf.c ****       }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 70


 2714              		.loc 1 637 9 is_stmt 1 view .LVU695
 637:Core/Src/printf.c ****       }
 2715              		.loc 1 637 21 is_stmt 0 view .LVU696
 2716 016e 0DA8     		add	r0, sp, #52
 2717 0170 FFF7FEFF 		bl	_atoi
 2718              	.LVL323:
 2719 0174 0A90     		str	r0, [sp, #40]
 2720              	.LVL324:
 637:Core/Src/printf.c ****       }
 2721              		.loc 1 637 21 view .LVU697
 2722 0176 BDE7     		b	.L210
 2723              	.LVL325:
 2724              	.L216:
 649:Core/Src/printf.c ****         format++;
 2725              		.loc 1 649 9 is_stmt 1 view .LVU698
 649:Core/Src/printf.c ****         format++;
 2726              		.loc 1 649 15 is_stmt 0 view .LVU699
 2727 0178 46F48071 		orr	r1, r6, #256
 2728              	.LVL326:
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2729              		.loc 1 650 9 is_stmt 1 view .LVU700
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2730              		.loc 1 650 15 is_stmt 0 view .LVU701
 2731 017c 531C     		adds	r3, r2, #1
 2732 017e 0D93     		str	r3, [sp, #52]
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2733              		.loc 1 651 9 is_stmt 1 view .LVU702
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2734              		.loc 1 651 13 is_stmt 0 view .LVU703
 2735 0180 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2736              		.loc 1 651 12 view .LVU704
 2737 0182 6C2B     		cmp	r3, #108
 2738 0184 01D0     		beq	.L306
 649:Core/Src/printf.c ****         format++;
 2739              		.loc 1 649 15 view .LVU705
 2740 0186 0E46     		mov	r6, r1
 2741 0188 16E0     		b	.L212
 2742              	.L306:
 652:Core/Src/printf.c ****           format++;
 2743              		.loc 1 652 11 is_stmt 1 view .LVU706
 652:Core/Src/printf.c ****           format++;
 2744              		.loc 1 652 17 is_stmt 0 view .LVU707
 2745 018a 46F44076 		orr	r6, r6, #768
 2746              	.LVL327:
 653:Core/Src/printf.c ****         }
 2747              		.loc 1 653 11 is_stmt 1 view .LVU708
 653:Core/Src/printf.c ****         }
 2748              		.loc 1 653 17 is_stmt 0 view .LVU709
 2749 018e 0232     		adds	r2, r2, #2
 2750 0190 0D92     		str	r2, [sp, #52]
 2751 0192 11E0     		b	.L212
 2752              	.L218:
 657:Core/Src/printf.c ****         format++;
 2753              		.loc 1 657 9 is_stmt 1 view .LVU710
 657:Core/Src/printf.c ****         format++;
 2754              		.loc 1 657 15 is_stmt 0 view .LVU711
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 71


 2755 0194 46F08001 		orr	r1, r6, #128
 2756              	.LVL328:
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2757              		.loc 1 658 9 is_stmt 1 view .LVU712
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2758              		.loc 1 658 15 is_stmt 0 view .LVU713
 2759 0198 531C     		adds	r3, r2, #1
 2760 019a 0D93     		str	r3, [sp, #52]
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2761              		.loc 1 659 9 is_stmt 1 view .LVU714
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2762              		.loc 1 659 13 is_stmt 0 view .LVU715
 2763 019c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2764              		.loc 1 659 12 view .LVU716
 2765 019e 682B     		cmp	r3, #104
 2766 01a0 01D0     		beq	.L307
 657:Core/Src/printf.c ****         format++;
 2767              		.loc 1 657 15 view .LVU717
 2768 01a2 0E46     		mov	r6, r1
 2769 01a4 08E0     		b	.L212
 2770              	.L307:
 660:Core/Src/printf.c ****           format++;
 2771              		.loc 1 660 11 is_stmt 1 view .LVU718
 660:Core/Src/printf.c ****           format++;
 2772              		.loc 1 660 17 is_stmt 0 view .LVU719
 2773 01a6 46F0C006 		orr	r6, r6, #192
 2774              	.LVL329:
 661:Core/Src/printf.c ****         }
 2775              		.loc 1 661 11 is_stmt 1 view .LVU720
 661:Core/Src/printf.c ****         }
 2776              		.loc 1 661 17 is_stmt 0 view .LVU721
 2777 01aa 0232     		adds	r2, r2, #2
 2778 01ac 0D92     		str	r2, [sp, #52]
 2779 01ae 03E0     		b	.L212
 2780              	.L215:
 666:Core/Src/printf.c ****         format++;
 2781              		.loc 1 666 9 is_stmt 1 view .LVU722
 666:Core/Src/printf.c ****         format++;
 2782              		.loc 1 666 15 is_stmt 0 view .LVU723
 2783 01b0 46F48076 		orr	r6, r6, #256
 2784              	.LVL330:
 667:Core/Src/printf.c ****         break;
 2785              		.loc 1 667 9 is_stmt 1 view .LVU724
 667:Core/Src/printf.c ****         break;
 2786              		.loc 1 667 15 is_stmt 0 view .LVU725
 2787 01b4 0132     		adds	r2, r2, #1
 2788 01b6 0D92     		str	r2, [sp, #52]
 668:Core/Src/printf.c **** #endif
 2789              		.loc 1 668 9 is_stmt 1 view .LVU726
 2790              	.L212:
 683:Core/Src/printf.c ****       case 'd' :
 2791              		.loc 1 683 5 view .LVU727
 683:Core/Src/printf.c ****       case 'd' :
 2792              		.loc 1 683 13 is_stmt 0 view .LVU728
 2793 01b8 0D9B     		ldr	r3, [sp, #52]
 2794 01ba 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 72


 683:Core/Src/printf.c ****       case 'd' :
 2795              		.loc 1 683 5 view .LVU729
 2796 01bc 6728     		cmp	r0, #103
 2797 01be 56D8     		bhi	.L219
 683:Core/Src/printf.c ****       case 'd' :
 2798              		.loc 1 683 5 view .LVU730
 2799 01c0 2528     		cmp	r0, #37
 2800 01c2 C0F06882 		bcc	.L221
 2801 01c6 A0F12503 		sub	r3, r0, #37
 2802 01ca 422B     		cmp	r3, #66
 2803 01cc 00F26382 		bhi	.L221
 2804 01d0 DFE813F0 		tbh	[pc, r3, lsl #1]
 2805              	.L226:
 2806 01d4 5602     		.2byte	(.L229-.L226)/2
 2807 01d6 6102     		.2byte	(.L221-.L226)/2
 2808 01d8 6102     		.2byte	(.L221-.L226)/2
 2809 01da 6102     		.2byte	(.L221-.L226)/2
 2810 01dc 6102     		.2byte	(.L221-.L226)/2
 2811 01de 6102     		.2byte	(.L221-.L226)/2
 2812 01e0 6102     		.2byte	(.L221-.L226)/2
 2813 01e2 6102     		.2byte	(.L221-.L226)/2
 2814 01e4 6102     		.2byte	(.L221-.L226)/2
 2815 01e6 6102     		.2byte	(.L221-.L226)/2
 2816 01e8 6102     		.2byte	(.L221-.L226)/2
 2817 01ea 6102     		.2byte	(.L221-.L226)/2
 2818 01ec 6102     		.2byte	(.L221-.L226)/2
 2819 01ee 6102     		.2byte	(.L221-.L226)/2
 2820 01f0 6102     		.2byte	(.L221-.L226)/2
 2821 01f2 6102     		.2byte	(.L221-.L226)/2
 2822 01f4 6102     		.2byte	(.L221-.L226)/2
 2823 01f6 6102     		.2byte	(.L221-.L226)/2
 2824 01f8 6102     		.2byte	(.L221-.L226)/2
 2825 01fa 6102     		.2byte	(.L221-.L226)/2
 2826 01fc 6102     		.2byte	(.L221-.L226)/2
 2827 01fe 6102     		.2byte	(.L221-.L226)/2
 2828 0200 6102     		.2byte	(.L221-.L226)/2
 2829 0202 6102     		.2byte	(.L221-.L226)/2
 2830 0204 6102     		.2byte	(.L221-.L226)/2
 2831 0206 6102     		.2byte	(.L221-.L226)/2
 2832 0208 6102     		.2byte	(.L221-.L226)/2
 2833 020a 6102     		.2byte	(.L221-.L226)/2
 2834 020c 6102     		.2byte	(.L221-.L226)/2
 2835 020e 6102     		.2byte	(.L221-.L226)/2
 2836 0210 6102     		.2byte	(.L221-.L226)/2
 2837 0212 6102     		.2byte	(.L221-.L226)/2
 2838 0214 8601     		.2byte	(.L225-.L226)/2
 2839 0216 6801     		.2byte	(.L227-.L226)/2
 2840 0218 8601     		.2byte	(.L225-.L226)/2
 2841 021a 6102     		.2byte	(.L221-.L226)/2
 2842 021c 6102     		.2byte	(.L221-.L226)/2
 2843 021e 6102     		.2byte	(.L221-.L226)/2
 2844 0220 6102     		.2byte	(.L221-.L226)/2
 2845 0222 6102     		.2byte	(.L221-.L226)/2
 2846 0224 6102     		.2byte	(.L221-.L226)/2
 2847 0226 6102     		.2byte	(.L221-.L226)/2
 2848 0228 6102     		.2byte	(.L221-.L226)/2
 2849 022a 6102     		.2byte	(.L221-.L226)/2
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 73


 2850 022c 6102     		.2byte	(.L221-.L226)/2
 2851 022e 6102     		.2byte	(.L221-.L226)/2
 2852 0230 6102     		.2byte	(.L221-.L226)/2
 2853 0232 6102     		.2byte	(.L221-.L226)/2
 2854 0234 6102     		.2byte	(.L221-.L226)/2
 2855 0236 6102     		.2byte	(.L221-.L226)/2
 2856 0238 6102     		.2byte	(.L221-.L226)/2
 2857 023a 7100     		.2byte	(.L222-.L226)/2
 2858 023c 6102     		.2byte	(.L221-.L226)/2
 2859 023e 6102     		.2byte	(.L221-.L226)/2
 2860 0240 6102     		.2byte	(.L221-.L226)/2
 2861 0242 6102     		.2byte	(.L221-.L226)/2
 2862 0244 6102     		.2byte	(.L221-.L226)/2
 2863 0246 6102     		.2byte	(.L221-.L226)/2
 2864 0248 6102     		.2byte	(.L221-.L226)/2
 2865 024a 6102     		.2byte	(.L221-.L226)/2
 2866 024c 6102     		.2byte	(.L221-.L226)/2
 2867 024e 7100     		.2byte	(.L222-.L226)/2
 2868 0250 AB01     		.2byte	(.L228-.L226)/2
 2869 0252 7100     		.2byte	(.L222-.L226)/2
 2870 0254 8601     		.2byte	(.L225-.L226)/2
 2871 0256 6801     		.2byte	(.L227-.L226)/2
 2872 0258 8601     		.2byte	(.L225-.L226)/2
 2873              		.p2align 1
 2874              	.L217:
 671:Core/Src/printf.c ****         format++;
 2875              		.loc 1 671 9 is_stmt 1 view .LVU731
 671:Core/Src/printf.c ****         format++;
 2876              		.loc 1 671 15 is_stmt 0 view .LVU732
 2877 025a 46F40076 		orr	r6, r6, #512
 2878              	.LVL331:
 672:Core/Src/printf.c ****         break;
 2879              		.loc 1 672 9 is_stmt 1 view .LVU733
 672:Core/Src/printf.c ****         break;
 2880              		.loc 1 672 15 is_stmt 0 view .LVU734
 2881 025e 0132     		adds	r2, r2, #1
 2882 0260 0D92     		str	r2, [sp, #52]
 673:Core/Src/printf.c ****       case 'z' :
 2883              		.loc 1 673 9 is_stmt 1 view .LVU735
 2884 0262 A9E7     		b	.L212
 2885              	.L213:
 675:Core/Src/printf.c ****         format++;
 2886              		.loc 1 675 9 view .LVU736
 675:Core/Src/printf.c ****         format++;
 2887              		.loc 1 675 15 is_stmt 0 view .LVU737
 2888 0264 46F48076 		orr	r6, r6, #256
 2889              	.LVL332:
 676:Core/Src/printf.c ****         break;
 2890              		.loc 1 676 9 is_stmt 1 view .LVU738
 676:Core/Src/printf.c ****         break;
 2891              		.loc 1 676 15 is_stmt 0 view .LVU739
 2892 0268 0132     		adds	r2, r2, #1
 2893 026a 0D92     		str	r2, [sp, #52]
 677:Core/Src/printf.c ****       default :
 2894              		.loc 1 677 9 is_stmt 1 view .LVU740
 2895 026c A4E7     		b	.L212
 2896              	.L219:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 74


 683:Core/Src/printf.c ****       case 'd' :
 2897              		.loc 1 683 5 is_stmt 0 view .LVU741
 2898 026e 7828     		cmp	r0, #120
 2899 0270 00F21182 		bhi	.L221
 2900 0274 6928     		cmp	r0, #105
 2901 0276 C0F00E82 		bcc	.L221
 2902 027a A0F16902 		sub	r2, r0, #105
 2903 027e D2B2     		uxtb	r2, r2
 2904 0280 0123     		movs	r3, #1
 2905 0282 9340     		lsls	r3, r3, r2
 2906 0284 49F24102 		movw	r2, #36929
 2907 0288 1342     		tst	r3, r2
 2908 028a 14D1     		bne	.L222
 2909 028c 13F0800F 		tst	r3, #128
 2910 0290 40F0DB81 		bne	.L223
 2911 0294 13F4806F 		tst	r3, #1024
 2912 0298 00F0FD81 		beq	.L221
 2913              	.LBB38:
 794:Core/Src/printf.c ****       }
 795:Core/Src/printf.c **** 
 796:Core/Src/printf.c ****       case 's' : {
 797:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 2914              		.loc 1 797 9 is_stmt 1 view .LVU742
 2915              		.loc 1 797 21 is_stmt 0 view .LVU743
 2916 029c 189B     		ldr	r3, [sp, #96]
 2917 029e 1A1D     		adds	r2, r3, #4
 2918 02a0 1892     		str	r2, [sp, #96]
 2919 02a2 D3F800A0 		ldr	r10, [r3]
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 2920              		.loc 1 798 9 is_stmt 1 view .LVU744
 2921              		.loc 1 798 26 is_stmt 0 view .LVU745
 2922 02a6 0A9B     		ldr	r3, [sp, #40]
 2923 02a8 002B     		cmp	r3, #0
 2924 02aa 40F08C81 		bne	.L262
 2925              		.loc 1 798 26 discriminator 2 view .LVU746
 2926 02ae 4FF0FF32 		mov	r2, #-1
 2927              	.L263:
 2928              		.loc 1 798 26 discriminator 1 view .LVU747
 2929 02b2 5346     		mov	r3, r10
 2930 02b4 70E1     		b	.L264
 2931              	.L222:
 2932              	.LBE38:
 2933              	.LBB41:
 692:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 2934              		.loc 1 692 9 is_stmt 1 view .LVU748
 693:Core/Src/printf.c ****           base = 16U;
 2935              		.loc 1 693 9 view .LVU749
 2936 02b6 6F28     		cmp	r0, #111
 2937 02b8 3DD0     		beq	.L285
 2938 02ba 05D8     		bhi	.L232
 2939 02bc 5828     		cmp	r0, #88
 2940 02be 3CD0     		beq	.L286
 2941 02c0 6228     		cmp	r0, #98
 2942 02c2 03D1     		bne	.L233
 2943              	.LBE41:
 657:Core/Src/printf.c ****         format++;
 2944              		.loc 1 657 15 is_stmt 0 view .LVU750
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 75


 2945 02c4 0223     		movs	r3, #2
 2946 02c6 04E0     		b	.L231
 2947              	.L232:
 2948 02c8 7828     		cmp	r0, #120
 2949 02ca 38D0     		beq	.L288
 2950              	.L233:
 2951              	.LBB49:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2952              		.loc 1 703 11 is_stmt 1 view .LVU751
 2953              	.LVL333:
 704:Core/Src/printf.c ****         }
 2954              		.loc 1 704 11 view .LVU752
 704:Core/Src/printf.c ****         }
 2955              		.loc 1 704 17 is_stmt 0 view .LVU753
 2956 02cc 26F01006 		bic	r6, r6, #16
 2957              	.LVL334:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2958              		.loc 1 703 16 view .LVU754
 2959 02d0 0A23     		movs	r3, #10
 2960              	.LVL335:
 2961              	.L231:
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2962              		.loc 1 707 9 is_stmt 1 view .LVU755
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2963              		.loc 1 707 12 is_stmt 0 view .LVU756
 2964 02d2 5828     		cmp	r0, #88
 2965 02d4 35D0     		beq	.L308
 2966              	.LVL336:
 2967              	.L234:
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2968              		.loc 1 712 9 is_stmt 1 view .LVU757
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2969              		.loc 1 712 12 is_stmt 0 view .LVU758
 2970 02d6 6928     		cmp	r0, #105
 2971 02d8 03D0     		beq	.L235
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2972              		.loc 1 712 30 discriminator 1 view .LVU759
 2973 02da 6428     		cmp	r0, #100
 2974 02dc 01D0     		beq	.L235
 713:Core/Src/printf.c ****         }
 2975              		.loc 1 713 11 is_stmt 1 view .LVU760
 713:Core/Src/printf.c ****         }
 2976              		.loc 1 713 17 is_stmt 0 view .LVU761
 2977 02de 26F00C06 		bic	r6, r6, #12
 2978              	.LVL337:
 2979              	.L235:
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2980              		.loc 1 717 9 is_stmt 1 view .LVU762
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2981              		.loc 1 717 12 is_stmt 0 view .LVU763
 2982 02e2 16F4806F 		tst	r6, #1024
 2983 02e6 01D0     		beq	.L236
 718:Core/Src/printf.c ****         }
 2984              		.loc 1 718 11 is_stmt 1 view .LVU764
 718:Core/Src/printf.c ****         }
 2985              		.loc 1 718 17 is_stmt 0 view .LVU765
 2986 02e8 26F00106 		bic	r6, r6, #1
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 76


 2987              	.LVL338:
 2988              	.L236:
 722:Core/Src/printf.c ****           // signed
 2989              		.loc 1 722 9 is_stmt 1 view .LVU766
 722:Core/Src/printf.c ****           // signed
 2990              		.loc 1 722 12 is_stmt 0 view .LVU767
 2991 02ec 6928     		cmp	r0, #105
 2992 02ee 2BD0     		beq	.L237
 722:Core/Src/printf.c ****           // signed
 2993              		.loc 1 722 30 discriminator 1 view .LVU768
 2994 02f0 6428     		cmp	r0, #100
 2995 02f2 29D0     		beq	.L237
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2996              		.loc 1 741 11 is_stmt 1 view .LVU769
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2997              		.loc 1 741 14 is_stmt 0 view .LVU770
 2998 02f4 16F4007F 		tst	r6, #512
 2999 02f8 40F09680 		bne	.L309
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3000              		.loc 1 746 16 is_stmt 1 view .LVU771
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3001              		.loc 1 746 19 is_stmt 0 view .LVU772
 3002 02fc 16F4807F 		tst	r6, #256
 3003 0300 40F0AE80 		bne	.L310
 3004              	.LBB42:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3005              		.loc 1 750 13 is_stmt 1 view .LVU773
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3006              		.loc 1 750 103 is_stmt 0 view .LVU774
 3007 0304 16F0400F 		tst	r6, #64
 3008 0308 00F0BF80 		beq	.L248
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3009              		.loc 1 750 78 discriminator 1 view .LVU775
 3010 030c 189A     		ldr	r2, [sp, #96]
 3011 030e 111D     		adds	r1, r2, #4
 3012 0310 1891     		str	r1, [sp, #96]
 3013 0312 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3014              	.L249:
 3015              	.LVL339:
 751:Core/Src/printf.c ****           }
 3016              		.loc 1 751 13 is_stmt 1 view .LVU776
 751:Core/Src/printf.c ****           }
 3017              		.loc 1 751 19 is_stmt 0 view .LVU777
 3018 0314 0596     		str	r6, [sp, #20]
 3019 0316 0B99     		ldr	r1, [sp, #44]
 3020 0318 0491     		str	r1, [sp, #16]
 3021 031a 0A99     		ldr	r1, [sp, #40]
 3022 031c 0391     		str	r1, [sp, #12]
 3023 031e 0293     		str	r3, [sp, #8]
 3024 0320 0023     		movs	r3, #0
 3025              	.LVL340:
 751:Core/Src/printf.c ****           }
 3026              		.loc 1 751 19 view .LVU778
 3027 0322 0193     		str	r3, [sp, #4]
 3028 0324 0092     		str	r2, [sp]
 3029 0326 3B46     		mov	r3, r7
 3030 0328 2A46     		mov	r2, r5
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 77


 3031              	.LVL341:
 751:Core/Src/printf.c ****           }
 3032              		.loc 1 751 19 view .LVU779
 3033 032a 4946     		mov	r1, r9
 3034 032c 4046     		mov	r0, r8
 3035 032e FFF7FEFF 		bl	_ntoa_long
 3036              	.LVL342:
 751:Core/Src/printf.c ****           }
 3037              		.loc 1 751 19 view .LVU780
 3038 0332 0546     		mov	r5, r0
 3039              	.LVL343:
 751:Core/Src/printf.c ****           }
 3040              		.loc 1 751 19 view .LVU781
 3041 0334 29E0     		b	.L241
 3042              	.LVL344:
 3043              	.L285:
 751:Core/Src/printf.c ****           }
 3044              		.loc 1 751 19 view .LVU782
 3045              	.LBE42:
 3046              	.LBE49:
 657:Core/Src/printf.c ****         format++;
 3047              		.loc 1 657 15 view .LVU783
 3048 0336 0823     		movs	r3, #8
 3049 0338 CBE7     		b	.L231
 3050              	.L286:
 3051              	.LBB50:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 3052              		.loc 1 703 16 view .LVU784
 3053 033a 1023     		movs	r3, #16
 3054 033c C9E7     		b	.L231
 3055              	.L288:
 3056              	.LBE50:
 657:Core/Src/printf.c ****         format++;
 3057              		.loc 1 657 15 view .LVU785
 3058 033e 1023     		movs	r3, #16
 3059 0340 C7E7     		b	.L231
 3060              	.LVL345:
 3061              	.L308:
 3062              	.LBB51:
 708:Core/Src/printf.c ****         }
 3063              		.loc 1 708 11 is_stmt 1 view .LVU786
 708:Core/Src/printf.c ****         }
 3064              		.loc 1 708 17 is_stmt 0 view .LVU787
 3065 0342 46F02006 		orr	r6, r6, #32
 3066              	.LVL346:
 708:Core/Src/printf.c ****         }
 3067              		.loc 1 708 17 view .LVU788
 3068 0346 C6E7     		b	.L234
 3069              	.LVL347:
 3070              	.L237:
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3071              		.loc 1 724 11 is_stmt 1 view .LVU789
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3072              		.loc 1 724 14 is_stmt 0 view .LVU790
 3073 0348 16F4007F 		tst	r6, #512
 3074 034c 21D1     		bne	.L311
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 78


 3075              		.loc 1 730 16 is_stmt 1 view .LVU791
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3076              		.loc 1 730 19 is_stmt 0 view .LVU792
 3077 034e 16F4807F 		tst	r6, #256
 3078 0352 42D1     		bne	.L312
 3079              	.LBB43:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3080              		.loc 1 735 13 is_stmt 1 view .LVU793
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3081              		.loc 1 735 76 is_stmt 0 view .LVU794
 3082 0354 16F0400F 		tst	r6, #64
 3083 0358 58D0     		beq	.L243
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3084              		.loc 1 735 60 discriminator 1 view .LVU795
 3085 035a 189A     		ldr	r2, [sp, #96]
 3086 035c 111D     		adds	r1, r2, #4
 3087 035e 1891     		str	r1, [sp, #96]
 3088 0360 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3089              	.L244:
 3090              	.LVL348:
 736:Core/Src/printf.c ****           }
 3091              		.loc 1 736 13 is_stmt 1 view .LVU796
 736:Core/Src/printf.c ****           }
 3092              		.loc 1 736 56 is_stmt 0 view .LVU797
 3093 0362 82EAE271 		eor	r1, r2, r2, asr #31
 3094 0366 A1EBE271 		sub	r1, r1, r2, asr #31
 736:Core/Src/printf.c ****           }
 3095              		.loc 1 736 19 view .LVU798
 3096 036a 0596     		str	r6, [sp, #20]
 3097 036c 0B98     		ldr	r0, [sp, #44]
 3098 036e 0490     		str	r0, [sp, #16]
 3099 0370 0A98     		ldr	r0, [sp, #40]
 3100 0372 0390     		str	r0, [sp, #12]
 3101 0374 0293     		str	r3, [sp, #8]
 3102 0376 D20F     		lsrs	r2, r2, #31
 3103              	.LVL349:
 736:Core/Src/printf.c ****           }
 3104              		.loc 1 736 19 view .LVU799
 3105 0378 0192     		str	r2, [sp, #4]
 3106 037a 0091     		str	r1, [sp]
 3107 037c 3B46     		mov	r3, r7
 3108              	.LVL350:
 736:Core/Src/printf.c ****           }
 3109              		.loc 1 736 19 view .LVU800
 3110 037e 2A46     		mov	r2, r5
 3111 0380 4946     		mov	r1, r9
 3112 0382 4046     		mov	r0, r8
 3113 0384 FFF7FEFF 		bl	_ntoa_long
 3114              	.LVL351:
 736:Core/Src/printf.c ****           }
 3115              		.loc 1 736 19 view .LVU801
 3116 0388 0546     		mov	r5, r0
 3117              	.LVL352:
 3118              	.L241:
 736:Core/Src/printf.c ****           }
 3119              		.loc 1 736 19 view .LVU802
 3120              	.LBE43:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 79


 754:Core/Src/printf.c ****         break;
 3121              		.loc 1 754 9 is_stmt 1 view .LVU803
 754:Core/Src/printf.c ****         break;
 3122              		.loc 1 754 15 is_stmt 0 view .LVU804
 3123 038a 0D9B     		ldr	r3, [sp, #52]
 3124 038c 0133     		adds	r3, r3, #1
 3125 038e 0D93     		str	r3, [sp, #52]
 755:Core/Src/printf.c ****       }
 3126              		.loc 1 755 9 is_stmt 1 view .LVU805
 3127 0390 4BE6     		b	.L277
 3128              	.LVL353:
 3129              	.L311:
 3130              	.LBB44:
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3131              		.loc 1 726 13 view .LVU806
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3132              		.loc 1 726 29 is_stmt 0 view .LVU807
 3133 0392 189A     		ldr	r2, [sp, #96]
 3134 0394 0732     		adds	r2, r2, #7
 3135 0396 22F00702 		bic	r2, r2, #7
 3136 039a 02F10801 		add	r1, r2, #8
 3137 039e 1891     		str	r1, [sp, #96]
 3138 03a0 5168     		ldr	r1, [r2, #4]
 727:Core/Src/printf.c **** #endif
 3139              		.loc 1 727 13 is_stmt 1 view .LVU808
 727:Core/Src/printf.c **** #endif
 3140              		.loc 1 727 61 is_stmt 0 view .LVU809
 3141 03a2 1268     		ldr	r2, [r2]
 3142 03a4 0846     		mov	r0, r1
 3143 03a6 0029     		cmp	r1, #0
 3144 03a8 13DB     		blt	.L313
 3145              	.L240:
 727:Core/Src/printf.c **** #endif
 3146              		.loc 1 727 19 view .LVU810
 3147 03aa 0896     		str	r6, [sp, #32]
 3148 03ac 0B9C     		ldr	r4, [sp, #44]
 3149 03ae 0794     		str	r4, [sp, #28]
 3150 03b0 0A9C     		ldr	r4, [sp, #40]
 3151 03b2 0694     		str	r4, [sp, #24]
 3152 03b4 0493     		str	r3, [sp, #16]
 3153 03b6 0023     		movs	r3, #0
 3154              	.LVL354:
 727:Core/Src/printf.c **** #endif
 3155              		.loc 1 727 19 view .LVU811
 3156 03b8 0593     		str	r3, [sp, #20]
 3157 03ba C90F     		lsrs	r1, r1, #31
 3158 03bc 0291     		str	r1, [sp, #8]
 3159 03be 0092     		str	r2, [sp]
 3160 03c0 0190     		str	r0, [sp, #4]
 3161 03c2 3B46     		mov	r3, r7
 3162 03c4 2A46     		mov	r2, r5
 3163 03c6 4946     		mov	r1, r9
 3164 03c8 4046     		mov	r0, r8
 3165 03ca FFF7FEFF 		bl	_ntoa_long_long
 3166              	.LVL355:
 727:Core/Src/printf.c **** #endif
 3167              		.loc 1 727 19 view .LVU812
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 80


 3168 03ce 0546     		mov	r5, r0
 3169              	.LVL356:
 727:Core/Src/printf.c **** #endif
 3170              		.loc 1 727 19 view .LVU813
 3171              	.LBE44:
 3172 03d0 DBE7     		b	.L241
 3173              	.LVL357:
 3174              	.L313:
 3175              	.LBB45:
 727:Core/Src/printf.c **** #endif
 3176              		.loc 1 727 61 view .LVU814
 3177 03d2 5242     		negs	r2, r2
 3178 03d4 61EB4100 		sbc	r0, r1, r1, lsl #1
 3179 03d8 E7E7     		b	.L240
 3180              	.L312:
 3181              	.LBE45:
 3182              	.LBB46:
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3183              		.loc 1 731 13 is_stmt 1 view .LVU815
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3184              		.loc 1 731 24 is_stmt 0 view .LVU816
 3185 03da 189A     		ldr	r2, [sp, #96]
 3186 03dc 111D     		adds	r1, r2, #4
 3187 03de 1891     		str	r1, [sp, #96]
 3188 03e0 1268     		ldr	r2, [r2]
 732:Core/Src/printf.c ****           }
 3189              		.loc 1 732 13 is_stmt 1 view .LVU817
 732:Core/Src/printf.c ****           }
 3190              		.loc 1 732 56 is_stmt 0 view .LVU818
 3191 03e2 82EAE271 		eor	r1, r2, r2, asr #31
 3192 03e6 A1EBE271 		sub	r1, r1, r2, asr #31
 732:Core/Src/printf.c ****           }
 3193              		.loc 1 732 19 view .LVU819
 3194 03ea 0596     		str	r6, [sp, #20]
 3195 03ec 0B98     		ldr	r0, [sp, #44]
 3196 03ee 0490     		str	r0, [sp, #16]
 3197 03f0 0A98     		ldr	r0, [sp, #40]
 3198 03f2 0390     		str	r0, [sp, #12]
 3199 03f4 0293     		str	r3, [sp, #8]
 3200 03f6 D20F     		lsrs	r2, r2, #31
 3201 03f8 0192     		str	r2, [sp, #4]
 3202 03fa 0091     		str	r1, [sp]
 3203 03fc 3B46     		mov	r3, r7
 3204              	.LVL358:
 732:Core/Src/printf.c ****           }
 3205              		.loc 1 732 19 view .LVU820
 3206 03fe 2A46     		mov	r2, r5
 3207 0400 4946     		mov	r1, r9
 3208 0402 4046     		mov	r0, r8
 3209 0404 FFF7FEFF 		bl	_ntoa_long
 3210              	.LVL359:
 732:Core/Src/printf.c ****           }
 3211              		.loc 1 732 19 view .LVU821
 3212 0408 0546     		mov	r5, r0
 3213              	.LVL360:
 732:Core/Src/printf.c ****           }
 3214              		.loc 1 732 19 view .LVU822
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 81


 3215              	.LBE46:
 3216 040a BEE7     		b	.L241
 3217              	.LVL361:
 3218              	.L243:
 3219              	.LBB47:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3220              		.loc 1 735 129 discriminator 2 view .LVU823
 3221 040c 16F0800F 		tst	r6, #128
 3222 0410 05D0     		beq	.L245
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3223              		.loc 1 735 113 discriminator 4 view .LVU824
 3224 0412 189A     		ldr	r2, [sp, #96]
 3225 0414 111D     		adds	r1, r2, #4
 3226 0416 1891     		str	r1, [sp, #96]
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3227              		.loc 1 735 102 discriminator 1 view .LVU825
 3228 0418 B2F90020 		ldrsh	r2, [r2]
 3229 041c A1E7     		b	.L244
 3230              	.L245:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3231              		.loc 1 735 129 discriminator 5 view .LVU826
 3232 041e 189A     		ldr	r2, [sp, #96]
 3233 0420 111D     		adds	r1, r2, #4
 3234 0422 1891     		str	r1, [sp, #96]
 3235 0424 1268     		ldr	r2, [r2]
 3236 0426 9CE7     		b	.L244
 3237              	.L309:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3238              		.loc 1 735 129 discriminator 5 view .LVU827
 3239              	.LBE47:
 743:Core/Src/printf.c **** #endif
 3240              		.loc 1 743 13 is_stmt 1 view .LVU828
 743:Core/Src/printf.c **** #endif
 3241              		.loc 1 743 19 is_stmt 0 view .LVU829
 3242 0428 189A     		ldr	r2, [sp, #96]
 3243 042a 0732     		adds	r2, r2, #7
 3244 042c 22F00702 		bic	r2, r2, #7
 3245 0430 02F10801 		add	r1, r2, #8
 3246 0434 1891     		str	r1, [sp, #96]
 743:Core/Src/printf.c **** #endif
 3247              		.loc 1 743 19 discriminator 1 view .LVU830
 3248 0436 0896     		str	r6, [sp, #32]
 3249 0438 0B99     		ldr	r1, [sp, #44]
 3250 043a 0791     		str	r1, [sp, #28]
 3251 043c 0A99     		ldr	r1, [sp, #40]
 3252 043e 0691     		str	r1, [sp, #24]
 3253 0440 0021     		movs	r1, #0
 3254 0442 0493     		str	r3, [sp, #16]
 3255 0444 0591     		str	r1, [sp, #20]
 3256 0446 0291     		str	r1, [sp, #8]
 3257 0448 D2E90023 		ldrd	r2, [r2]
 3258 044c CDE90023 		strd	r2, [sp]
 3259 0450 3B46     		mov	r3, r7
 3260              	.LVL362:
 743:Core/Src/printf.c **** #endif
 3261              		.loc 1 743 19 discriminator 1 view .LVU831
 3262 0452 2A46     		mov	r2, r5
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 82


 3263 0454 4946     		mov	r1, r9
 3264 0456 4046     		mov	r0, r8
 3265 0458 FFF7FEFF 		bl	_ntoa_long_long
 3266              	.LVL363:
 743:Core/Src/printf.c **** #endif
 3267              		.loc 1 743 19 discriminator 1 view .LVU832
 3268 045c 0546     		mov	r5, r0
 3269              	.LVL364:
 743:Core/Src/printf.c **** #endif
 3270              		.loc 1 743 19 discriminator 1 view .LVU833
 3271 045e 94E7     		b	.L241
 3272              	.LVL365:
 3273              	.L310:
 747:Core/Src/printf.c ****           }
 3274              		.loc 1 747 13 is_stmt 1 view .LVU834
 747:Core/Src/printf.c ****           }
 3275              		.loc 1 747 19 is_stmt 0 view .LVU835
 3276 0460 189A     		ldr	r2, [sp, #96]
 3277 0462 111D     		adds	r1, r2, #4
 3278 0464 1891     		str	r1, [sp, #96]
 747:Core/Src/printf.c ****           }
 3279              		.loc 1 747 19 discriminator 1 view .LVU836
 3280 0466 0596     		str	r6, [sp, #20]
 3281 0468 0B99     		ldr	r1, [sp, #44]
 3282 046a 0491     		str	r1, [sp, #16]
 3283 046c 0A99     		ldr	r1, [sp, #40]
 3284 046e 0391     		str	r1, [sp, #12]
 3285 0470 0293     		str	r3, [sp, #8]
 3286 0472 0023     		movs	r3, #0
 3287              	.LVL366:
 747:Core/Src/printf.c ****           }
 3288              		.loc 1 747 19 discriminator 1 view .LVU837
 3289 0474 0193     		str	r3, [sp, #4]
 3290 0476 1368     		ldr	r3, [r2]
 3291 0478 0093     		str	r3, [sp]
 3292 047a 3B46     		mov	r3, r7
 3293 047c 2A46     		mov	r2, r5
 3294 047e 4946     		mov	r1, r9
 3295 0480 4046     		mov	r0, r8
 3296 0482 FFF7FEFF 		bl	_ntoa_long
 3297              	.LVL367:
 747:Core/Src/printf.c ****           }
 3298              		.loc 1 747 19 discriminator 1 view .LVU838
 3299 0486 0546     		mov	r5, r0
 3300              	.LVL368:
 747:Core/Src/printf.c ****           }
 3301              		.loc 1 747 19 discriminator 1 view .LVU839
 3302 0488 7FE7     		b	.L241
 3303              	.LVL369:
 3304              	.L248:
 3305              	.LBB48:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3306              		.loc 1 750 174 discriminator 2 view .LVU840
 3307 048a 16F0800F 		tst	r6, #128
 3308 048e 04D0     		beq	.L250
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3309              		.loc 1 750 149 discriminator 4 view .LVU841
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 83


 3310 0490 189A     		ldr	r2, [sp, #96]
 3311 0492 111D     		adds	r1, r2, #4
 3312 0494 1891     		str	r1, [sp, #96]
 3313 0496 1288     		ldrh	r2, [r2]
 3314 0498 3CE7     		b	.L249
 3315              	.L250:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3316              		.loc 1 750 174 discriminator 5 view .LVU842
 3317 049a 189A     		ldr	r2, [sp, #96]
 3318 049c 111D     		adds	r1, r2, #4
 3319 049e 1891     		str	r1, [sp, #96]
 3320 04a0 1268     		ldr	r2, [r2]
 3321 04a2 37E7     		b	.L249
 3322              	.LVL370:
 3323              	.L227:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3324              		.loc 1 750 174 discriminator 5 view .LVU843
 3325              	.LBE48:
 3326              	.LBE51:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3327              		.loc 1 760 9 is_stmt 1 view .LVU844
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3328              		.loc 1 760 12 is_stmt 0 view .LVU845
 3329 04a4 4628     		cmp	r0, #70
 3330 04a6 18D0     		beq	.L314
 3331              	.LVL371:
 3332              	.L251:
 761:Core/Src/printf.c ****         format++;
 3333              		.loc 1 761 9 is_stmt 1 view .LVU846
 761:Core/Src/printf.c ****         format++;
 3334              		.loc 1 761 15 is_stmt 0 view .LVU847
 3335 04a8 189B     		ldr	r3, [sp, #96]
 3336 04aa 0733     		adds	r3, r3, #7
 3337 04ac 23F00703 		bic	r3, r3, #7
 3338 04b0 03F10802 		add	r2, r3, #8
 3339 04b4 1892     		str	r2, [sp, #96]
 761:Core/Src/printf.c ****         format++;
 3340              		.loc 1 761 15 discriminator 1 view .LVU848
 3341 04b6 93ED000B 		vldr.64	d0, [r3]
 3342 04ba 0296     		str	r6, [sp, #8]
 3343 04bc 0B9B     		ldr	r3, [sp, #44]
 3344 04be 0193     		str	r3, [sp, #4]
 3345 04c0 0A9B     		ldr	r3, [sp, #40]
 3346 04c2 0093     		str	r3, [sp]
 3347 04c4 3B46     		mov	r3, r7
 3348 04c6 2A46     		mov	r2, r5
 3349 04c8 4946     		mov	r1, r9
 3350 04ca 4046     		mov	r0, r8
 3351 04cc FFF7FEFF 		bl	_ftoa
 3352              	.LVL372:
 3353 04d0 0546     		mov	r5, r0
 3354              	.LVL373:
 762:Core/Src/printf.c ****         break;
 3355              		.loc 1 762 9 is_stmt 1 view .LVU849
 762:Core/Src/printf.c ****         break;
 3356              		.loc 1 762 15 is_stmt 0 view .LVU850
 3357 04d2 0D9B     		ldr	r3, [sp, #52]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 84


 3358 04d4 0133     		adds	r3, r3, #1
 3359 04d6 0D93     		str	r3, [sp, #52]
 763:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3360              		.loc 1 763 9 is_stmt 1 view .LVU851
 3361 04d8 A7E5     		b	.L277
 3362              	.LVL374:
 3363              	.L314:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3364              		.loc 1 760 29 discriminator 1 view .LVU852
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3365              		.loc 1 760 35 is_stmt 0 discriminator 1 view .LVU853
 3366 04da 46F02006 		orr	r6, r6, #32
 3367              	.LVL375:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3368              		.loc 1 760 35 discriminator 1 view .LVU854
 3369 04de E3E7     		b	.L251
 3370              	.LVL376:
 3371              	.L225:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3372              		.loc 1 769 9 is_stmt 1 view .LVU855
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3373              		.loc 1 769 12 is_stmt 0 view .LVU856
 3374 04e0 6728     		cmp	r0, #103
 3375 04e2 01D0     		beq	.L252
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3376              		.loc 1 769 29 discriminator 2 view .LVU857
 3377 04e4 4728     		cmp	r0, #71
 3378 04e6 01D1     		bne	.L253
 3379              	.L252:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3380              		.loc 1 769 49 is_stmt 1 discriminator 3 view .LVU858
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3381              		.loc 1 769 55 is_stmt 0 discriminator 3 view .LVU859
 3382 04e8 46F40066 		orr	r6, r6, #2048
 3383              	.LVL377:
 3384              	.L253:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3385              		.loc 1 770 9 is_stmt 1 view .LVU860
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3386              		.loc 1 770 12 is_stmt 0 view .LVU861
 3387 04ec 4528     		cmp	r0, #69
 3388 04ee 01D0     		beq	.L254
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3389              		.loc 1 770 29 discriminator 2 view .LVU862
 3390 04f0 4728     		cmp	r0, #71
 3391 04f2 01D1     		bne	.L255
 3392              	.L254:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3393              		.loc 1 770 49 is_stmt 1 discriminator 3 view .LVU863
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3394              		.loc 1 770 55 is_stmt 0 discriminator 3 view .LVU864
 3395 04f4 46F02006 		orr	r6, r6, #32
 3396              	.LVL378:
 3397              	.L255:
 771:Core/Src/printf.c ****         format++;
 3398              		.loc 1 771 9 is_stmt 1 view .LVU865
 771:Core/Src/printf.c ****         format++;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 85


 3399              		.loc 1 771 15 is_stmt 0 view .LVU866
 3400 04f8 189B     		ldr	r3, [sp, #96]
 3401 04fa 0733     		adds	r3, r3, #7
 3402 04fc 23F00703 		bic	r3, r3, #7
 3403 0500 03F10802 		add	r2, r3, #8
 3404 0504 1892     		str	r2, [sp, #96]
 771:Core/Src/printf.c ****         format++;
 3405              		.loc 1 771 15 discriminator 1 view .LVU867
 3406 0506 93ED000B 		vldr.64	d0, [r3]
 3407 050a 0296     		str	r6, [sp, #8]
 3408 050c 0B9B     		ldr	r3, [sp, #44]
 3409 050e 0193     		str	r3, [sp, #4]
 3410 0510 0A9B     		ldr	r3, [sp, #40]
 3411 0512 0093     		str	r3, [sp]
 3412 0514 3B46     		mov	r3, r7
 3413 0516 2A46     		mov	r2, r5
 3414 0518 4946     		mov	r1, r9
 3415 051a 4046     		mov	r0, r8
 3416 051c FFF7FEFF 		bl	_etoa
 3417              	.LVL379:
 3418 0520 0546     		mov	r5, r0
 3419              	.LVL380:
 772:Core/Src/printf.c ****         break;
 3420              		.loc 1 772 9 is_stmt 1 view .LVU868
 772:Core/Src/printf.c ****         break;
 3421              		.loc 1 772 15 is_stmt 0 view .LVU869
 3422 0522 0D9B     		ldr	r3, [sp, #52]
 3423 0524 0133     		adds	r3, r3, #1
 3424 0526 0D93     		str	r3, [sp, #52]
 773:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3425              		.loc 1 773 9 is_stmt 1 view .LVU870
 3426 0528 7FE5     		b	.L277
 3427              	.LVL381:
 3428              	.L228:
 3429              	.LBB52:
 777:Core/Src/printf.c ****         // pre padding
 3430              		.loc 1 777 9 view .LVU871
 779:Core/Src/printf.c ****           while (l++ < width) {
 3431              		.loc 1 779 9 view .LVU872
 779:Core/Src/printf.c ****           while (l++ < width) {
 3432              		.loc 1 779 12 is_stmt 0 view .LVU873
 3433 052a 16F00206 		ands	r6, r6, #2
 3434              	.LVL382:
 779:Core/Src/printf.c ****           while (l++ < width) {
 3435              		.loc 1 779 12 view .LVU874
 3436 052e 1CD0     		beq	.L289
 777:Core/Src/printf.c ****         // pre padding
 3437              		.loc 1 777 22 view .LVU875
 3438 0530 0124     		movs	r4, #1
 3439              	.LVL383:
 3440              	.L257:
 785:Core/Src/printf.c ****         // post padding
 3441              		.loc 1 785 9 is_stmt 1 view .LVU876
 785:Core/Src/printf.c ****         // post padding
 3442              		.loc 1 785 19 is_stmt 0 view .LVU877
 3443 0532 1898     		ldr	r0, [sp, #96]
 3444 0534 031D     		adds	r3, r0, #4
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 86


 3445 0536 1893     		str	r3, [sp, #96]
 785:Core/Src/printf.c ****         // post padding
 3446              		.loc 1 785 9 discriminator 1 view .LVU878
 3447 0538 05F1010A 		add	r10, r5, #1
 3448              	.LVL384:
 785:Core/Src/printf.c ****         // post padding
 3449              		.loc 1 785 9 discriminator 1 view .LVU879
 3450 053c 3B46     		mov	r3, r7
 3451 053e 2A46     		mov	r2, r5
 3452 0540 4946     		mov	r1, r9
 3453 0542 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3454 0544 C047     		blx	r8
 3455              	.LVL385:
 787:Core/Src/printf.c ****           while (l++ < width) {
 3456              		.loc 1 787 9 is_stmt 1 view .LVU880
 787:Core/Src/printf.c ****           while (l++ < width) {
 3457              		.loc 1 787 12 is_stmt 0 view .LVU881
 3458 0546 AEB9     		cbnz	r6, .L315
 3459              	.LVL386:
 3460              	.L260:
 792:Core/Src/printf.c ****         break;
 3461              		.loc 1 792 9 is_stmt 1 view .LVU882
 792:Core/Src/printf.c ****         break;
 3462              		.loc 1 792 15 is_stmt 0 view .LVU883
 3463 0548 0D9B     		ldr	r3, [sp, #52]
 3464 054a 0133     		adds	r3, r3, #1
 3465 054c 0D93     		str	r3, [sp, #52]
 793:Core/Src/printf.c ****       }
 3466              		.loc 1 793 9 is_stmt 1 view .LVU884
 3467 054e 5546     		mov	r5, r10
 3468 0550 6BE5     		b	.L277
 3469              	.LVL387:
 3470              	.L258:
 781:Core/Src/printf.c ****           }
 3471              		.loc 1 781 13 view .LVU885
 3472 0552 551C     		adds	r5, r2, #1
 3473              	.LVL388:
 781:Core/Src/printf.c ****           }
 3474              		.loc 1 781 13 is_stmt 0 view .LVU886
 3475 0554 3B46     		mov	r3, r7
 3476 0556 4946     		mov	r1, r9
 3477 0558 2020     		movs	r0, #32
 3478 055a C047     		blx	r8
 3479              	.LVL389:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3480              		.loc 1 780 19 view .LVU887
 3481 055c 2346     		mov	r3, r4
 781:Core/Src/printf.c ****           }
 3482              		.loc 1 781 13 view .LVU888
 3483 055e 2A46     		mov	r2, r5
 3484              	.LVL390:
 3485              	.L256:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3486              		.loc 1 780 22 is_stmt 1 view .LVU889
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3487              		.loc 1 780 19 is_stmt 0 view .LVU890
 3488 0560 5C1C     		adds	r4, r3, #1
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 87


 3489              	.LVL391:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3490              		.loc 1 780 22 view .LVU891
 3491 0562 9A45     		cmp	r10, r3
 3492 0564 F5D8     		bhi	.L258
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3493              		.loc 1 780 22 view .LVU892
 3494 0566 1546     		mov	r5, r2
 3495 0568 E3E7     		b	.L257
 3496              	.LVL392:
 3497              	.L289:
 777:Core/Src/printf.c ****         // pre padding
 3498              		.loc 1 777 22 view .LVU893
 3499 056a 0123     		movs	r3, #1
 3500 056c DDF82CA0 		ldr	r10, [sp, #44]
 3501 0570 2A46     		mov	r2, r5
 3502 0572 F5E7     		b	.L256
 3503              	.LVL393:
 3504              	.L315:
 777:Core/Src/printf.c ****         // pre padding
 3505              		.loc 1 777 22 view .LVU894
 3506 0574 5246     		mov	r2, r10
 3507 0576 DDF82CA0 		ldr	r10, [sp, #44]
 3508              	.LVL394:
 777:Core/Src/printf.c ****         // pre padding
 3509              		.loc 1 777 22 view .LVU895
 3510 057a 06E0     		b	.L259
 3511              	.LVL395:
 3512              	.L261:
 789:Core/Src/printf.c ****           }
 3513              		.loc 1 789 13 is_stmt 1 view .LVU896
 3514 057c 561C     		adds	r6, r2, #1
 3515              	.LVL396:
 789:Core/Src/printf.c ****           }
 3516              		.loc 1 789 13 is_stmt 0 view .LVU897
 3517 057e 3B46     		mov	r3, r7
 3518 0580 4946     		mov	r1, r9
 3519 0582 2020     		movs	r0, #32
 3520 0584 C047     		blx	r8
 3521              	.LVL397:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3522              		.loc 1 788 19 view .LVU898
 3523 0586 2C46     		mov	r4, r5
 789:Core/Src/printf.c ****           }
 3524              		.loc 1 789 13 view .LVU899
 3525 0588 3246     		mov	r2, r6
 3526              	.LVL398:
 3527              	.L259:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3528              		.loc 1 788 22 is_stmt 1 view .LVU900
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3529              		.loc 1 788 19 is_stmt 0 view .LVU901
 3530 058a 651C     		adds	r5, r4, #1
 3531              	.LVL399:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3532              		.loc 1 788 22 view .LVU902
 3533 058c A245     		cmp	r10, r4
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 88


 3534 058e F5D8     		bhi	.L261
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3535              		.loc 1 788 22 view .LVU903
 3536 0590 9246     		mov	r10, r2
 3537 0592 D9E7     		b	.L260
 3538              	.LVL400:
 3539              	.L266:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3540              		.loc 1 788 22 view .LVU904
 3541              	.LBE52:
 3542              	.LBB53:
 3543              	.LBB39:
 3544              	.LBB40:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3545              		.loc 1 174 34 is_stmt 1 discriminator 4 view .LVU905
 3546 0594 0133     		adds	r3, r3, #1
 3547              	.LVL401:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3548              		.loc 1 174 30 is_stmt 0 discriminator 3 view .LVU906
 3549 0596 0A46     		mov	r2, r1
 3550              	.LVL402:
 3551              	.L264:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3552              		.loc 1 174 20 is_stmt 1 discriminator 1 view .LVU907
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3553              		.loc 1 174 17 is_stmt 0 discriminator 1 view .LVU908
 3554 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3555              		.loc 1 174 20 discriminator 1 view .LVU909
 3556 059a 11B1     		cbz	r1, .L265
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3557              		.loc 1 174 30 discriminator 3 view .LVU910
 3558 059c 511E     		subs	r1, r2, #1
 3559              	.LVL403:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3560              		.loc 1 174 20 discriminator 3 view .LVU911
 3561 059e 002A     		cmp	r2, #0
 3562 05a0 F8D1     		bne	.L266
 3563              	.LVL404:
 3564              	.L265:
 175:Core/Src/printf.c **** }
 3565              		.loc 1 175 3 is_stmt 1 view .LVU912
 175:Core/Src/printf.c **** }
 3566              		.loc 1 175 27 is_stmt 0 view .LVU913
 3567 05a2 A3EB0A03 		sub	r3, r3, r10
 3568              	.LVL405:
 175:Core/Src/printf.c **** }
 3569              		.loc 1 175 27 view .LVU914
 3570              	.LBE40:
 3571              	.LBE39:
 799:Core/Src/printf.c ****         // pre padding
 800:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 3572              		.loc 1 800 9 is_stmt 1 view .LVU915
 3573              		.loc 1 800 12 is_stmt 0 view .LVU916
 3574 05a6 16F4806B 		ands	fp, r6, #1024
 3575 05aa 03D0     		beq	.L267
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 89


 3576              		.loc 1 801 11 is_stmt 1 view .LVU917
 3577              		.loc 1 801 13 is_stmt 0 view .LVU918
 3578 05ac 0A9A     		ldr	r2, [sp, #40]
 3579 05ae 9342     		cmp	r3, r2
 3580 05b0 28BF     		it	cs
 3581 05b2 1346     		movcs	r3, r2
 3582              	.LVL406:
 3583              	.L267:
 802:Core/Src/printf.c ****         }
 803:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 3584              		.loc 1 803 9 is_stmt 1 view .LVU919
 3585              		.loc 1 803 12 is_stmt 0 view .LVU920
 3586 05b4 16F00204 		ands	r4, r6, #2
 3587 05b8 07D0     		beq	.L316
 3588 05ba 0C94     		str	r4, [sp, #48]
 3589 05bc 0A9E     		ldr	r6, [sp, #40]
 3590              	.LVL407:
 3591              		.loc 1 803 12 view .LVU921
 3592 05be 2A46     		mov	r2, r5
 3593 05c0 5D46     		mov	r5, fp
 3594              	.LVL408:
 3595              		.loc 1 803 12 view .LVU922
 3596 05c2 9B46     		mov	fp, r3
 3597 05c4 23E0     		b	.L271
 3598              	.LVL409:
 3599              	.L262:
 798:Core/Src/printf.c ****         // pre padding
 3600              		.loc 1 798 26 discriminator 1 view .LVU923
 3601 05c6 0A9A     		ldr	r2, [sp, #40]
 3602 05c8 73E6     		b	.L263
 3603              	.LVL410:
 3604              	.L316:
 798:Core/Src/printf.c ****         // pre padding
 3605              		.loc 1 798 26 discriminator 1 view .LVU924
 3606 05ca CDF830B0 		str	fp, [sp, #48]
 3607 05ce 2A46     		mov	r2, r5
 3608 05d0 2546     		mov	r5, r4
 3609              	.LVL411:
 798:Core/Src/printf.c ****         // pre padding
 3610              		.loc 1 798 26 discriminator 1 view .LVU925
 3611 05d2 0B9C     		ldr	r4, [sp, #44]
 3612 05d4 07E0     		b	.L268
 3613              	.LVL412:
 3614              	.L270:
 804:Core/Src/printf.c ****           while (l++ < width) {
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3615              		.loc 1 805 13 is_stmt 1 view .LVU926
 3616 05d6 02F1010B 		add	fp, r2, #1
 3617              	.LVL413:
 3618              		.loc 1 805 13 is_stmt 0 view .LVU927
 3619 05da 3B46     		mov	r3, r7
 3620 05dc 4946     		mov	r1, r9
 3621 05de 2020     		movs	r0, #32
 3622 05e0 C047     		blx	r8
 3623              	.LVL414:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3624              		.loc 1 804 19 view .LVU928
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 90


 3625 05e2 3346     		mov	r3, r6
 3626              		.loc 1 805 13 view .LVU929
 3627 05e4 5A46     		mov	r2, fp
 3628              	.LVL415:
 3629              	.L268:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3630              		.loc 1 804 22 is_stmt 1 view .LVU930
 804:Core/Src/printf.c ****           while (l++ < width) {
 3631              		.loc 1 804 19 is_stmt 0 view .LVU931
 3632 05e6 5E1C     		adds	r6, r3, #1
 3633              	.LVL416:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3634              		.loc 1 804 22 view .LVU932
 3635 05e8 9C42     		cmp	r4, r3
 3636 05ea F4D8     		bhi	.L270
 804:Core/Src/printf.c ****           while (l++ < width) {
 3637              		.loc 1 804 19 view .LVU933
 3638 05ec DDF830B0 		ldr	fp, [sp, #48]
 3639 05f0 2C46     		mov	r4, r5
 3640 05f2 3346     		mov	r3, r6
 3641 05f4 0C94     		str	r4, [sp, #48]
 3642 05f6 0A9E     		ldr	r6, [sp, #40]
 3643              	.LVL417:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3644              		.loc 1 804 19 view .LVU934
 3645 05f8 5D46     		mov	r5, fp
 3646 05fa 9B46     		mov	fp, r3
 3647 05fc 07E0     		b	.L271
 3648              	.LVL418:
 3649              	.L290:
 806:Core/Src/printf.c ****           }
 807:Core/Src/printf.c ****         }
 808:Core/Src/printf.c ****         // string output
 809:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 3650              		.loc 1 809 69 discriminator 2 view .LVU935
 3651 05fe 1E46     		mov	r6, r3
 3652              	.LVL419:
 3653              	.L273:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3654              		.loc 1 810 11 is_stmt 1 view .LVU936
 3655              		.loc 1 810 18 is_stmt 0 view .LVU937
 3656 0600 0AF1010A 		add	r10, r10, #1
 3657              	.LVL420:
 3658              		.loc 1 810 11 view .LVU938
 3659 0604 541C     		adds	r4, r2, #1
 3660              	.LVL421:
 3661              		.loc 1 810 11 view .LVU939
 3662 0606 3B46     		mov	r3, r7
 3663 0608 4946     		mov	r1, r9
 3664 060a C047     		blx	r8
 3665              	.LVL422:
 3666 060c 2246     		mov	r2, r4
 3667              	.LVL423:
 3668              	.L271:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3669              		.loc 1 809 26 is_stmt 1 view .LVU940
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 91


 3670              		.loc 1 809 17 is_stmt 0 view .LVU941
 3671 060e 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3672              		.loc 1 809 26 view .LVU942
 3673 0612 20B1     		cbz	r0, .L272
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3674              		.loc 1 809 26 discriminator 1 view .LVU943
 3675 0614 002D     		cmp	r5, #0
 3676 0616 F3D0     		beq	.L273
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3677              		.loc 1 809 69 discriminator 2 view .LVU944
 3678 0618 731E     		subs	r3, r6, #1
 3679              	.LVL424:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3680              		.loc 1 809 57 discriminator 2 view .LVU945
 3681 061a 002E     		cmp	r6, #0
 3682 061c EFD1     		bne	.L290
 3683              	.LVL425:
 3684              	.L272:
 811:Core/Src/printf.c ****         }
 812:Core/Src/printf.c ****         // post padding
 813:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 3685              		.loc 1 813 12 view .LVU946
 3686 061e 0C9C     		ldr	r4, [sp, #48]
 3687 0620 1546     		mov	r5, r2
 3688 0622 5B46     		mov	r3, fp
 3689              		.loc 1 813 9 is_stmt 1 view .LVU947
 3690              		.loc 1 813 12 is_stmt 0 view .LVU948
 3691 0624 1CB9     		cbnz	r4, .L317
 3692              	.LVL426:
 3693              	.L275:
 814:Core/Src/printf.c ****           while (l++ < width) {
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:Core/Src/printf.c ****           }
 817:Core/Src/printf.c ****         }
 818:Core/Src/printf.c ****         format++;
 3694              		.loc 1 818 9 is_stmt 1 view .LVU949
 3695              		.loc 1 818 15 is_stmt 0 view .LVU950
 3696 0626 0D9B     		ldr	r3, [sp, #52]
 3697 0628 0133     		adds	r3, r3, #1
 3698 062a 0D93     		str	r3, [sp, #52]
 819:Core/Src/printf.c ****         break;
 3699              		.loc 1 819 9 is_stmt 1 view .LVU951
 3700 062c FDE4     		b	.L277
 3701              	.LVL427:
 3702              	.L317:
 3703              		.loc 1 819 9 is_stmt 0 view .LVU952
 3704 062e 0B9E     		ldr	r6, [sp, #44]
 3705 0630 06E0     		b	.L274
 3706              	.LVL428:
 3707              	.L276:
 815:Core/Src/printf.c ****           }
 3708              		.loc 1 815 13 is_stmt 1 view .LVU953
 3709 0632 551C     		adds	r5, r2, #1
 3710              	.LVL429:
 815:Core/Src/printf.c ****           }
 3711              		.loc 1 815 13 is_stmt 0 view .LVU954
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 92


 3712 0634 3B46     		mov	r3, r7
 3713 0636 4946     		mov	r1, r9
 3714 0638 2020     		movs	r0, #32
 3715 063a C047     		blx	r8
 3716              	.LVL430:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3717              		.loc 1 814 19 view .LVU955
 3718 063c 2346     		mov	r3, r4
 815:Core/Src/printf.c ****           }
 3719              		.loc 1 815 13 view .LVU956
 3720 063e 2A46     		mov	r2, r5
 3721              	.LVL431:
 3722              	.L274:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3723              		.loc 1 814 22 is_stmt 1 view .LVU957
 814:Core/Src/printf.c ****           while (l++ < width) {
 3724              		.loc 1 814 19 is_stmt 0 view .LVU958
 3725 0640 5C1C     		adds	r4, r3, #1
 3726              	.LVL432:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3727              		.loc 1 814 22 view .LVU959
 3728 0642 9E42     		cmp	r6, r3
 3729 0644 F5D8     		bhi	.L276
 814:Core/Src/printf.c ****           while (l++ < width) {
 3730              		.loc 1 814 22 view .LVU960
 3731 0646 1546     		mov	r5, r2
 3732 0648 EDE7     		b	.L275
 3733              	.LVL433:
 3734              	.L223:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3735              		.loc 1 814 22 view .LVU961
 3736              	.LBE53:
 3737              	.LBB54:
 820:Core/Src/printf.c ****       }
 821:Core/Src/printf.c **** 
 822:Core/Src/printf.c ****       case 'p' : {
 823:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 3738              		.loc 1 823 9 is_stmt 1 view .LVU962
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3739              		.loc 1 824 9 view .LVU963
 3740              		.loc 1 824 15 is_stmt 0 view .LVU964
 3741 064a 46F02106 		orr	r6, r6, #33
 3742              	.LVL434:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 3743              		.loc 1 826 9 is_stmt 1 view .LVU965
 827:Core/Src/printf.c ****         if (is_ll) {
 3744              		.loc 1 827 9 view .LVU966
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:Core/Src/printf.c ****         }
 830:Core/Src/printf.c ****         else {
 831:Core/Src/printf.c **** #endif
 832:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 3745              		.loc 1 832 11 view .LVU967
 3746              		.loc 1 832 81 is_stmt 0 view .LVU968
 3747 064e 189B     		ldr	r3, [sp, #96]
 3748 0650 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 93


 3749 0652 1892     		str	r2, [sp, #96]
 3750 0654 1B68     		ldr	r3, [r3]
 3751              		.loc 1 832 17 discriminator 1 view .LVU969
 3752 0656 0596     		str	r6, [sp, #20]
 3753 0658 0822     		movs	r2, #8
 3754 065a 0492     		str	r2, [sp, #16]
 3755 065c 0A9A     		ldr	r2, [sp, #40]
 3756 065e 0392     		str	r2, [sp, #12]
 3757 0660 1022     		movs	r2, #16
 3758 0662 0292     		str	r2, [sp, #8]
 3759 0664 0022     		movs	r2, #0
 3760 0666 0192     		str	r2, [sp, #4]
 3761 0668 0093     		str	r3, [sp]
 3762 066a 3B46     		mov	r3, r7
 3763 066c 2A46     		mov	r2, r5
 3764 066e 4946     		mov	r1, r9
 3765 0670 4046     		mov	r0, r8
 3766 0672 FFF7FEFF 		bl	_ntoa_long
 3767              	.LVL435:
 3768 0676 0546     		mov	r5, r0
 3769              	.LVL436:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:Core/Src/printf.c ****         }
 835:Core/Src/printf.c **** #endif
 836:Core/Src/printf.c ****         format++;
 3770              		.loc 1 836 9 is_stmt 1 view .LVU970
 3771              		.loc 1 836 15 is_stmt 0 view .LVU971
 3772 0678 0D9B     		ldr	r3, [sp, #52]
 3773 067a 0133     		adds	r3, r3, #1
 3774 067c 0D93     		str	r3, [sp, #52]
 837:Core/Src/printf.c ****         break;
 3775              		.loc 1 837 9 is_stmt 1 view .LVU972
 3776 067e D4E4     		b	.L277
 3777              	.LVL437:
 3778              	.L229:
 3779              		.loc 1 837 9 is_stmt 0 view .LVU973
 3780              	.LBE54:
 838:Core/Src/printf.c ****       }
 839:Core/Src/printf.c **** 
 840:Core/Src/printf.c ****       case '%' :
 841:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 3781              		.loc 1 841 9 is_stmt 1 view .LVU974
 3782 0680 6C1C     		adds	r4, r5, #1
 3783              	.LVL438:
 3784              		.loc 1 841 9 is_stmt 0 view .LVU975
 3785 0682 3B46     		mov	r3, r7
 3786 0684 2A46     		mov	r2, r5
 3787 0686 4946     		mov	r1, r9
 3788 0688 2520     		movs	r0, #37
 3789 068a C047     		blx	r8
 3790              	.LVL439:
 842:Core/Src/printf.c ****         format++;
 3791              		.loc 1 842 9 is_stmt 1 view .LVU976
 3792              		.loc 1 842 15 is_stmt 0 view .LVU977
 3793 068c 0D9B     		ldr	r3, [sp, #52]
 3794 068e 0133     		adds	r3, r3, #1
 3795 0690 0D93     		str	r3, [sp, #52]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 94


 843:Core/Src/printf.c ****         break;
 3796              		.loc 1 843 9 is_stmt 1 view .LVU978
 841:Core/Src/printf.c ****         format++;
 3797              		.loc 1 841 9 is_stmt 0 view .LVU979
 3798 0692 2546     		mov	r5, r4
 3799              		.loc 1 843 9 view .LVU980
 3800 0694 C9E4     		b	.L277
 3801              	.LVL440:
 3802              	.L221:
 844:Core/Src/printf.c **** 
 845:Core/Src/printf.c ****       default :
 846:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 3803              		.loc 1 846 9 is_stmt 1 view .LVU981
 3804 0696 6C1C     		adds	r4, r5, #1
 3805              	.LVL441:
 3806              		.loc 1 846 9 is_stmt 0 view .LVU982
 3807 0698 3B46     		mov	r3, r7
 3808 069a 2A46     		mov	r2, r5
 3809 069c 4946     		mov	r1, r9
 3810 069e C047     		blx	r8
 3811              	.LVL442:
 847:Core/Src/printf.c ****         format++;
 3812              		.loc 1 847 9 is_stmt 1 view .LVU983
 3813              		.loc 1 847 15 is_stmt 0 view .LVU984
 3814 06a0 0D9B     		ldr	r3, [sp, #52]
 3815 06a2 0133     		adds	r3, r3, #1
 3816 06a4 0D93     		str	r3, [sp, #52]
 848:Core/Src/printf.c ****         break;
 3817              		.loc 1 848 9 is_stmt 1 view .LVU985
 846:Core/Src/printf.c ****         format++;
 3818              		.loc 1 846 9 is_stmt 0 view .LVU986
 3819 06a6 2546     		mov	r5, r4
 3820              		.loc 1 848 9 view .LVU987
 3821 06a8 BFE4     		b	.L277
 3822              	.LVL443:
 3823              	.L297:
 584:Core/Src/printf.c ****   }
 3824              		.loc 1 584 9 view .LVU988
 3825 06aa DFF82080 		ldr	r8, .L318
 3826 06ae B1E4     		b	.L194
 3827              	.LVL444:
 3828              	.L298:
 849:Core/Src/printf.c ****     }
 850:Core/Src/printf.c ****   }
 851:Core/Src/printf.c **** 
 852:Core/Src/printf.c ****   // termination
 853:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 3829              		.loc 1 853 3 is_stmt 1 view .LVU989
 3830 06b0 BD42     		cmp	r5, r7
 3831 06b2 08D3     		bcc	.L291
 3832              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU990
 3833 06b4 7A1E     		subs	r2, r7, #1
 3834              	.L279:
 3835              		.loc 1 853 3 discriminator 4 view .LVU991
 3836 06b6 3B46     		mov	r3, r7
 3837 06b8 4946     		mov	r1, r9
 3838 06ba 0020     		movs	r0, #0
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 95


 3839 06bc C047     		blx	r8
 3840              	.LVL445:
 854:Core/Src/printf.c **** 
 855:Core/Src/printf.c ****   // return written chars without terminating \0
 856:Core/Src/printf.c ****   return (int)idx;
 3841              		.loc 1 856 3 is_stmt 1 view .LVU992
 857:Core/Src/printf.c **** }
 3842              		.loc 1 857 1 is_stmt 0 view .LVU993
 3843 06be 2846     		mov	r0, r5
 3844 06c0 0FB0     		add	sp, sp, #60
 3845              	.LCFI30:
 3846              		.cfi_remember_state
 3847              		.cfi_def_cfa_offset 36
 3848              		@ sp needed
 3849 06c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3850              	.LVL446:
 3851              	.L291:
 3852              	.LCFI31:
 3853              		.cfi_restore_state
 853:Core/Src/printf.c **** 
 3854              		.loc 1 853 3 discriminator 2 view .LVU994
 3855 06c6 2A46     		mov	r2, r5
 3856 06c8 F5E7     		b	.L279
 3857              	.L319:
 3858 06ca 00BF     		.align	2
 3859              	.L318:
 3860 06cc 00000000 		.word	_out_null
 3861              		.cfi_endproc
 3862              	.LFE13:
 3864              		.section	.text._out_char,"ax",%progbits
 3865              		.align	1
 3866              		.syntax unified
 3867              		.thumb
 3868              		.thumb_func
 3870              	_out_char:
 3871              	.LVL447:
 3872              	.LFB2:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3873              		.loc 1 150 1 is_stmt 1 view -0
 3874              		.cfi_startproc
 3875              		@ args = 0, pretend = 0, frame = 0
 3876              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/printf.c ****   if (character) {
 3877              		.loc 1 151 3 view .LVU996
 151:Core/Src/printf.c ****   if (character) {
 3878              		.loc 1 151 17 view .LVU997
 151:Core/Src/printf.c ****   if (character) {
 3879              		.loc 1 151 28 view .LVU998
 152:Core/Src/printf.c ****     _putchar(character);
 3880              		.loc 1 152 3 view .LVU999
 152:Core/Src/printf.c ****     _putchar(character);
 3881              		.loc 1 152 6 is_stmt 0 view .LVU1000
 3882 0000 00B9     		cbnz	r0, .L326
 3883 0002 7047     		bx	lr
 3884              	.L326:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3885              		.loc 1 150 1 view .LVU1001
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 96


 3886 0004 08B5     		push	{r3, lr}
 3887              	.LCFI32:
 3888              		.cfi_def_cfa_offset 8
 3889              		.cfi_offset 3, -8
 3890              		.cfi_offset 14, -4
 153:Core/Src/printf.c ****   }
 3891              		.loc 1 153 5 is_stmt 1 view .LVU1002
 3892 0006 FFF7FEFF 		bl	_putchar
 3893              	.LVL448:
 155:Core/Src/printf.c **** 
 3894              		.loc 1 155 1 is_stmt 0 view .LVU1003
 3895 000a 08BD     		pop	{r3, pc}
 3896              		.cfi_endproc
 3897              	.LFE2:
 3899              		.section	.text.printf_,"ax",%progbits
 3900              		.align	1
 3901              		.global	printf_
 3902              		.syntax unified
 3903              		.thumb
 3904              		.thumb_func
 3906              	printf_:
 3907              	.LVL449:
 3908              	.LFB14:
 858:Core/Src/printf.c **** 
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:Core/Src/printf.c **** 
 862:Core/Src/printf.c **** int printf_(const char* format, ...)
 863:Core/Src/printf.c **** {
 3909              		.loc 1 863 1 is_stmt 1 view -0
 3910              		.cfi_startproc
 3911              		@ args = 4, pretend = 16, frame = 8
 3912              		@ frame_needed = 0, uses_anonymous_args = 1
 3913              		.loc 1 863 1 is_stmt 0 view .LVU1005
 3914 0000 0FB4     		push	{r0, r1, r2, r3}
 3915              	.LCFI33:
 3916              		.cfi_def_cfa_offset 16
 3917              		.cfi_offset 0, -16
 3918              		.cfi_offset 1, -12
 3919              		.cfi_offset 2, -8
 3920              		.cfi_offset 3, -4
 3921 0002 00B5     		push	{lr}
 3922              	.LCFI34:
 3923              		.cfi_def_cfa_offset 20
 3924              		.cfi_offset 14, -20
 3925 0004 85B0     		sub	sp, sp, #20
 3926              	.LCFI35:
 3927              		.cfi_def_cfa_offset 40
 3928 0006 06AA     		add	r2, sp, #24
 3929 0008 52F8043B 		ldr	r3, [r2], #4
 864:Core/Src/printf.c ****   va_list va;
 3930              		.loc 1 864 3 is_stmt 1 view .LVU1006
 865:Core/Src/printf.c ****   va_start(va, format);
 3931              		.loc 1 865 3 view .LVU1007
 3932 000c 0392     		str	r2, [sp, #12]
 866:Core/Src/printf.c ****   char buffer[1];
 3933              		.loc 1 866 3 view .LVU1008
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 97


 867:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 3934              		.loc 1 867 3 view .LVU1009
 3935              		.loc 1 867 19 is_stmt 0 view .LVU1010
 3936 000e 0092     		str	r2, [sp]
 3937 0010 4FF0FF32 		mov	r2, #-1
 3938 0014 02A9     		add	r1, sp, #8
 3939 0016 0448     		ldr	r0, .L329
 3940 0018 FFF7FEFF 		bl	_vsnprintf
 3941              	.LVL450:
 868:Core/Src/printf.c ****   va_end(va);
 3942              		.loc 1 868 3 is_stmt 1 view .LVU1011
 869:Core/Src/printf.c ****   return ret;
 3943              		.loc 1 869 3 view .LVU1012
 870:Core/Src/printf.c **** }
 3944              		.loc 1 870 1 is_stmt 0 view .LVU1013
 3945 001c 05B0     		add	sp, sp, #20
 3946              	.LCFI36:
 3947              		.cfi_def_cfa_offset 20
 3948              		@ sp needed
 3949 001e 5DF804EB 		ldr	lr, [sp], #4
 3950              	.LCFI37:
 3951              		.cfi_restore 14
 3952              		.cfi_def_cfa_offset 16
 3953 0022 04B0     		add	sp, sp, #16
 3954              	.LCFI38:
 3955              		.cfi_restore 3
 3956              		.cfi_restore 2
 3957              		.cfi_restore 1
 3958              		.cfi_restore 0
 3959              		.cfi_def_cfa_offset 0
 3960 0024 7047     		bx	lr
 3961              	.L330:
 3962 0026 00BF     		.align	2
 3963              	.L329:
 3964 0028 00000000 		.word	_out_char
 3965              		.cfi_endproc
 3966              	.LFE14:
 3968              		.section	.text.sprintf_,"ax",%progbits
 3969              		.align	1
 3970              		.global	sprintf_
 3971              		.syntax unified
 3972              		.thumb
 3973              		.thumb_func
 3975              	sprintf_:
 3976              	.LVL451:
 3977              	.LFB15:
 871:Core/Src/printf.c **** 
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:Core/Src/printf.c **** {
 3978              		.loc 1 874 1 is_stmt 1 view -0
 3979              		.cfi_startproc
 3980              		@ args = 4, pretend = 12, frame = 8
 3981              		@ frame_needed = 0, uses_anonymous_args = 1
 3982              		.loc 1 874 1 is_stmt 0 view .LVU1015
 3983 0000 0EB4     		push	{r1, r2, r3}
 3984              	.LCFI39:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 98


 3985              		.cfi_def_cfa_offset 12
 3986              		.cfi_offset 1, -12
 3987              		.cfi_offset 2, -8
 3988              		.cfi_offset 3, -4
 3989 0002 00B5     		push	{lr}
 3990              	.LCFI40:
 3991              		.cfi_def_cfa_offset 16
 3992              		.cfi_offset 14, -16
 3993 0004 84B0     		sub	sp, sp, #16
 3994              	.LCFI41:
 3995              		.cfi_def_cfa_offset 32
 3996 0006 0146     		mov	r1, r0
 3997 0008 05AA     		add	r2, sp, #20
 3998 000a 52F8043B 		ldr	r3, [r2], #4
 875:Core/Src/printf.c ****   va_list va;
 3999              		.loc 1 875 3 is_stmt 1 view .LVU1016
 876:Core/Src/printf.c ****   va_start(va, format);
 4000              		.loc 1 876 3 view .LVU1017
 4001 000e 0392     		str	r2, [sp, #12]
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 4002              		.loc 1 877 3 view .LVU1018
 4003              		.loc 1 877 19 is_stmt 0 view .LVU1019
 4004 0010 0092     		str	r2, [sp]
 4005 0012 4FF0FF32 		mov	r2, #-1
 4006 0016 0448     		ldr	r0, .L333
 4007              	.LVL452:
 4008              		.loc 1 877 19 view .LVU1020
 4009 0018 FFF7FEFF 		bl	_vsnprintf
 4010              	.LVL453:
 878:Core/Src/printf.c ****   va_end(va);
 4011              		.loc 1 878 3 is_stmt 1 view .LVU1021
 879:Core/Src/printf.c ****   return ret;
 4012              		.loc 1 879 3 view .LVU1022
 880:Core/Src/printf.c **** }
 4013              		.loc 1 880 1 is_stmt 0 view .LVU1023
 4014 001c 04B0     		add	sp, sp, #16
 4015              	.LCFI42:
 4016              		.cfi_def_cfa_offset 16
 4017              		@ sp needed
 4018 001e 5DF804EB 		ldr	lr, [sp], #4
 4019              	.LCFI43:
 4020              		.cfi_restore 14
 4021              		.cfi_def_cfa_offset 12
 4022 0022 03B0     		add	sp, sp, #12
 4023              	.LCFI44:
 4024              		.cfi_restore 3
 4025              		.cfi_restore 2
 4026              		.cfi_restore 1
 4027              		.cfi_def_cfa_offset 0
 4028 0024 7047     		bx	lr
 4029              	.L334:
 4030 0026 00BF     		.align	2
 4031              	.L333:
 4032 0028 00000000 		.word	_out_buffer
 4033              		.cfi_endproc
 4034              	.LFE15:
 4036              		.section	.text.snprintf_,"ax",%progbits
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 99


 4037              		.align	1
 4038              		.global	snprintf_
 4039              		.syntax unified
 4040              		.thumb
 4041              		.thumb_func
 4043              	snprintf_:
 4044              	.LVL454:
 4045              	.LFB16:
 881:Core/Src/printf.c **** 
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 884:Core/Src/printf.c **** {
 4046              		.loc 1 884 1 is_stmt 1 view -0
 4047              		.cfi_startproc
 4048              		@ args = 4, pretend = 8, frame = 8
 4049              		@ frame_needed = 0, uses_anonymous_args = 1
 4050              		.loc 1 884 1 is_stmt 0 view .LVU1025
 4051 0000 0CB4     		push	{r2, r3}
 4052              	.LCFI45:
 4053              		.cfi_def_cfa_offset 8
 4054              		.cfi_offset 2, -8
 4055              		.cfi_offset 3, -4
 4056 0002 10B5     		push	{r4, lr}
 4057              	.LCFI46:
 4058              		.cfi_def_cfa_offset 16
 4059              		.cfi_offset 4, -16
 4060              		.cfi_offset 14, -12
 4061 0004 84B0     		sub	sp, sp, #16
 4062              	.LCFI47:
 4063              		.cfi_def_cfa_offset 32
 4064 0006 0A46     		mov	r2, r1
 4065 0008 06AC     		add	r4, sp, #24
 4066 000a 54F8043B 		ldr	r3, [r4], #4
 885:Core/Src/printf.c ****   va_list va;
 4067              		.loc 1 885 3 is_stmt 1 view .LVU1026
 886:Core/Src/printf.c ****   va_start(va, format);
 4068              		.loc 1 886 3 view .LVU1027
 4069 000e 0394     		str	r4, [sp, #12]
 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 4070              		.loc 1 887 3 view .LVU1028
 4071              		.loc 1 887 19 is_stmt 0 view .LVU1029
 4072 0010 0094     		str	r4, [sp]
 4073 0012 0146     		mov	r1, r0
 4074              	.LVL455:
 4075              		.loc 1 887 19 view .LVU1030
 4076 0014 0348     		ldr	r0, .L337
 4077              	.LVL456:
 4078              		.loc 1 887 19 view .LVU1031
 4079 0016 FFF7FEFF 		bl	_vsnprintf
 4080              	.LVL457:
 888:Core/Src/printf.c ****   va_end(va);
 4081              		.loc 1 888 3 is_stmt 1 view .LVU1032
 889:Core/Src/printf.c ****   return ret;
 4082              		.loc 1 889 3 view .LVU1033
 890:Core/Src/printf.c **** }
 4083              		.loc 1 890 1 is_stmt 0 view .LVU1034
 4084 001a 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 100


 4085              	.LCFI48:
 4086              		.cfi_def_cfa_offset 16
 4087              		@ sp needed
 4088 001c BDE81040 		pop	{r4, lr}
 4089              	.LCFI49:
 4090              		.cfi_restore 14
 4091              		.cfi_restore 4
 4092              		.cfi_def_cfa_offset 8
 4093 0020 02B0     		add	sp, sp, #8
 4094              	.LCFI50:
 4095              		.cfi_restore 3
 4096              		.cfi_restore 2
 4097              		.cfi_def_cfa_offset 0
 4098 0022 7047     		bx	lr
 4099              	.L338:
 4100              		.align	2
 4101              	.L337:
 4102 0024 00000000 		.word	_out_buffer
 4103              		.cfi_endproc
 4104              	.LFE16:
 4106              		.section	.text.vprintf_,"ax",%progbits
 4107              		.align	1
 4108              		.global	vprintf_
 4109              		.syntax unified
 4110              		.thumb
 4111              		.thumb_func
 4113              	vprintf_:
 4114              	.LVL458:
 4115              	.LFB17:
 891:Core/Src/printf.c **** 
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 894:Core/Src/printf.c **** {
 4116              		.loc 1 894 1 is_stmt 1 view -0
 4117              		.cfi_startproc
 4118              		@ args = 0, pretend = 0, frame = 8
 4119              		@ frame_needed = 0, uses_anonymous_args = 0
 4120              		.loc 1 894 1 is_stmt 0 view .LVU1036
 4121 0000 00B5     		push	{lr}
 4122              	.LCFI51:
 4123              		.cfi_def_cfa_offset 4
 4124              		.cfi_offset 14, -4
 4125 0002 85B0     		sub	sp, sp, #20
 4126              	.LCFI52:
 4127              		.cfi_def_cfa_offset 24
 4128 0004 0346     		mov	r3, r0
 895:Core/Src/printf.c ****   char buffer[1];
 4129              		.loc 1 895 3 is_stmt 1 view .LVU1037
 896:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4130              		.loc 1 896 3 view .LVU1038
 4131              		.loc 1 896 10 is_stmt 0 view .LVU1039
 4132 0006 0091     		str	r1, [sp]
 4133 0008 4FF0FF32 		mov	r2, #-1
 4134 000c 03A9     		add	r1, sp, #12
 4135              	.LVL459:
 4136              		.loc 1 896 10 view .LVU1040
 4137 000e 0348     		ldr	r0, .L341
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 101


 4138              	.LVL460:
 4139              		.loc 1 896 10 view .LVU1041
 4140 0010 FFF7FEFF 		bl	_vsnprintf
 4141              	.LVL461:
 897:Core/Src/printf.c **** }
 4142              		.loc 1 897 1 view .LVU1042
 4143 0014 05B0     		add	sp, sp, #20
 4144              	.LCFI53:
 4145              		.cfi_def_cfa_offset 4
 4146              		@ sp needed
 4147 0016 5DF804FB 		ldr	pc, [sp], #4
 4148              	.L342:
 4149 001a 00BF     		.align	2
 4150              	.L341:
 4151 001c 00000000 		.word	_out_char
 4152              		.cfi_endproc
 4153              	.LFE17:
 4155              		.section	.text.vsnprintf_,"ax",%progbits
 4156              		.align	1
 4157              		.global	vsnprintf_
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4162              	vsnprintf_:
 4163              	.LVL462:
 4164              	.LFB18:
 898:Core/Src/printf.c **** 
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:Core/Src/printf.c **** {
 4165              		.loc 1 901 1 is_stmt 1 view -0
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 0
 4168              		@ frame_needed = 0, uses_anonymous_args = 0
 4169              		.loc 1 901 1 is_stmt 0 view .LVU1044
 4170 0000 00B5     		push	{lr}
 4171              	.LCFI54:
 4172              		.cfi_def_cfa_offset 4
 4173              		.cfi_offset 14, -4
 4174 0002 83B0     		sub	sp, sp, #12
 4175              	.LCFI55:
 4176              		.cfi_def_cfa_offset 16
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 4177              		.loc 1 902 3 is_stmt 1 view .LVU1045
 4178              		.loc 1 902 10 is_stmt 0 view .LVU1046
 4179 0004 0093     		str	r3, [sp]
 4180 0006 1346     		mov	r3, r2
 4181              	.LVL463:
 4182              		.loc 1 902 10 view .LVU1047
 4183 0008 0A46     		mov	r2, r1
 4184              	.LVL464:
 4185              		.loc 1 902 10 view .LVU1048
 4186 000a 0146     		mov	r1, r0
 4187              	.LVL465:
 4188              		.loc 1 902 10 view .LVU1049
 4189 000c 0248     		ldr	r0, .L345
 4190              	.LVL466:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 102


 4191              		.loc 1 902 10 view .LVU1050
 4192 000e FFF7FEFF 		bl	_vsnprintf
 4193              	.LVL467:
 903:Core/Src/printf.c **** }
 4194              		.loc 1 903 1 view .LVU1051
 4195 0012 03B0     		add	sp, sp, #12
 4196              	.LCFI56:
 4197              		.cfi_def_cfa_offset 4
 4198              		@ sp needed
 4199 0014 5DF804FB 		ldr	pc, [sp], #4
 4200              	.L346:
 4201              		.align	2
 4202              	.L345:
 4203 0018 00000000 		.word	_out_buffer
 4204              		.cfi_endproc
 4205              	.LFE18:
 4207              		.section	.text.fctprintf,"ax",%progbits
 4208              		.align	1
 4209              		.global	fctprintf
 4210              		.syntax unified
 4211              		.thumb
 4212              		.thumb_func
 4214              	fctprintf:
 4215              	.LVL468:
 4216              	.LFB19:
 904:Core/Src/printf.c **** 
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:Core/Src/printf.c **** {
 4217              		.loc 1 907 1 is_stmt 1 view -0
 4218              		.cfi_startproc
 4219              		@ args = 4, pretend = 8, frame = 16
 4220              		@ frame_needed = 0, uses_anonymous_args = 1
 4221              		.loc 1 907 1 is_stmt 0 view .LVU1053
 4222 0000 0CB4     		push	{r2, r3}
 4223              	.LCFI57:
 4224              		.cfi_def_cfa_offset 8
 4225              		.cfi_offset 2, -8
 4226              		.cfi_offset 3, -4
 4227 0002 00B5     		push	{lr}
 4228              	.LCFI58:
 4229              		.cfi_def_cfa_offset 12
 4230              		.cfi_offset 14, -12
 4231 0004 87B0     		sub	sp, sp, #28
 4232              	.LCFI59:
 4233              		.cfi_def_cfa_offset 40
 4234 0006 08AA     		add	r2, sp, #32
 4235 0008 52F8043B 		ldr	r3, [r2], #4
 908:Core/Src/printf.c ****   va_list va;
 4236              		.loc 1 908 3 is_stmt 1 view .LVU1054
 909:Core/Src/printf.c ****   va_start(va, format);
 4237              		.loc 1 909 3 view .LVU1055
 4238 000c 0592     		str	r2, [sp, #20]
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 4239              		.loc 1 910 3 view .LVU1056
 4240              		.loc 1 910 27 is_stmt 0 view .LVU1057
 4241 000e 0390     		str	r0, [sp, #12]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 103


 4242 0010 0491     		str	r1, [sp, #16]
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 4243              		.loc 1 911 3 is_stmt 1 view .LVU1058
 4244              		.loc 1 911 19 is_stmt 0 view .LVU1059
 4245 0012 0092     		str	r2, [sp]
 4246 0014 4FF0FF32 		mov	r2, #-1
 4247 0018 03A9     		add	r1, sp, #12
 4248              	.LVL469:
 4249              		.loc 1 911 19 view .LVU1060
 4250 001a 0448     		ldr	r0, .L349
 4251              	.LVL470:
 4252              		.loc 1 911 19 view .LVU1061
 4253 001c FFF7FEFF 		bl	_vsnprintf
 4254              	.LVL471:
 912:Core/Src/printf.c ****   va_end(va);
 4255              		.loc 1 912 3 is_stmt 1 view .LVU1062
 913:Core/Src/printf.c ****   return ret;
 4256              		.loc 1 913 3 view .LVU1063
 914:Core/Src/printf.c **** }
 4257              		.loc 1 914 1 is_stmt 0 view .LVU1064
 4258 0020 07B0     		add	sp, sp, #28
 4259              	.LCFI60:
 4260              		.cfi_def_cfa_offset 12
 4261              		@ sp needed
 4262 0022 5DF804EB 		ldr	lr, [sp], #4
 4263              	.LCFI61:
 4264              		.cfi_restore 14
 4265              		.cfi_def_cfa_offset 8
 4266 0026 02B0     		add	sp, sp, #8
 4267              	.LCFI62:
 4268              		.cfi_restore 3
 4269              		.cfi_restore 2
 4270              		.cfi_def_cfa_offset 0
 4271 0028 7047     		bx	lr
 4272              	.L350:
 4273 002a 00BF     		.align	2
 4274              	.L349:
 4275 002c 00000000 		.word	_out_fct
 4276              		.cfi_endproc
 4277              	.LFE19:
 4279              		.section	.rodata.pow10.0,"a"
 4280              		.align	3
 4283              	pow10.0:
 4284 0000 00000000 		.word	0
 4285 0004 0000F03F 		.word	1072693248
 4286 0008 00000000 		.word	0
 4287 000c 00002440 		.word	1076101120
 4288 0010 00000000 		.word	0
 4289 0014 00005940 		.word	1079574528
 4290 0018 00000000 		.word	0
 4291 001c 00408F40 		.word	1083129856
 4292 0020 00000000 		.word	0
 4293 0024 0088C340 		.word	1086556160
 4294 0028 00000000 		.word	0
 4295 002c 006AF840 		.word	1090021888
 4296 0030 00000000 		.word	0
 4297 0034 80842E41 		.word	1093567616
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 104


 4298 0038 00000000 		.word	0
 4299 003c D0126341 		.word	1097011920
 4300 0040 00000000 		.word	0
 4301 0044 84D79741 		.word	1100470148
 4302 0048 00000000 		.word	0
 4303 004c 65CDCD41 		.word	1104006501
 4304              		.text
 4305              	.Letext0:
 4306              		.file 2 "D:/DATN/RealTimeMonitoring/GUI_Python/SerialCommunicator/Tool/ArmGnuToolchain/arm-none-ea
 4307              		.file 3 "D:/DATN/RealTimeMonitoring/GUI_Python/SerialCommunicator/Tool/ArmGnuToolchain/arm-none-ea
 4308              		.file 4 "D:/DATN/RealTimeMonitoring/GUI_Python/SerialCommunicator/Tool/ArmGnuToolchain/lib/gcc/arm
 4309              		.file 5 "D:/DATN/RealTimeMonitoring/GUI_Python/SerialCommunicator/Tool/ArmGnuToolchain/lib/gcc/arm
 4310              		.file 6 "<built-in>"
 4311              		.file 7 "Core/Inc/printf.h"
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 105


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:21     .text._out_buffer:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:26     .text._out_buffer:00000000 _out_buffer
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:48     .text._out_null:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:53     .text._out_null:00000000 _out_null
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:71     .text._out_fct:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:76     .text._out_fct:00000000 _out_fct
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:118    .text._atoi:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:123    .text._atoi:00000000 _atoi
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:186    .text._out_rev:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:191    .text._out_rev:00000000 _out_rev
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:326    .text._ntoa_format:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:331    .text._ntoa_format:00000000 _ntoa_format
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:619    .text._ntoa_long:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:624    .text._ntoa_long:00000000 _ntoa_long
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:771    .text._ntoa_long_long:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:776    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:948    .text._etoa:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:953    .text._etoa:00000000 _etoa
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:1634   .text._ftoa:00000000 _ftoa
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:1438   .text._etoa:000002b0 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:1466   .text._etoa:00000314 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:1616   .rodata._ftoa.str1.4:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:1629   .text._ftoa:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2213   .text._ftoa:000002e0 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4283   .rodata.pow10.0:00000000 pow10.0
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2232   .text._ftoa:00000314 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2318   .text._vsnprintf:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2323   .text._vsnprintf:00000000 _vsnprintf
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2512   .text._vsnprintf:00000090 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2530   .text._vsnprintf:000000d4 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2587   .text._vsnprintf:00000102 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2806   .text._vsnprintf:000001d4 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2873   .text._vsnprintf:0000025a $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3860   .text._vsnprintf:000006cc $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3865   .text._out_char:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3870   .text._out_char:00000000 _out_char
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3900   .text.printf_:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3906   .text.printf_:00000000 printf_
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3964   .text.printf_:00000028 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3969   .text.sprintf_:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:3975   .text.sprintf_:00000000 sprintf_
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4032   .text.sprintf_:00000028 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4037   .text.snprintf_:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4043   .text.snprintf_:00000000 snprintf_
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4102   .text.snprintf_:00000024 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4107   .text.vprintf_:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4113   .text.vprintf_:00000000 vprintf_
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4151   .text.vprintf_:0000001c $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4156   .text.vsnprintf_:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4162   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4203   .text.vsnprintf_:00000018 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4208   .text.fctprintf:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4214   .text.fctprintf:00000000 fctprintf
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4275   .text.fctprintf:0000002c $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:4280   .rodata.pow10.0:00000000 $d
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s 			page 106


C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2607   .text._vsnprintf:00000115 $d
C:\Users\CuongLe\AppData\Local\Temp\ccabtiPV.s:2607   .text._vsnprintf:00000116 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmple
_putchar
